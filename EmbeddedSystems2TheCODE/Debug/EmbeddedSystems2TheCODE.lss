
EmbeddedSystems2TheCODE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001c  00800100  00001a1c  00001ab0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a1c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000424  0080011c  0080011c  00001acc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001acc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001afc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00001b3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000307b  00000000  00000000  00001df4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f54  00000000  00000000  00004e6f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015ae  00000000  00000000  00005dc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a70  00000000  00000000  00007374  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000099a  00000000  00000000  00007de4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002ecd  00000000  00000000  0000877e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c8  00000000  00000000  0000b64b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <__ctors_end>
       4:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
       8:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
       c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      10:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__vector_4>
      14:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      18:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      1c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      20:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      24:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      28:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      2c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      30:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      34:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      38:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      3c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      40:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      44:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      48:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__vector_18>
      4c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      50:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      54:	0c 94 bf 05 	jmp	0xb7e	; 0xb7e <__vector_21>
      58:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      5c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      60:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      64:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__vector_4+0x66>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <lcd_putc+0x3c>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <init_sequence+0xe>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <ssd1306oled_font+0x2a>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <ssd1306oled_font+0x6c>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <ssd1306oled_font>:
	...
     16a:	00 2f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14     ./..............
     17a:	00 24 2a 7f 2a 12 00 62 64 08 13 23 00 36 49 55     .$*.*..bd..#.6IU
     18a:	22 50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00     "P........."A...
     19a:	41 22 1c 00 00 14 08 3e 08 14 00 08 08 3e 08 08     A".....>.....>..
     1aa:	00 00 00 a0 60 00 00 08 08 08 08 08 00 00 60 60     ....`.........``
     1ba:	00 00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00     ... .....>QIE>..
     1ca:	42 7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31     B.@..BaQIF.!AEK1
     1da:	00 18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49     .......'EEE9.<JI
     1ea:	49 30 00 01 71 09 05 03 00 36 49 49 49 36 00 06     I0..q....6III6..
     1fa:	49 49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00     II)...66....V6..
     20a:	00 08 14 22 41 00 00 14 14 14 14 14 00 00 41 22     ..."A.........A"
     21a:	14 08 00 02 01 51 09 06 00 32 49 59 51 3e 00 7c     .....Q...2IYQ>.|
     22a:	12 11 12 7c 00 7f 49 49 49 36 00 3e 41 41 41 22     ...|..III6.>AAA"
     23a:	00 7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09     ..AA"...IIIA....
     24a:	09 01 00 3e 41 49 49 7a 00 7f 08 08 08 7f 00 00     ...>AIIz........
     25a:	41 7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41     A.A.. @A?....."A
     26a:	00 7f 40 40 40 40 00 7f 02 0c 02 7f 00 7f 04 08     ..@@@@..........
     27a:	10 7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e     ...>AAA>.......>
     28a:	41 51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31     AQ!^....)F.FIII1
     29a:	00 01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40     .......?@@@?.. @
     2aa:	20 1f 00 3f 40 38 40 3f 00 63 14 08 14 63 00 07      ..?@8@?.c...c..
     2ba:	08 70 08 07 00 61 51 49 45 43 00 00 7f 41 41 00     .p...aQIEC...AA.
     2ca:	00 55 2a 55 2a 55 00 00 41 41 7f 00 00 04 02 01     .U*U*U..AA......
     2da:	02 04 00 40 40 40 40 40 00 00 01 02 04 00 00 20     ...@@@@@....... 
     2ea:	54 54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20     TTTx..HDD8.8DDD 
     2fa:	00 38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09     .8DDH..8TTT...~.
     30a:	01 02 00 18 a4 a4 a4 7c 00 7f 08 04 04 78 00 00     .......|.....x..
     31a:	44 7d 40 00 00 40 80 84 7d 00 00 7f 10 28 44 00     D}@..@..}....(D.
     32a:	00 00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04     ..A.@..|...x.|..
     33a:	04 78 00 38 44 44 44 38 00 fc 24 24 24 18 00 18     .x.8DDD8..$$$...
     34a:	24 24 18 fc 00 7c 08 04 04 08 00 48 54 54 54 20     $$...|.....HTTT 
     35a:	00 04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40     ..?D@ .<@@ |.. @
     36a:	20 1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 1c      ..<@0@<.D(.(D..
     37a:	a0 a0 a0 7c 00 44 64 54 4c 44 00 00 08 77 41 00     ...|.DdTLD...wA.
     38a:	00 00 00 63 00 00 00 00 41 77 08 00 00 08 04 08     ...c....Aw......
     39a:	08 04 00 3a 40 40 20 7a 00 3d 40 40 40 3d 00 21     ...:@@ z.=@@@=.!
     3aa:	54 54 54 79 00 7d 12 11 12 7d 00 39 44 44 44 39     TTTy.}...}.9DDD9
     3ba:	00 3d 42 42 42 3d 00 02 05 02 00 00 00 7e 01 49     .=BBB=.......~.I
     3ca:	55 73 00 7c 10 10 08 1c                             Us.|....

000003d2 <init_sequence>:
     3d2:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
     3e2:	00 d5 f0 d9 22 da 12 db 20 8d 14 00                 ...."... ...

000003ee <__ctors_end>:
     3ee:	11 24       	eor	r1, r1
     3f0:	1f be       	out	0x3f, r1	; 63
     3f2:	cf ef       	ldi	r28, 0xFF	; 255
     3f4:	d8 e0       	ldi	r29, 0x08	; 8
     3f6:	de bf       	out	0x3e, r29	; 62
     3f8:	cd bf       	out	0x3d, r28	; 61

000003fa <__do_copy_data>:
     3fa:	11 e0       	ldi	r17, 0x01	; 1
     3fc:	a0 e0       	ldi	r26, 0x00	; 0
     3fe:	b1 e0       	ldi	r27, 0x01	; 1
     400:	ec e1       	ldi	r30, 0x1C	; 28
     402:	fa e1       	ldi	r31, 0x1A	; 26
     404:	02 c0       	rjmp	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     406:	05 90       	lpm	r0, Z+
     408:	0d 92       	st	X+, r0
     40a:	ac 31       	cpi	r26, 0x1C	; 28
     40c:	b1 07       	cpc	r27, r17
     40e:	d9 f7       	brne	.-10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>

00000410 <__do_clear_bss>:
     410:	25 e0       	ldi	r18, 0x05	; 5
     412:	ac e1       	ldi	r26, 0x1C	; 28
     414:	b1 e0       	ldi	r27, 0x01	; 1
     416:	01 c0       	rjmp	.+2      	; 0x41a <.do_clear_bss_start>

00000418 <.do_clear_bss_loop>:
     418:	1d 92       	st	X+, r1

0000041a <.do_clear_bss_start>:
     41a:	a0 34       	cpi	r26, 0x40	; 64
     41c:	b2 07       	cpc	r27, r18
     41e:	e1 f7       	brne	.-8      	; 0x418 <.do_clear_bss_loop>
     420:	0e 94 0d 06 	call	0xc1a	; 0xc1a <main>
     424:	0c 94 0c 0d 	jmp	0x1a18	; 0x1a18 <_exit>

00000428 <__bad_interrupt>:
     428:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000042c <i2c_init>:
            break;
        case 64:
            TWSR = 0x3;
            break;
        default:
            TWSR = 0x00;
     42c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
            break;
    }
    TWBR = (uint8_t)SET_TWBR;
     430:	88 e4       	ldi	r24, 0x48	; 72
     432:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    // enable
    TWCR = (1 << TWEN);
     436:	84 e0       	ldi	r24, 0x04	; 4
     438:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     43c:	08 95       	ret

0000043e <i2c_start>:
*                                                                       *
*Anropar:void													        *
************************************************************************/
void i2c_start(uint8_t i2c_addr){
	// i2c start
	TWCR = 0xA4;//(1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
     43e:	94 ea       	ldi	r25, 0xA4	; 164
     440:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while((TWCR & (1 << TWINT)) == 0);
     444:	ec eb       	ldi	r30, 0xBC	; 188
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	90 81       	ld	r25, Z
     44a:	99 23       	and	r25, r25
     44c:	ec f7       	brge	.-6      	; 0x448 <i2c_start+0xa>
	
	// send adress
	TWDR = i2c_addr;
     44e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = 0x84;//(1 << TWINT)|( 1 << TWEN);
     452:	84 e8       	ldi	r24, 0x84	; 132
     454:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while((TWCR & (1 << 7)) == 0);//(1 << TWINT)) == 0);
     458:	ec eb       	ldi	r30, 0xBC	; 188
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	88 23       	and	r24, r24
     460:	ec f7       	brge	.-6      	; 0x45c <i2c_start+0x1e>
	}
     462:	08 95       	ret

00000464 <i2c_stop>:
*                                                                       *
*Anropar:void													        *
************************************************************************/
void i2c_stop(void){
    // i2c stop
    TWCR = 0x94;//(1 << TWINT)|(1 << TWSTO)|(1 << TWEN);//or 0x94
     464:	84 e9       	ldi	r24, 0x94	; 148
     466:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     46a:	08 95       	ret

0000046c <i2c_byte>:
*Utdata: void								                            *
*                                                                       *
*Anropar:void													        *
************************************************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
     46c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    TWCR = 0x84;// (1 << TWINT)|( 1 << TWEN);
     470:	84 e8       	ldi	r24, 0x84	; 132
     472:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    while((TWCR & (1 << TWINT)) == 0);
     476:	ec eb       	ldi	r30, 0xBC	; 188
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	80 81       	ld	r24, Z
     47c:	88 23       	and	r24, r24
     47e:	ec f7       	brge	.-6      	; 0x47a <i2c_byte+0xe>
}
     480:	08 95       	ret

00000482 <i2c_readAck>:
*Utdata: The received value from the bus                                *
*                                                                       *
*Anropar: void  												        *
************************************************************************/
uint8_t i2c_readAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
     482:	84 ec       	ldi	r24, 0xC4	; 196
     484:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     488:	80 e4       	ldi	r24, 0x40	; 64
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	ec eb       	ldi	r30, 0xBC	; 188
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	09 c0       	rjmp	.+18     	; 0x4a4 <i2c_readAck+0x22>
     492:	01 97       	sbiw	r24, 0x01	; 1
		  timeout !=0){
		timeout--;
		if(timeout == 0){
     494:	39 f4       	brne	.+14     	; 0x4a4 <i2c_readAck+0x22>
			I2C_ErrorCode |= (1 << I2C_READACK);
     496:	80 91 1f 05 	lds	r24, 0x051F	; 0x80051f <I2C_ErrorCode>
     49a:	88 60       	ori	r24, 0x08	; 8
     49c:	80 93 1f 05 	sts	0x051F, r24	; 0x80051f <I2C_ErrorCode>
			return 0;
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	08 95       	ret
*Anropar: void  												        *
************************************************************************/
uint8_t i2c_readAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     4a4:	20 81       	ld	r18, Z
     4a6:	22 23       	and	r18, r18
     4a8:	a4 f7       	brge	.-24     	; 0x492 <i2c_readAck+0x10>
		if(timeout == 0){
			I2C_ErrorCode |= (1 << I2C_READACK);
			return 0;
		}
	};
    return TWDR;
     4aa:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     4ae:	08 95       	ret

000004b0 <i2c_readNAck>:
 *Utdata: The received value from the bus                                *
 *                                                                       *
 *Anropar: void  												         *
 ************************************************************************/
uint8_t i2c_readNAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN);
     4b0:	84 e8       	ldi	r24, 0x84	; 132
     4b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    while((TWCR & (1 << TWINT)) == 0);
     4b6:	ec eb       	ldi	r30, 0xBC	; 188
     4b8:	f0 e0       	ldi	r31, 0x00	; 0
     4ba:	80 81       	ld	r24, Z
     4bc:	88 23       	and	r24, r24
     4be:	ec f7       	brge	.-6      	; 0x4ba <i2c_readNAck+0xa>
    return TWDR;
     4c0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     4c4:	08 95       	ret

000004c6 <lcd_command>:
            } else {
                lcd_drawPixel(x+i, y+j, !color);
            }
        }
    }
}
     4c6:	ef 92       	push	r14
     4c8:	ff 92       	push	r15
     4ca:	0f 93       	push	r16
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	7c 01       	movw	r14, r24
     4d4:	16 2f       	mov	r17, r22
     4d6:	88 e7       	ldi	r24, 0x78	; 120
     4d8:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     4e2:	11 23       	and	r17, r17
     4e4:	71 f0       	breq	.+28     	; 0x502 <lcd_command+0x3c>
     4e6:	e7 01       	movw	r28, r14
     4e8:	11 50       	subi	r17, 0x01	; 1
     4ea:	01 2f       	mov	r16, r17
     4ec:	10 e0       	ldi	r17, 0x00	; 0
     4ee:	0f 5f       	subi	r16, 0xFF	; 255
     4f0:	1f 4f       	sbci	r17, 0xFF	; 255
     4f2:	0e 0d       	add	r16, r14
     4f4:	1f 1d       	adc	r17, r15
     4f6:	89 91       	ld	r24, Y+
     4f8:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     4fc:	c0 17       	cp	r28, r16
     4fe:	d1 07       	cpc	r29, r17
     500:	d1 f7       	brne	.-12     	; 0x4f6 <lcd_command+0x30>
     502:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	1f 91       	pop	r17
     50c:	0f 91       	pop	r16
     50e:	ff 90       	pop	r15
     510:	ef 90       	pop	r14
     512:	08 95       	ret

00000514 <lcd_data>:
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	7c 01       	movw	r14, r24
     522:	8b 01       	movw	r16, r22
     524:	88 e7       	ldi	r24, 0x78	; 120
     526:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     52a:	80 e4       	ldi	r24, 0x40	; 64
     52c:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     530:	01 15       	cp	r16, r1
     532:	11 05       	cpc	r17, r1
     534:	49 f0       	breq	.+18     	; 0x548 <lcd_data+0x34>
     536:	e7 01       	movw	r28, r14
     538:	0e 0d       	add	r16, r14
     53a:	1f 1d       	adc	r17, r15
     53c:	89 91       	ld	r24, Y+
     53e:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     542:	c0 17       	cp	r28, r16
     544:	d1 07       	cpc	r29, r17
     546:	d1 f7       	brne	.-12     	; 0x53c <lcd_data+0x28>
     548:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     54c:	df 91       	pop	r29
     54e:	cf 91       	pop	r28
     550:	1f 91       	pop	r17
     552:	0f 91       	pop	r16
     554:	ff 90       	pop	r15
     556:	ef 90       	pop	r14
     558:	08 95       	ret

0000055a <lcd_gotoxy>:
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	00 d0       	rcall	.+0      	; 0x560 <lcd_gotoxy+0x6>
     560:	00 d0       	rcall	.+0      	; 0x562 <lcd_gotoxy+0x8>
     562:	1f 92       	push	r1
     564:	cd b7       	in	r28, 0x3d	; 61
     566:	de b7       	in	r29, 0x3e	; 62
     568:	86 31       	cpi	r24, 0x16	; 22
     56a:	38 f5       	brcc	.+78     	; 0x5ba <lcd_gotoxy+0x60>
     56c:	68 30       	cpi	r22, 0x08	; 8
     56e:	28 f5       	brcc	.+74     	; 0x5ba <lcd_gotoxy+0x60>
     570:	98 2f       	mov	r25, r24
     572:	99 0f       	add	r25, r25
     574:	89 0f       	add	r24, r25
     576:	88 0f       	add	r24, r24
     578:	ec e1       	ldi	r30, 0x1C	; 28
     57a:	f5 e0       	ldi	r31, 0x05	; 5
     57c:	80 83       	st	Z, r24
     57e:	61 83       	std	Z+1, r22	; 0x01
     580:	60 55       	subi	r22, 0x50	; 80
     582:	69 83       	std	Y+1, r22	; 0x01
     584:	91 e2       	ldi	r25, 0x21	; 33
     586:	9a 83       	std	Y+2, r25	; 0x02
     588:	92 e0       	ldi	r25, 0x02	; 2
     58a:	98 0f       	add	r25, r24
     58c:	9f 70       	andi	r25, 0x0F	; 15
     58e:	9b 83       	std	Y+3, r25	; 0x03
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	02 96       	adiw	r24, 0x02	; 2
     594:	80 7f       	andi	r24, 0xF0	; 240
     596:	99 27       	eor	r25, r25
     598:	95 95       	asr	r25
     59a:	87 95       	ror	r24
     59c:	95 95       	asr	r25
     59e:	87 95       	ror	r24
     5a0:	95 95       	asr	r25
     5a2:	87 95       	ror	r24
     5a4:	95 95       	asr	r25
     5a6:	87 95       	ror	r24
     5a8:	80 5f       	subi	r24, 0xF0	; 240
     5aa:	8c 83       	std	Y+4, r24	; 0x04
     5ac:	8f e7       	ldi	r24, 0x7F	; 127
     5ae:	8d 83       	std	Y+5, r24	; 0x05
     5b0:	65 e0       	ldi	r22, 0x05	; 5
     5b2:	ce 01       	movw	r24, r28
     5b4:	01 96       	adiw	r24, 0x01	; 1
     5b6:	0e 94 63 02 	call	0x4c6	; 0x4c6 <lcd_command>
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	08 95       	ret

000005ca <lcd_home>:
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     5d2:	08 95       	ret

000005d4 <lcd_clrscr>:
     5d4:	0f 93       	push	r16
     5d6:	1f 93       	push	r17
     5d8:	cf 93       	push	r28
     5da:	df 93       	push	r29
     5dc:	0c e1       	ldi	r16, 0x1C	; 28
     5de:	11 e0       	ldi	r17, 0x01	; 1
     5e0:	c0 e0       	ldi	r28, 0x00	; 0
     5e2:	d0 e8       	ldi	r29, 0x80	; 128
     5e4:	f8 01       	movw	r30, r16
     5e6:	8d 2f       	mov	r24, r29
     5e8:	11 92       	st	Z+, r1
     5ea:	8a 95       	dec	r24
     5ec:	e9 f7       	brne	.-6      	; 0x5e8 <lcd_clrscr+0x14>
     5ee:	6c 2f       	mov	r22, r28
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     5f6:	60 e8       	ldi	r22, 0x80	; 128
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	c8 01       	movw	r24, r16
     5fc:	0e 94 8a 02 	call	0x514	; 0x514 <lcd_data>
     600:	cf 5f       	subi	r28, 0xFF	; 255
     602:	00 58       	subi	r16, 0x80	; 128
     604:	1f 4f       	sbci	r17, 0xFF	; 255
     606:	c8 30       	cpi	r28, 0x08	; 8
     608:	69 f7       	brne	.-38     	; 0x5e4 <lcd_clrscr+0x10>
     60a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <lcd_home>
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	1f 91       	pop	r17
     614:	0f 91       	pop	r16
     616:	08 95       	ret

00000618 <lcd_init>:
     618:	1f 93       	push	r17
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	cd b7       	in	r28, 0x3d	; 61
     620:	de b7       	in	r29, 0x3e	; 62
     622:	6c 97       	sbiw	r28, 0x1c	; 28
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	18 2f       	mov	r17, r24
     630:	0e 94 16 02 	call	0x42c	; 0x42c <i2c_init>
     634:	e2 ed       	ldi	r30, 0xD2	; 210
     636:	f3 e0       	ldi	r31, 0x03	; 3
     638:	de 01       	movw	r26, r28
     63a:	11 96       	adiw	r26, 0x01	; 1
     63c:	9e 01       	movw	r18, r28
     63e:	24 5e       	subi	r18, 0xE4	; 228
     640:	3f 4f       	sbci	r19, 0xFF	; 255
     642:	84 91       	lpm	r24, Z
     644:	8d 93       	st	X+, r24
     646:	31 96       	adiw	r30, 0x01	; 1
     648:	a2 17       	cp	r26, r18
     64a:	b3 07       	cpc	r27, r19
     64c:	d1 f7       	brne	.-12     	; 0x642 <lcd_init+0x2a>
     64e:	1c 8f       	std	Y+28, r17	; 0x1c
     650:	6c e1       	ldi	r22, 0x1C	; 28
     652:	ce 01       	movw	r24, r28
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	0e 94 63 02 	call	0x4c6	; 0x4c6 <lcd_command>
     65a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <lcd_clrscr>
     65e:	6c 96       	adiw	r28, 0x1c	; 28
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	1f 91       	pop	r17
     670:	08 95       	ret

00000672 <lcd_putc>:
     672:	4f 92       	push	r4
     674:	5f 92       	push	r5
     676:	6f 92       	push	r6
     678:	7f 92       	push	r7
     67a:	9f 92       	push	r9
     67c:	af 92       	push	r10
     67e:	bf 92       	push	r11
     680:	cf 92       	push	r12
     682:	df 92       	push	r13
     684:	ef 92       	push	r14
     686:	ff 92       	push	r15
     688:	0f 93       	push	r16
     68a:	1f 93       	push	r17
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	2c 97       	sbiw	r28, 0x0c	; 12
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61
     6a0:	89 30       	cpi	r24, 0x09	; 9
     6a2:	01 f1       	breq	.+64     	; 0x6e4 <lcd_putc+0x72>
     6a4:	18 f4       	brcc	.+6      	; 0x6ac <lcd_putc+0x3a>
     6a6:	88 30       	cpi	r24, 0x08	; 8
     6a8:	39 f0       	breq	.+14     	; 0x6b8 <lcd_putc+0x46>
     6aa:	52 c0       	rjmp	.+164    	; 0x750 <lcd_putc+0xde>
     6ac:	8a 30       	cpi	r24, 0x0A	; 10
     6ae:	e9 f1       	breq	.+122    	; 0x72a <lcd_putc+0xb8>
     6b0:	8d 30       	cpi	r24, 0x0D	; 13
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <lcd_putc+0x44>
     6b4:	47 c0       	rjmp	.+142    	; 0x744 <lcd_putc+0xd2>
     6b6:	4c c0       	rjmp	.+152    	; 0x750 <lcd_putc+0xde>
     6b8:	0c e1       	ldi	r16, 0x1C	; 28
     6ba:	15 e0       	ldi	r17, 0x05	; 5
     6bc:	f8 01       	movw	r30, r16
     6be:	80 81       	ld	r24, Z
     6c0:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     6c4:	61 81       	ldd	r22, Z+1	; 0x01
     6c6:	89 1b       	sub	r24, r25
     6c8:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     6cc:	80 e2       	ldi	r24, 0x20	; 32
     6ce:	0e 94 39 03 	call	0x672	; 0x672 <lcd_putc>
     6d2:	f8 01       	movw	r30, r16
     6d4:	80 81       	ld	r24, Z
     6d6:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     6da:	61 81       	ldd	r22, Z+1	; 0x01
     6dc:	89 1b       	sub	r24, r25
     6de:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     6e2:	ed c0       	rjmp	.+474    	; 0x8be <lcd_putc+0x24c>
     6e4:	80 91 1c 05 	lds	r24, 0x051C	; 0x80051c <cursorPosition>
     6e8:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     6ec:	29 2f       	mov	r18, r25
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	22 0f       	add	r18, r18
     6f2:	33 1f       	adc	r19, r19
     6f4:	22 0f       	add	r18, r18
     6f6:	33 1f       	adc	r19, r19
     6f8:	b9 01       	movw	r22, r18
     6fa:	68 0f       	add	r22, r24
     6fc:	71 1d       	adc	r23, r1
     6fe:	45 e1       	ldi	r20, 0x15	; 21
     700:	50 e0       	ldi	r21, 0x00	; 0
     702:	2a 01       	movw	r4, r20
     704:	42 1a       	sub	r4, r18
     706:	53 0a       	sbc	r5, r19
     708:	64 15       	cp	r22, r4
     70a:	75 05       	cpc	r23, r5
     70c:	40 f4       	brcc	.+16     	; 0x71e <lcd_putc+0xac>
     70e:	99 0f       	add	r25, r25
     710:	99 0f       	add	r25, r25
     712:	60 91 1d 05 	lds	r22, 0x051D	; 0x80051d <cursorPosition+0x1>
     716:	89 0f       	add	r24, r25
     718:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     71c:	d0 c0       	rjmp	.+416    	; 0x8be <lcd_putc+0x24c>
     71e:	60 91 1d 05 	lds	r22, 0x051D	; 0x80051d <cursorPosition+0x1>
     722:	85 e1       	ldi	r24, 0x15	; 21
     724:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     728:	ca c0       	rjmp	.+404    	; 0x8be <lcd_putc+0x24c>
     72a:	80 91 1d 05 	lds	r24, 0x051D	; 0x80051d <cursorPosition+0x1>
     72e:	87 30       	cpi	r24, 0x07	; 7
     730:	08 f0       	brcs	.+2      	; 0x734 <lcd_putc+0xc2>
     732:	c5 c0       	rjmp	.+394    	; 0x8be <lcd_putc+0x24c>
     734:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     738:	68 0f       	add	r22, r24
     73a:	80 91 1c 05 	lds	r24, 0x051C	; 0x80051c <cursorPosition>
     73e:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     742:	bd c0       	rjmp	.+378    	; 0x8be <lcd_putc+0x24c>
     744:	60 91 1d 05 	lds	r22, 0x051D	; 0x80051d <cursorPosition+0x1>
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     74e:	b7 c0       	rjmp	.+366    	; 0x8be <lcd_putc+0x24c>
     750:	90 90 1c 05 	lds	r9, 0x051C	; 0x80051c <cursorPosition>
     754:	0f 2e       	mov	r0, r31
     756:	f9 e7       	ldi	r31, 0x79	; 121
     758:	5f 2e       	mov	r5, r31
     75a:	f0 2d       	mov	r31, r0
     75c:	59 14       	cp	r5, r9
     75e:	08 f4       	brcc	.+2      	; 0x762 <lcd_putc+0xf0>
     760:	ae c0       	rjmp	.+348    	; 0x8be <lcd_putc+0x24c>
     762:	80 32       	cpi	r24, 0x20	; 32
     764:	08 f4       	brcc	.+2      	; 0x768 <lcd_putc+0xf6>
     766:	ab c0       	rjmp	.+342    	; 0x8be <lcd_putc+0x24c>
     768:	80 52       	subi	r24, 0x20	; 32
     76a:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     76e:	92 30       	cpi	r25, 0x02	; 2
     770:	09 f0       	breq	.+2      	; 0x774 <lcd_putc+0x102>
     772:	85 c0       	rjmp	.+266    	; 0x87e <lcd_putc+0x20c>
     774:	9e 01       	movw	r18, r28
     776:	2f 5f       	subi	r18, 0xFF	; 255
     778:	3f 4f       	sbci	r19, 0xFF	; 255
     77a:	79 01       	movw	r14, r18
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	5c 01       	movw	r10, r24
     780:	aa 0c       	add	r10, r10
     782:	bb 1c       	adc	r11, r11
     784:	8a 0d       	add	r24, r10
     786:	9b 1d       	adc	r25, r11
     788:	88 0f       	add	r24, r24
     78a:	99 1f       	adc	r25, r25
     78c:	fc 01       	movw	r30, r24
     78e:	ee 59       	subi	r30, 0x9E	; 158
     790:	fe 4f       	sbci	r31, 0xFE	; 254
     792:	5f 01       	movw	r10, r30
     794:	3e 01       	movw	r6, r28
     796:	fd e0       	ldi	r31, 0x0D	; 13
     798:	6f 0e       	add	r6, r31
     79a:	71 1c       	adc	r7, r1
     79c:	69 01       	movw	r12, r18
     79e:	01 e0       	ldi	r16, 0x01	; 1
     7a0:	10 e0       	ldi	r17, 0x00	; 0
     7a2:	d6 01       	movw	r26, r12
     7a4:	11 96       	adiw	r26, 0x01	; 1
     7a6:	1c 92       	st	X, r1
     7a8:	1e 92       	st	-X, r1
     7aa:	f5 01       	movw	r30, r10
     7ac:	44 91       	lpm	r20, Z
     7ae:	21 e0       	ldi	r18, 0x01	; 1
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	e4 2f       	mov	r30, r20
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	af 01       	movw	r20, r30
     7bc:	08 2e       	mov	r0, r24
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <lcd_putc+0x152>
     7c0:	55 95       	asr	r21
     7c2:	47 95       	ror	r20
     7c4:	0a 94       	dec	r0
     7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <lcd_putc+0x14e>
     7c8:	40 ff       	sbrs	r20, 0
     7ca:	1b c0       	rjmp	.+54     	; 0x802 <lcd_putc+0x190>
     7cc:	6d 91       	ld	r22, X+
     7ce:	7c 91       	ld	r23, X
     7d0:	11 97       	sbiw	r26, 0x01	; 1
     7d2:	a8 01       	movw	r20, r16
     7d4:	02 2e       	mov	r0, r18
     7d6:	02 c0       	rjmp	.+4      	; 0x7dc <lcd_putc+0x16a>
     7d8:	44 0f       	add	r20, r20
     7da:	55 1f       	adc	r21, r21
     7dc:	0a 94       	dec	r0
     7de:	e2 f7       	brpl	.-8      	; 0x7d8 <lcd_putc+0x166>
     7e0:	64 2b       	or	r22, r20
     7e2:	75 2b       	or	r23, r21
     7e4:	ac 01       	movw	r20, r24
     7e6:	44 0f       	add	r20, r20
     7e8:	55 1f       	adc	r21, r21
     7ea:	28 01       	movw	r4, r16
     7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <lcd_putc+0x180>
     7ee:	44 0c       	add	r4, r4
     7f0:	55 1c       	adc	r5, r5
     7f2:	4a 95       	dec	r20
     7f4:	e2 f7       	brpl	.-8      	; 0x7ee <lcd_putc+0x17c>
     7f6:	a2 01       	movw	r20, r4
     7f8:	46 2b       	or	r20, r22
     7fa:	57 2b       	or	r21, r23
     7fc:	11 96       	adiw	r26, 0x01	; 1
     7fe:	5c 93       	st	X, r21
     800:	4e 93       	st	-X, r20
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	2e 5f       	subi	r18, 0xFE	; 254
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	88 30       	cpi	r24, 0x08	; 8
     80a:	91 05       	cpc	r25, r1
     80c:	b1 f6       	brne	.-84     	; 0x7ba <lcd_putc+0x148>
     80e:	22 e0       	ldi	r18, 0x02	; 2
     810:	c2 0e       	add	r12, r18
     812:	d1 1c       	adc	r13, r1
     814:	3f ef       	ldi	r19, 0xFF	; 255
     816:	a3 1a       	sub	r10, r19
     818:	b3 0a       	sbc	r11, r19
     81a:	c6 14       	cp	r12, r6
     81c:	d7 04       	cpc	r13, r7
     81e:	09 f0       	breq	.+2      	; 0x822 <lcd_putc+0x1b0>
     820:	c0 cf       	rjmp	.-128    	; 0x7a2 <lcd_putc+0x130>
     822:	e9 2d       	mov	r30, r9
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	90 91 1d 05 	lds	r25, 0x051D	; 0x80051d <cursorPosition+0x1>
     82a:	89 2f       	mov	r24, r25
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	96 95       	lsr	r25
     832:	98 2f       	mov	r25, r24
     834:	88 27       	eor	r24, r24
     836:	97 95       	ror	r25
     838:	87 95       	ror	r24
     83a:	df 01       	movw	r26, r30
     83c:	a8 0f       	add	r26, r24
     83e:	b9 1f       	adc	r27, r25
     840:	a4 5e       	subi	r26, 0xE4	; 228
     842:	be 4f       	sbci	r27, 0xFE	; 254
     844:	e8 0f       	add	r30, r24
     846:	f9 1f       	adc	r31, r25
     848:	af 01       	movw	r20, r30
     84a:	44 56       	subi	r20, 0x64	; 100
     84c:	5f 4f       	sbci	r21, 0xFF	; 255
     84e:	f7 01       	movw	r30, r14
     850:	80 81       	ld	r24, Z
     852:	91 81       	ldd	r25, Z+1	; 0x01
     854:	f2 e0       	ldi	r31, 0x02	; 2
     856:	ef 0e       	add	r14, r31
     858:	f1 1c       	adc	r15, r1
     85a:	9c 93       	st	X, r25
     85c:	11 96       	adiw	r26, 0x01	; 1
     85e:	9c 93       	st	X, r25
     860:	11 97       	sbiw	r26, 0x01	; 1
     862:	fa 01       	movw	r30, r20
     864:	80 83       	st	Z, r24
     866:	81 83       	std	Z+1, r24	; 0x01
     868:	12 96       	adiw	r26, 0x02	; 2
     86a:	4e 5f       	subi	r20, 0xFE	; 254
     86c:	5f 4f       	sbci	r21, 0xFF	; 255
     86e:	e6 14       	cp	r14, r6
     870:	f7 04       	cpc	r15, r7
     872:	69 f7       	brne	.-38     	; 0x84e <lcd_putc+0x1dc>
     874:	8c e0       	ldi	r24, 0x0C	; 12
     876:	89 0d       	add	r24, r9
     878:	80 93 1c 05 	sts	0x051C, r24	; 0x80051c <cursorPosition>
     87c:	20 c0       	rjmp	.+64     	; 0x8be <lcd_putc+0x24c>
     87e:	20 91 1d 05 	lds	r18, 0x051D	; 0x80051d <cursorPosition+0x1>
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	fc 01       	movw	r30, r24
     886:	ee 0f       	add	r30, r30
     888:	ff 1f       	adc	r31, r31
     88a:	e8 0f       	add	r30, r24
     88c:	f9 1f       	adc	r31, r25
     88e:	ee 0f       	add	r30, r30
     890:	ff 1f       	adc	r31, r31
     892:	ee 59       	subi	r30, 0x9E	; 158
     894:	fe 4f       	sbci	r31, 0xFE	; 254
     896:	a9 2d       	mov	r26, r9
     898:	b0 e0       	ldi	r27, 0x00	; 0
     89a:	30 e8       	ldi	r19, 0x80	; 128
     89c:	23 9f       	mul	r18, r19
     89e:	a0 0d       	add	r26, r0
     8a0:	b1 1d       	adc	r27, r1
     8a2:	11 24       	eor	r1, r1
     8a4:	a4 5e       	subi	r26, 0xE4	; 228
     8a6:	be 4f       	sbci	r27, 0xFE	; 254
     8a8:	86 e0       	ldi	r24, 0x06	; 6
     8aa:	94 91       	lpm	r25, Z
     8ac:	9d 93       	st	X+, r25
     8ae:	81 50       	subi	r24, 0x01	; 1
     8b0:	31 96       	adiw	r30, 0x01	; 1
     8b2:	81 11       	cpse	r24, r1
     8b4:	fa cf       	rjmp	.-12     	; 0x8aa <lcd_putc+0x238>
     8b6:	86 e0       	ldi	r24, 0x06	; 6
     8b8:	89 0d       	add	r24, r9
     8ba:	80 93 1c 05 	sts	0x051C, r24	; 0x80051c <cursorPosition>
     8be:	2c 96       	adiw	r28, 0x0c	; 12
     8c0:	0f b6       	in	r0, 0x3f	; 63
     8c2:	f8 94       	cli
     8c4:	de bf       	out	0x3e, r29	; 62
     8c6:	0f be       	out	0x3f, r0	; 63
     8c8:	cd bf       	out	0x3d, r28	; 61
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	1f 91       	pop	r17
     8d0:	0f 91       	pop	r16
     8d2:	ff 90       	pop	r15
     8d4:	ef 90       	pop	r14
     8d6:	df 90       	pop	r13
     8d8:	cf 90       	pop	r12
     8da:	bf 90       	pop	r11
     8dc:	af 90       	pop	r10
     8de:	9f 90       	pop	r9
     8e0:	7f 90       	pop	r7
     8e2:	6f 90       	pop	r6
     8e4:	5f 90       	pop	r5
     8e6:	4f 90       	pop	r4
     8e8:	08 95       	ret

000008ea <lcd_puts>:
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	ec 01       	movw	r28, r24
     8f0:	88 81       	ld	r24, Y
     8f2:	88 23       	and	r24, r24
     8f4:	31 f0       	breq	.+12     	; 0x902 <__stack+0x3>
     8f6:	21 96       	adiw	r28, 0x01	; 1
     8f8:	0e 94 39 03 	call	0x672	; 0x672 <lcd_putc>
     8fc:	89 91       	ld	r24, Y+
     8fe:	81 11       	cpse	r24, r1
     900:	fb cf       	rjmp	.-10     	; 0x8f8 <lcd_puts+0xe>
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	08 95       	ret

00000908 <lcd_display>:
void lcd_display() {
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	0c e1       	ldi	r16, 0x1C	; 28
     910:	11 e0       	ldi	r17, 0x01	; 1
#if defined SSD1306
    lcd_gotoxy(0,0);
    lcd_data(&displayBuffer[0][0], DISPLAY_WIDTH*DISPLAY_HEIGHT/8);
#elif defined SH1106
    for (uint8_t i = 0; i < DISPLAY_HEIGHT/8; i++){
     912:	c0 e0       	ldi	r28, 0x00	; 0
        lcd_gotoxy(0,i);
     914:	6c 2f       	mov	r22, r28
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
        lcd_data(displayBuffer[i], sizeof(displayBuffer[i]));
     91c:	60 e8       	ldi	r22, 0x80	; 128
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	c8 01       	movw	r24, r16
     922:	0e 94 8a 02 	call	0x514	; 0x514 <lcd_data>
void lcd_display() {
#if defined SSD1306
    lcd_gotoxy(0,0);
    lcd_data(&displayBuffer[0][0], DISPLAY_WIDTH*DISPLAY_HEIGHT/8);
#elif defined SH1106
    for (uint8_t i = 0; i < DISPLAY_HEIGHT/8; i++){
     926:	cf 5f       	subi	r28, 0xFF	; 255
     928:	00 58       	subi	r16, 0x80	; 128
     92a:	1f 4f       	sbci	r17, 0xFF	; 255
     92c:	c8 30       	cpi	r28, 0x08	; 8
     92e:	91 f7       	brne	.-28     	; 0x914 <lcd_display+0xc>
        lcd_gotoxy(0,i);
        lcd_data(displayBuffer[i], sizeof(displayBuffer[i]));
    }
#endif
}
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <initUART0>:
	}

	//Read sensor takes in the latest value stored in the sensors array at the specified index and returns it. This value is updated via the ADC_vect interrupt.
	uint16_t readSensor(uint8_t analogPin){
		return sensorValues[analogPin + 1];
	}
     938:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     93c:	87 e6       	ldi	r24, 0x67	; 103
     93e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     942:	e0 ec       	ldi	r30, 0xC0	; 192
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	10 82       	st	Z, r1
     948:	88 e9       	ldi	r24, 0x98	; 152
     94a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     94e:	86 e0       	ldi	r24, 0x06	; 6
     950:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     954:	80 81       	ld	r24, Z
     956:	80 64       	ori	r24, 0x40	; 64
     958:	80 83       	st	Z, r24
     95a:	08 95       	ret

0000095c <__vector_4>:
     95c:	1f 92       	push	r1
     95e:	0f 92       	push	r0
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	0f 92       	push	r0
     964:	11 24       	eor	r1, r1
     966:	2f 93       	push	r18
     968:	3f 93       	push	r19
     96a:	4f 93       	push	r20
     96c:	5f 93       	push	r21
     96e:	6f 93       	push	r22
     970:	7f 93       	push	r23
     972:	8f 93       	push	r24
     974:	9f 93       	push	r25
     976:	af 93       	push	r26
     978:	bf 93       	push	r27
     97a:	cf 93       	push	r28
     97c:	ef 93       	push	r30
     97e:	ff 93       	push	r31
     980:	33 9b       	sbis	0x06, 3	; 6
     982:	05 c0       	rjmp	.+10     	; 0x98e <__vector_4+0x32>
     984:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     988:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     98c:	21 c0       	rjmp	.+66     	; 0x9d0 <__vector_4+0x74>
     98e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     992:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     996:	90 93 31 05 	sts	0x0531, r25	; 0x800531 <numuS+0x1>
     99a:	80 93 30 05 	sts	0x0530, r24	; 0x800530 <numuS>
     99e:	cf b7       	in	r28, 0x3f	; 63
     9a0:	f8 94       	cli
     9a2:	60 91 30 05 	lds	r22, 0x0530	; 0x800530 <numuS>
     9a6:	70 91 31 05 	lds	r23, 0x0531	; 0x800531 <numuS+0x1>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 5f 09 	call	0x12be	; 0x12be <__floatunsisf>
     9b2:	2a e8       	ldi	r18, 0x8A	; 138
     9b4:	31 ec       	ldi	r19, 0xC1	; 193
     9b6:	4c e8       	ldi	r20, 0x8C	; 140
     9b8:	5a e3       	ldi	r21, 0x3A	; 58
     9ba:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
     9be:	60 93 2c 05 	sts	0x052C, r22	; 0x80052c <raw>
     9c2:	70 93 2d 05 	sts	0x052D, r23	; 0x80052d <raw+0x1>
     9c6:	80 93 2e 05 	sts	0x052E, r24	; 0x80052e <raw+0x2>
     9ca:	90 93 2f 05 	sts	0x052F, r25	; 0x80052f <raw+0x3>
     9ce:	cf bf       	out	0x3f, r28	; 63
     9d0:	ff 91       	pop	r31
     9d2:	ef 91       	pop	r30
     9d4:	cf 91       	pop	r28
     9d6:	bf 91       	pop	r27
     9d8:	af 91       	pop	r26
     9da:	9f 91       	pop	r25
     9dc:	8f 91       	pop	r24
     9de:	7f 91       	pop	r23
     9e0:	6f 91       	pop	r22
     9e2:	5f 91       	pop	r21
     9e4:	4f 91       	pop	r20
     9e6:	3f 91       	pop	r19
     9e8:	2f 91       	pop	r18
     9ea:	0f 90       	pop	r0
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	0f 90       	pop	r0
     9f0:	1f 90       	pop	r1
     9f2:	18 95       	reti

000009f4 <initializePWM>:
     9f4:	8a b1       	in	r24, 0x0a	; 10
     9f6:	80 66       	ori	r24, 0x60	; 96
     9f8:	8a b9       	out	0x0a, r24	; 10
     9fa:	17 bc       	out	0x27, r1	; 39
     9fc:	18 bc       	out	0x28, r1	; 40
     9fe:	84 b5       	in	r24, 0x24	; 36
     a00:	80 68       	ori	r24, 0x80	; 128
     a02:	84 bd       	out	0x24, r24	; 36
     a04:	84 b5       	in	r24, 0x24	; 36
     a06:	80 62       	ori	r24, 0x20	; 32
     a08:	84 bd       	out	0x24, r24	; 36
     a0a:	84 b5       	in	r24, 0x24	; 36
     a0c:	83 60       	ori	r24, 0x03	; 3
     a0e:	84 bd       	out	0x24, r24	; 36
     a10:	85 b5       	in	r24, 0x25	; 37
     a12:	85 60       	ori	r24, 0x05	; 5
     a14:	85 bd       	out	0x25, r24	; 37
     a16:	08 95       	ret

00000a18 <initializeMotors>:
     a18:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <initializePWM>
     a1c:	8a b1       	in	r24, 0x0a	; 10
     a1e:	84 69       	ori	r24, 0x94	; 148
     a20:	8a b9       	out	0x0a, r24	; 10
     a22:	20 9a       	sbi	0x04, 0	; 4
     a24:	08 95       	ret

00000a26 <initializeUltrasonic>:
     a26:	8f ef       	ldi	r24, 0xFF	; 255
     a28:	87 b9       	out	0x07, r24	; 7
     a2a:	3b 98       	cbi	0x07, 3	; 7
     a2c:	43 9a       	sbi	0x08, 3	; 8
     a2e:	42 98       	cbi	0x08, 2	; 8
     a30:	e4 e6       	ldi	r30, 0x64	; 100
     a32:	f0 e0       	ldi	r31, 0x00	; 0
     a34:	80 81       	ld	r24, Z
     a36:	87 7f       	andi	r24, 0xF7	; 247
     a38:	80 83       	st	Z, r24
     a3a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a3e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a42:	e1 e8       	ldi	r30, 0x81	; 129
     a44:	f0 e0       	ldi	r31, 0x00	; 0
     a46:	80 81       	ld	r24, Z
     a48:	81 60       	ori	r24, 0x01	; 1
     a4a:	80 83       	st	Z, r24
     a4c:	80 81       	ld	r24, Z
     a4e:	80 64       	ori	r24, 0x40	; 64
     a50:	80 83       	st	Z, r24
     a52:	82 e0       	ldi	r24, 0x02	; 2
     a54:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
     a58:	88 e0       	ldi	r24, 0x08	; 8
     a5a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
     a5e:	08 95       	ret

00000a60 <leftFwd>:
     a60:	5a 9a       	sbi	0x0b, 2	; 11
     a62:	5c 98       	cbi	0x0b, 4	; 11
     a64:	88 bd       	out	0x28, r24	; 40
     a66:	08 95       	ret

00000a68 <leftRev>:
     a68:	5a 98       	cbi	0x0b, 2	; 11
     a6a:	5c 9a       	sbi	0x0b, 4	; 11
     a6c:	88 bd       	out	0x28, r24	; 40
     a6e:	08 95       	ret

00000a70 <rightFwd>:
     a70:	5f 9a       	sbi	0x0b, 7	; 11
     a72:	28 98       	cbi	0x05, 0	; 5
     a74:	87 bd       	out	0x27, r24	; 39
     a76:	08 95       	ret

00000a78 <rightRev>:
     a78:	5f 98       	cbi	0x0b, 7	; 11
     a7a:	28 9a       	sbi	0x05, 0	; 5
     a7c:	87 bd       	out	0x27, r24	; 39
     a7e:	08 95       	ret

00000a80 <__vector_18>:
     a80:	1f 92       	push	r1
     a82:	0f 92       	push	r0
     a84:	0f b6       	in	r0, 0x3f	; 63
     a86:	0f 92       	push	r0
     a88:	11 24       	eor	r1, r1
     a8a:	2f 93       	push	r18
     a8c:	3f 93       	push	r19
     a8e:	4f 93       	push	r20
     a90:	5f 93       	push	r21
     a92:	6f 93       	push	r22
     a94:	7f 93       	push	r23
     a96:	8f 93       	push	r24
     a98:	9f 93       	push	r25
     a9a:	af 93       	push	r26
     a9c:	bf 93       	push	r27
     a9e:	ef 93       	push	r30
     aa0:	ff 93       	push	r31
     aa2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     aa6:	82 34       	cpi	r24, 0x42	; 66
     aa8:	41 f0       	breq	.+16     	; 0xaba <__vector_18+0x3a>
     aaa:	83 34       	cpi	r24, 0x43	; 67
     aac:	b1 f0       	breq	.+44     	; 0xada <__vector_18+0x5a>
     aae:	81 34       	cpi	r24, 0x41	; 65
     ab0:	e9 f4       	brne	.+58     	; 0xaec <__vector_18+0x6c>
     ab2:	81 e3       	ldi	r24, 0x31	; 49
     ab4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <run>
     ab8:	19 c0       	rjmp	.+50     	; 0xaec <__vector_18+0x6c>
     aba:	80 e0       	ldi	r24, 0x00	; 0
     abc:	0e 94 30 05 	call	0xa60	; 0xa60 <leftFwd>
     ac0:	80 e0       	ldi	r24, 0x00	; 0
     ac2:	0e 94 3c 05 	call	0xa78	; 0xa78 <rightRev>
     ac6:	2f ef       	ldi	r18, 0xFF	; 255
     ac8:	83 e2       	ldi	r24, 0x23	; 35
     aca:	94 ef       	ldi	r25, 0xF4	; 244
     acc:	21 50       	subi	r18, 0x01	; 1
     ace:	80 40       	sbci	r24, 0x00	; 0
     ad0:	90 40       	sbci	r25, 0x00	; 0
     ad2:	e1 f7       	brne	.-8      	; 0xacc <__vector_18+0x4c>
     ad4:	00 c0       	rjmp	.+0      	; 0xad6 <__vector_18+0x56>
     ad6:	00 00       	nop
     ad8:	09 c0       	rjmp	.+18     	; 0xaec <__vector_18+0x6c>
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	0e 94 30 05 	call	0xa60	; 0xa60 <leftFwd>
     ae0:	80 e0       	ldi	r24, 0x00	; 0
     ae2:	0e 94 3c 05 	call	0xa78	; 0xa78 <rightRev>
     ae6:	80 e3       	ldi	r24, 0x30	; 48
     ae8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <run>
     aec:	ff 91       	pop	r31
     aee:	ef 91       	pop	r30
     af0:	bf 91       	pop	r27
     af2:	af 91       	pop	r26
     af4:	9f 91       	pop	r25
     af6:	8f 91       	pop	r24
     af8:	7f 91       	pop	r23
     afa:	6f 91       	pop	r22
     afc:	5f 91       	pop	r21
     afe:	4f 91       	pop	r20
     b00:	3f 91       	pop	r19
     b02:	2f 91       	pop	r18
     b04:	0f 90       	pop	r0
     b06:	0f be       	out	0x3f, r0	; 63
     b08:	0f 90       	pop	r0
     b0a:	1f 90       	pop	r1
     b0c:	18 95       	reti

00000b0e <drive>:
     b0e:	cf 93       	push	r28
     b10:	df 93       	push	r29
     b12:	18 16       	cp	r1, r24
     b14:	19 06       	cpc	r1, r25
     b16:	74 f4       	brge	.+28     	; 0xb34 <drive+0x26>
     b18:	ec 01       	movw	r28, r24
     b1a:	99 23       	and	r25, r25
     b1c:	24 f4       	brge	.+8      	; 0xb26 <drive+0x18>
     b1e:	cc 27       	eor	r28, r28
     b20:	dd 27       	eor	r29, r29
     b22:	c8 1b       	sub	r28, r24
     b24:	d9 0b       	sbc	r29, r25
     b26:	8c 2f       	mov	r24, r28
     b28:	0e 94 30 05 	call	0xa60	; 0xa60 <leftFwd>
     b2c:	8c 2f       	mov	r24, r28
     b2e:	0e 94 3c 05 	call	0xa78	; 0xa78 <rightRev>
     b32:	0d c0       	rjmp	.+26     	; 0xb4e <drive+0x40>
     b34:	ec 01       	movw	r28, r24
     b36:	99 23       	and	r25, r25
     b38:	24 f4       	brge	.+8      	; 0xb42 <drive+0x34>
     b3a:	cc 27       	eor	r28, r28
     b3c:	dd 27       	eor	r29, r29
     b3e:	c8 1b       	sub	r28, r24
     b40:	d9 0b       	sbc	r29, r25
     b42:	8c 2f       	mov	r24, r28
     b44:	0e 94 34 05 	call	0xa68	; 0xa68 <leftRev>
     b48:	8c 2f       	mov	r24, r28
     b4a:	0e 94 38 05 	call	0xa70	; 0xa70 <rightFwd>
     b4e:	df 91       	pop	r29
     b50:	cf 91       	pop	r28
     b52:	08 95       	ret

00000b54 <sendUltraSonicSignal>:
     b54:	42 9a       	sbi	0x08, 2	; 8
     b56:	85 e3       	ldi	r24, 0x35	; 53
     b58:	8a 95       	dec	r24
     b5a:	f1 f7       	brne	.-4      	; 0xb58 <sendUltraSonicSignal+0x4>
     b5c:	00 00       	nop
     b5e:	42 98       	cbi	0x08, 2	; 8
     b60:	08 95       	ret

00000b62 <selectChannel>:
     b62:	ec e7       	ldi	r30, 0x7C	; 124
     b64:	f0 e0       	ldi	r31, 0x00	; 0
     b66:	90 81       	ld	r25, Z
     b68:	90 7e       	andi	r25, 0xE0	; 224
     b6a:	8f 71       	andi	r24, 0x1F	; 31
     b6c:	89 2b       	or	r24, r25
     b6e:	80 83       	st	Z, r24
     b70:	08 95       	ret

00000b72 <startConversion>:

	//For convenience startConversion is used instead of the bit maths.
	void startConversion(){
		ADCSRA |= (1 << ADSC);
     b72:	ea e7       	ldi	r30, 0x7A	; 122
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	80 81       	ld	r24, Z
     b78:	80 64       	ori	r24, 0x40	; 64
     b7a:	80 83       	st	Z, r24
     b7c:	08 95       	ret

00000b7e <__vector_21>:
volatile uint8_t currentAnalogChannel = OPTICAL_FRONT;

//volatile uint8_t currentAnalogChannel = OPTICAL_FRONT;

//Interrupt service routine to update the sensor value array continuously using interrupts
ISR(ADC_vect){
     b7e:	1f 92       	push	r1
     b80:	0f 92       	push	r0
     b82:	0f b6       	in	r0, 0x3f	; 63
     b84:	0f 92       	push	r0
     b86:	11 24       	eor	r1, r1
     b88:	2f 93       	push	r18
     b8a:	3f 93       	push	r19
     b8c:	4f 93       	push	r20
     b8e:	5f 93       	push	r21
     b90:	6f 93       	push	r22
     b92:	7f 93       	push	r23
     b94:	8f 93       	push	r24
     b96:	9f 93       	push	r25
     b98:	af 93       	push	r26
     b9a:	bf 93       	push	r27
     b9c:	ef 93       	push	r30
     b9e:	ff 93       	push	r31
	
	
	//There is a simple logic change that would allow up to 6 sensors 0-5 analog pins
	
	if(currentAnalogChannel > OPTICAL_RIGHT){
     ba0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentAnalogChannel>
     ba4:	86 30       	cpi	r24, 0x06	; 6
     ba6:	18 f0       	brcs	.+6      	; 0xbae <__vector_21+0x30>
		currentAnalogChannel = OPTICAL_FRONT;
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <currentAnalogChannel>
		} else {}
		
		
		
		selectChannel(currentAnalogChannel);
     bae:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentAnalogChannel>
     bb2:	0e 94 b1 05 	call	0xb62	; 0xb62 <selectChannel>
		sensorValues[currentAnalogChannel] = ADCW;
     bb6:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <currentAnalogChannel>
     bba:	f0 e0       	ldi	r31, 0x00	; 0
     bbc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     bc0:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     bc4:	ee 0f       	add	r30, r30
     bc6:	ff 1f       	adc	r31, r31
     bc8:	e0 5e       	subi	r30, 0xE0	; 224
     bca:	fa 4f       	sbci	r31, 0xFA	; 250
     bcc:	91 83       	std	Z+1, r25	; 0x01
     bce:	80 83       	st	Z, r24
		currentAnalogChannel++;
     bd0:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentAnalogChannel>
     bd4:	8f 5f       	subi	r24, 0xFF	; 255
     bd6:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <currentAnalogChannel>
		startConversion();
     bda:	0e 94 b9 05 	call	0xb72	; 0xb72 <startConversion>
		
		
	}
     bde:	ff 91       	pop	r31
     be0:	ef 91       	pop	r30
     be2:	bf 91       	pop	r27
     be4:	af 91       	pop	r26
     be6:	9f 91       	pop	r25
     be8:	8f 91       	pop	r24
     bea:	7f 91       	pop	r23
     bec:	6f 91       	pop	r22
     bee:	5f 91       	pop	r21
     bf0:	4f 91       	pop	r20
     bf2:	3f 91       	pop	r19
     bf4:	2f 91       	pop	r18
     bf6:	0f 90       	pop	r0
     bf8:	0f be       	out	0x3f, r0	; 63
     bfa:	0f 90       	pop	r0
     bfc:	1f 90       	pop	r1
     bfe:	18 95       	reti

00000c00 <initializeADC>:
	}

	//Initializes the ADC registers to support the IR and optical sensors.
	void initializeADC(){
		//Configure the ADMUX for AVCC as input (internal 5v reference) / not left adjusted results (10-bit resolution) / ADC0 as input / 0b0100:0000
		ADMUX = 0x40;
     c00:	80 e4       	ldi	r24, 0x40	; 64
     c02:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
		//Configure ADCSRA for enable ADC / don't start conversion / prescaler 128 / disable auto-trigger / enable ADC interrupt 0b10001:111
		ADCSRA = 0x8F;
     c06:	8f e8       	ldi	r24, 0x8F	; 143
     c08:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
		
		selectChannel(OPTICAL_FRONT);
     c0c:	81 e0       	ldi	r24, 0x01	; 1
     c0e:	0e 94 b1 05 	call	0xb62	; 0xb62 <selectChannel>
		sei();
     c12:	78 94       	sei
		startConversion();
     c14:	0e 94 b9 05 	call	0xb72	; 0xb72 <startConversion>
     c18:	08 95       	ret

00000c1a <main>:
	}


	/* ****************************** Start of main *****************************/

	int main(void){
     c1a:	cf 93       	push	r28
     c1c:	df 93       	push	r29
     c1e:	cd b7       	in	r28, 0x3d	; 61
     c20:	de b7       	in	r29, 0x3e	; 62
     c22:	c0 57       	subi	r28, 0x70	; 112
     c24:	d1 09       	sbc	r29, r1
     c26:	0f b6       	in	r0, 0x3f	; 63
     c28:	f8 94       	cli
     c2a:	de bf       	out	0x3e, r29	; 62
     c2c:	0f be       	out	0x3f, r0	; 63
     c2e:	cd bf       	out	0x3d, r28	; 61
		
		initUART0();
     c30:	0e 94 9c 04 	call	0x938	; 0x938 <initUART0>
		initializeMotors();
     c34:	0e 94 0c 05 	call	0xa18	; 0xa18 <initializeMotors>
		initializeADC();
     c38:	0e 94 00 06 	call	0xc00	; 0xc00 <initializeADC>
		initializeUltrasonic();
     c3c:	0e 94 13 05 	call	0xa26	; 0xa26 <initializeUltrasonic>
		DDRB =	0xFF;
     c40:	8f ef       	ldi	r24, 0xFF	; 255
     c42:	84 b9       	out	0x04, r24	; 4
		char distance[100];
		char axg_arr[10];
		char ayg_arr[10];
		char azg_arr[10];
		
		lcd_init(0xAF);    // init lcd and turn on
     c44:	8f ea       	ldi	r24, 0xAF	; 175
     c46:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_init>
		//init mpu6050
		mpu6050_init();
     c4a:	0e 94 16 08 	call	0x102c	; 0x102c <mpu6050_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c4e:	2f ef       	ldi	r18, 0xFF	; 255
     c50:	80 e7       	ldi	r24, 0x70	; 112
     c52:	92 e0       	ldi	r25, 0x02	; 2
     c54:	21 50       	subi	r18, 0x01	; 1
     c56:	80 40       	sbci	r24, 0x00	; 0
     c58:	90 40       	sbci	r25, 0x00	; 0
     c5a:	e1 f7       	brne	.-8      	; 0xc54 <main+0x3a>
     c5c:	00 c0       	rjmp	.+0      	; 0xc5e <main+0x44>
     c5e:	00 00       	nop
			int16_t ay = 0;
			int16_t az = 0;
			int16_t gx = 0;
			int16_t gy = 0;
			int16_t gz = 0;
			double axg = 0;
     c60:	a9 96       	adiw	r28, 0x29	; 41
     c62:	1c ae       	std	Y+60, r1	; 0x3c
     c64:	1d ae       	std	Y+61, r1	; 0x3d
     c66:	1e ae       	std	Y+62, r1	; 0x3e
     c68:	1f ae       	std	Y+63, r1	; 0x3f
     c6a:	a9 97       	sbiw	r28, 0x29	; 41
			double ayg = 0;
     c6c:	ad 96       	adiw	r28, 0x2d	; 45
     c6e:	1c ae       	std	Y+60, r1	; 0x3c
     c70:	1d ae       	std	Y+61, r1	; 0x3d
     c72:	1e ae       	std	Y+62, r1	; 0x3e
     c74:	1f ae       	std	Y+63, r1	; 0x3f
     c76:	ad 97       	sbiw	r28, 0x2d	; 45
			double azg = 0;
     c78:	e1 96       	adiw	r28, 0x31	; 49
     c7a:	1c ae       	std	Y+60, r1	; 0x3c
     c7c:	1d ae       	std	Y+61, r1	; 0x3d
     c7e:	1e ae       	std	Y+62, r1	; 0x3e
     c80:	1f ae       	std	Y+63, r1	; 0x3f
     c82:	e1 97       	sbiw	r28, 0x31	; 49
			#endif
			
			#if MPU6050_GETATTITUDE == 0
			
			if((axg > HIT_THRESHHOLD || axg < -HIT_THRESHHOLD) || (ayg > HIT_THRESHHOLD || ayg < -HIT_THRESHHOLD)){
				hit = 1;
     c84:	77 24       	eor	r7, r7
     c86:	73 94       	inc	r7
     c88:	2f ef       	ldi	r18, 0xFF	; 255
     c8a:	8d ee       	ldi	r24, 0xED	; 237
     c8c:	92 e0       	ldi	r25, 0x02	; 2
     c8e:	21 50       	subi	r18, 0x01	; 1
     c90:	80 40       	sbci	r24, 0x00	; 0
     c92:	90 40       	sbci	r25, 0x00	; 0
     c94:	e1 f7       	brne	.-8      	; 0xc8e <main+0x74>
     c96:	00 c0       	rjmp	.+0      	; 0xc98 <main+0x7e>
     c98:	00 00       	nop
		while(1){
			_delay_ms(60);
			
			
			#if MPU6050_GETATTITUDE == 0
			mpu6050_getConvAccelData(&axg, &ayg, &azg);
     c9a:	ae 01       	movw	r20, r28
     c9c:	43 59       	subi	r20, 0x93	; 147
     c9e:	5f 4f       	sbci	r21, 0xFF	; 255
     ca0:	be 01       	movw	r22, r28
     ca2:	67 59       	subi	r22, 0x97	; 151
     ca4:	7f 4f       	sbci	r23, 0xFF	; 255
     ca6:	ce 01       	movw	r24, r28
     ca8:	8b 59       	subi	r24, 0x9B	; 155
     caa:	9f 4f       	sbci	r25, 0xFF	; 255
     cac:	0e 94 73 08 	call	0x10e6	; 0x10e6 <mpu6050_getConvAccelData>
			axg = axg + MPU_AXOFFSET;
     cb0:	2a e0       	ldi	r18, 0x0A	; 10
     cb2:	37 ed       	ldi	r19, 0xD7	; 215
     cb4:	43 ea       	ldi	r20, 0xA3	; 163
     cb6:	5c e3       	ldi	r21, 0x3C	; 60
     cb8:	a9 96       	adiw	r28, 0x29	; 41
     cba:	6c ad       	ldd	r22, Y+60	; 0x3c
     cbc:	7d ad       	ldd	r23, Y+61	; 0x3d
     cbe:	8e ad       	ldd	r24, Y+62	; 0x3e
     cc0:	9f ad       	ldd	r25, Y+63	; 0x3f
     cc2:	a9 97       	sbiw	r28, 0x29	; 41
     cc4:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__addsf3>
     cc8:	6b 01       	movw	r12, r22
     cca:	7c 01       	movw	r14, r24
     ccc:	a9 96       	adiw	r28, 0x29	; 41
     cce:	6c af       	std	Y+60, r22	; 0x3c
     cd0:	7d af       	std	Y+61, r23	; 0x3d
     cd2:	8e af       	std	Y+62, r24	; 0x3e
     cd4:	9f af       	std	Y+63, r25	; 0x3f
     cd6:	a9 97       	sbiw	r28, 0x29	; 41
			ayg = ayg + MPU_AYOFFSET;
     cd8:	2d ec       	ldi	r18, 0xCD	; 205
     cda:	3c ec       	ldi	r19, 0xCC	; 204
     cdc:	4c e4       	ldi	r20, 0x4C	; 76
     cde:	5d e3       	ldi	r21, 0x3D	; 61
     ce0:	ad 96       	adiw	r28, 0x2d	; 45
     ce2:	6c ad       	ldd	r22, Y+60	; 0x3c
     ce4:	7d ad       	ldd	r23, Y+61	; 0x3d
     ce6:	8e ad       	ldd	r24, Y+62	; 0x3e
     ce8:	9f ad       	ldd	r25, Y+63	; 0x3f
     cea:	ad 97       	sbiw	r28, 0x2d	; 45
     cec:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__addsf3>
     cf0:	4b 01       	movw	r8, r22
     cf2:	5c 01       	movw	r10, r24
     cf4:	ad 96       	adiw	r28, 0x2d	; 45
     cf6:	6c af       	std	Y+60, r22	; 0x3c
     cf8:	7d af       	std	Y+61, r23	; 0x3d
     cfa:	8e af       	std	Y+62, r24	; 0x3e
     cfc:	9f af       	std	Y+63, r25	; 0x3f
     cfe:	ad 97       	sbiw	r28, 0x2d	; 45
			azg = azg + MPU_AZOFFSET;
     d00:	2d ec       	ldi	r18, 0xCD	; 205
     d02:	3c ec       	ldi	r19, 0xCC	; 204
     d04:	4c e4       	ldi	r20, 0x4C	; 76
     d06:	5e e3       	ldi	r21, 0x3E	; 62
     d08:	e1 96       	adiw	r28, 0x31	; 49
     d0a:	6c ad       	ldd	r22, Y+60	; 0x3c
     d0c:	7d ad       	ldd	r23, Y+61	; 0x3d
     d0e:	8e ad       	ldd	r24, Y+62	; 0x3e
     d10:	9f ad       	ldd	r25, Y+63	; 0x3f
     d12:	e1 97       	sbiw	r28, 0x31	; 49
     d14:	0e 94 ed 08 	call	0x11da	; 0x11da <__subsf3>
     d18:	e1 96       	adiw	r28, 0x31	; 49
     d1a:	6c af       	std	Y+60, r22	; 0x3c
     d1c:	7d af       	std	Y+61, r23	; 0x3d
     d1e:	8e af       	std	Y+62, r24	; 0x3e
     d20:	9f af       	std	Y+63, r25	; 0x3f
     d22:	e1 97       	sbiw	r28, 0x31	; 49
			
			#endif
			
			#if MPU6050_GETATTITUDE == 0
			
			if((axg > HIT_THRESHHOLD || axg < -HIT_THRESHHOLD) || (ayg > HIT_THRESHHOLD || ayg < -HIT_THRESHHOLD)){
     d24:	2c ee       	ldi	r18, 0xEC	; 236
     d26:	31 e5       	ldi	r19, 0x51	; 81
     d28:	48 e3       	ldi	r20, 0x38	; 56
     d2a:	5e e3       	ldi	r21, 0x3E	; 62
     d2c:	c7 01       	movw	r24, r14
     d2e:	b6 01       	movw	r22, r12
     d30:	0e 94 11 0a 	call	0x1422	; 0x1422 <__gesf2>
     d34:	18 16       	cp	r1, r24
     d36:	f4 f0       	brlt	.+60     	; 0xd74 <main+0x15a>
     d38:	2c ee       	ldi	r18, 0xEC	; 236
     d3a:	31 e5       	ldi	r19, 0x51	; 81
     d3c:	48 e3       	ldi	r20, 0x38	; 56
     d3e:	5e eb       	ldi	r21, 0xBE	; 190
     d40:	c7 01       	movw	r24, r14
     d42:	b6 01       	movw	r22, r12
     d44:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__cmpsf2>
     d48:	88 23       	and	r24, r24
     d4a:	a4 f0       	brlt	.+40     	; 0xd74 <main+0x15a>
     d4c:	2c ee       	ldi	r18, 0xEC	; 236
     d4e:	31 e5       	ldi	r19, 0x51	; 81
     d50:	48 e3       	ldi	r20, 0x38	; 56
     d52:	5e e3       	ldi	r21, 0x3E	; 62
     d54:	c5 01       	movw	r24, r10
     d56:	b4 01       	movw	r22, r8
     d58:	0e 94 11 0a 	call	0x1422	; 0x1422 <__gesf2>
     d5c:	18 16       	cp	r1, r24
     d5e:	54 f0       	brlt	.+20     	; 0xd74 <main+0x15a>
     d60:	2c ee       	ldi	r18, 0xEC	; 236
     d62:	31 e5       	ldi	r19, 0x51	; 81
     d64:	48 e3       	ldi	r20, 0x38	; 56
     d66:	5e eb       	ldi	r21, 0xBE	; 190
     d68:	c5 01       	movw	r24, r10
     d6a:	b4 01       	movw	r22, r8
     d6c:	0e 94 5a 09 	call	0x12b4	; 0x12b4 <__cmpsf2>
     d70:	88 23       	and	r24, r24
     d72:	14 f4       	brge	.+4      	; 0xd78 <main+0x15e>
				hit = 1;
     d74:	70 92 1e 05 	sts	0x051E, r7	; 0x80051e <hit>
			}
			#endif
			
			sendUltraSonicSignal();
     d78:	0e 94 aa 05 	call	0xb54	; 0xb54 <sendUltraSonicSignal>
			dtostrf(raw, 3, 1, distance);
     d7c:	60 91 2c 05 	lds	r22, 0x052C	; 0x80052c <raw>
     d80:	70 91 2d 05 	lds	r23, 0x052D	; 0x80052d <raw+0x1>
     d84:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <raw+0x2>
     d88:	90 91 2f 05 	lds	r25, 0x052F	; 0x80052f <raw+0x3>
     d8c:	8e 01       	movw	r16, r28
     d8e:	0f 5f       	subi	r16, 0xFF	; 255
     d90:	1f 4f       	sbci	r17, 0xFF	; 255
     d92:	27 2d       	mov	r18, r7
     d94:	43 e0       	ldi	r20, 0x03	; 3
     d96:	0e 94 83 0a 	call	0x1506	; 0x1506 <dtostrf>
			
			lcd_gotoxy(0,0);
     d9a:	60 e0       	ldi	r22, 0x00	; 0
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
			lcd_puts("Distance: ");
     da2:	83 e0       	ldi	r24, 0x03	; 3
     da4:	91 e0       	ldi	r25, 0x01	; 1
     da6:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts(distance);
     daa:	c8 01       	movw	r24, r16
     dac:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts("   ");
     db0:	8e e0       	ldi	r24, 0x0E	; 14
     db2:	91 e0       	ldi	r25, 0x01	; 1
     db4:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_display();
     db8:	0e 94 84 04 	call	0x908	; 0x908 <lcd_display>
					
			
		    lcd_gotoxy(0,5);
     dbc:	65 e0       	ldi	r22, 0x05	; 5
     dbe:	80 e0       	ldi	r24, 0x00	; 0
     dc0:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
			lcd_puts("Status: ");
     dc4:	82 e1       	ldi	r24, 0x12	; 18
     dc6:	91 e0       	ldi	r25, 0x01	; 1
     dc8:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts(hit);
     dcc:	80 91 1e 05 	lds	r24, 0x051E	; 0x80051e <hit>
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts("   ");
     dd6:	8e e0       	ldi	r24, 0x0E	; 14
     dd8:	91 e0       	ldi	r25, 0x01	; 1
     dda:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_display();
     dde:	0e 94 84 04 	call	0x908	; 0x908 <lcd_display>
			
			
			
			
			if(raw > 10 && !hit){
     de2:	20 e0       	ldi	r18, 0x00	; 0
     de4:	30 e0       	ldi	r19, 0x00	; 0
     de6:	40 e2       	ldi	r20, 0x20	; 32
     de8:	51 e4       	ldi	r21, 0x41	; 65
     dea:	60 91 2c 05 	lds	r22, 0x052C	; 0x80052c <raw>
     dee:	70 91 2d 05 	lds	r23, 0x052D	; 0x80052d <raw+0x1>
     df2:	80 91 2e 05 	lds	r24, 0x052E	; 0x80052e <raw+0x2>
     df6:	90 91 2f 05 	lds	r25, 0x052F	; 0x80052f <raw+0x3>
     dfa:	0e 94 11 0a 	call	0x1422	; 0x1422 <__gesf2>
     dfe:	18 16       	cp	r1, r24
     e00:	4c f4       	brge	.+18     	; 0xe14 <main+0x1fa>
     e02:	80 91 1e 05 	lds	r24, 0x051E	; 0x80051e <hit>
     e06:	81 11       	cpse	r24, r1
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <main+0x1fa>
				drive(126);
     e0a:	8e e7       	ldi	r24, 0x7E	; 126
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 87 05 	call	0xb0e	; 0xb0e <drive>
     e12:	3a cf       	rjmp	.-396    	; 0xc88 <main+0x6e>
			} else {
				drive(0);
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 87 05 	call	0xb0e	; 0xb0e <drive>
     e1c:	35 cf       	rjmp	.-406    	; 0xc88 <main+0x6e>

00000e1e <mpu6050_readBytes>:
    *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    *az = (((int16_t)buffer[4]) << 8) | buffer[5];
    *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
}
     e1e:	af 92       	push	r10
     e20:	bf 92       	push	r11
     e22:	cf 92       	push	r12
     e24:	df 92       	push	r13
     e26:	ff 92       	push	r15
     e28:	0f 93       	push	r16
     e2a:	1f 93       	push	r17
     e2c:	cf 93       	push	r28
     e2e:	df 93       	push	r29
     e30:	66 23       	and	r22, r22
     e32:	b9 f1       	breq	.+110    	; 0xea2 <mpu6050_readBytes+0x84>
     e34:	c5 2f       	mov	r28, r21
     e36:	d4 2f       	mov	r29, r20
     e38:	f6 2e       	mov	r15, r22
     e3a:	18 2f       	mov	r17, r24
     e3c:	80 ed       	ldi	r24, 0xD0	; 208
     e3e:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     e42:	81 2f       	mov	r24, r17
     e44:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     e48:	83 e0       	ldi	r24, 0x03	; 3
     e4a:	8a 95       	dec	r24
     e4c:	f1 f7       	brne	.-4      	; 0xe4a <mpu6050_readBytes+0x2c>
     e4e:	00 00       	nop
     e50:	81 ed       	ldi	r24, 0xD1	; 209
     e52:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     e56:	0d 2f       	mov	r16, r29
     e58:	1c 2f       	mov	r17, r28
     e5a:	cc 24       	eor	r12, r12
     e5c:	ca 94       	dec	r12
     e5e:	cf 0c       	add	r12, r15
     e60:	d1 2c       	mov	r13, r1
     e62:	ef ef       	ldi	r30, 0xFF	; 255
     e64:	ce 1a       	sub	r12, r30
     e66:	de 0a       	sbc	r13, r30
     e68:	c0 e0       	ldi	r28, 0x00	; 0
     e6a:	d0 e0       	ldi	r29, 0x00	; 0
     e6c:	af 2c       	mov	r10, r15
     e6e:	b1 2c       	mov	r11, r1
     e70:	f1 e0       	ldi	r31, 0x01	; 1
     e72:	af 1a       	sub	r10, r31
     e74:	b1 08       	sbc	r11, r1
     e76:	ac 16       	cp	r10, r28
     e78:	bd 06       	cpc	r11, r29
     e7a:	29 f4       	brne	.+10     	; 0xe86 <mpu6050_readBytes+0x68>
     e7c:	0e 94 58 02 	call	0x4b0	; 0x4b0 <i2c_readNAck>
     e80:	f8 01       	movw	r30, r16
     e82:	80 83       	st	Z, r24
     e84:	04 c0       	rjmp	.+8      	; 0xe8e <mpu6050_readBytes+0x70>
     e86:	0e 94 41 02 	call	0x482	; 0x482 <i2c_readAck>
     e8a:	f8 01       	movw	r30, r16
     e8c:	80 83       	st	Z, r24
     e8e:	21 96       	adiw	r28, 0x01	; 1
     e90:	0f 5f       	subi	r16, 0xFF	; 255
     e92:	1f 4f       	sbci	r17, 0xFF	; 255
     e94:	cc 15       	cp	r28, r12
     e96:	dd 05       	cpc	r29, r13
     e98:	71 f7       	brne	.-36     	; 0xe76 <mpu6050_readBytes+0x58>
     e9a:	cf 2d       	mov	r28, r15
     e9c:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     ea0:	01 c0       	rjmp	.+2      	; 0xea4 <mpu6050_readBytes+0x86>
     ea2:	c0 e0       	ldi	r28, 0x00	; 0
     ea4:	8c 2f       	mov	r24, r28
     ea6:	df 91       	pop	r29
     ea8:	cf 91       	pop	r28
     eaa:	1f 91       	pop	r17
     eac:	0f 91       	pop	r16
     eae:	ff 90       	pop	r15
     eb0:	df 90       	pop	r13
     eb2:	cf 90       	pop	r12
     eb4:	bf 90       	pop	r11
     eb6:	af 90       	pop	r10
     eb8:	08 95       	ret

00000eba <mpu6050_readByte>:
     eba:	ab 01       	movw	r20, r22
     ebc:	61 e0       	ldi	r22, 0x01	; 1
     ebe:	0e 94 0f 07 	call	0xe1e	; 0xe1e <mpu6050_readBytes>
     ec2:	08 95       	ret

00000ec4 <mpu6050_writeBytes>:
     ec4:	ef 92       	push	r14
     ec6:	ff 92       	push	r15
     ec8:	0f 93       	push	r16
     eca:	1f 93       	push	r17
     ecc:	cf 93       	push	r28
     ece:	df 93       	push	r29
     ed0:	66 23       	and	r22, r22
     ed2:	d1 f0       	breq	.+52     	; 0xf08 <mpu6050_writeBytes+0x44>
     ed4:	7a 01       	movw	r14, r20
     ed6:	16 2f       	mov	r17, r22
     ed8:	c8 2f       	mov	r28, r24
     eda:	80 ed       	ldi	r24, 0xD0	; 208
     edc:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     ee0:	8c 2f       	mov	r24, r28
     ee2:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     ee6:	e7 01       	movw	r28, r14
     ee8:	6f ef       	ldi	r22, 0xFF	; 255
     eea:	61 0f       	add	r22, r17
     eec:	06 2f       	mov	r16, r22
     eee:	10 e0       	ldi	r17, 0x00	; 0
     ef0:	0f 5f       	subi	r16, 0xFF	; 255
     ef2:	1f 4f       	sbci	r17, 0xFF	; 255
     ef4:	0e 0d       	add	r16, r14
     ef6:	1f 1d       	adc	r17, r15
     ef8:	89 91       	ld	r24, Y+
     efa:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     efe:	c0 17       	cp	r28, r16
     f00:	d1 07       	cpc	r29, r17
     f02:	d1 f7       	brne	.-12     	; 0xef8 <mpu6050_writeBytes+0x34>
     f04:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	1f 91       	pop	r17
     f0e:	0f 91       	pop	r16
     f10:	ff 90       	pop	r15
     f12:	ef 90       	pop	r14
     f14:	08 95       	ret

00000f16 <mpu6050_writeByte>:
     f16:	cf 93       	push	r28
     f18:	df 93       	push	r29
     f1a:	1f 92       	push	r1
     f1c:	cd b7       	in	r28, 0x3d	; 61
     f1e:	de b7       	in	r29, 0x3e	; 62
     f20:	69 83       	std	Y+1, r22	; 0x01
     f22:	ae 01       	movw	r20, r28
     f24:	4f 5f       	subi	r20, 0xFF	; 255
     f26:	5f 4f       	sbci	r21, 0xFF	; 255
     f28:	61 e0       	ldi	r22, 0x01	; 1
     f2a:	0e 94 62 07 	call	0xec4	; 0xec4 <mpu6050_writeBytes>
     f2e:	0f 90       	pop	r0
     f30:	df 91       	pop	r29
     f32:	cf 91       	pop	r28
     f34:	08 95       	ret

00000f36 <mpu6050_writeBits>:
     f36:	ef 92       	push	r14
     f38:	ff 92       	push	r15
     f3a:	0f 93       	push	r16
     f3c:	1f 93       	push	r17
     f3e:	cf 93       	push	r28
     f40:	df 93       	push	r29
     f42:	1f 92       	push	r1
     f44:	cd b7       	in	r28, 0x3d	; 61
     f46:	de b7       	in	r29, 0x3e	; 62
     f48:	44 23       	and	r20, r20
     f4a:	89 f1       	breq	.+98     	; 0xfae <mpu6050_writeBits+0x78>
     f4c:	f2 2e       	mov	r15, r18
     f4e:	14 2f       	mov	r17, r20
     f50:	06 2f       	mov	r16, r22
     f52:	e8 2e       	mov	r14, r24
     f54:	19 82       	std	Y+1, r1	; 0x01
     f56:	be 01       	movw	r22, r28
     f58:	6f 5f       	subi	r22, 0xFF	; 255
     f5a:	7f 4f       	sbci	r23, 0xFF	; 255
     f5c:	0e 94 5d 07 	call	0xeba	; 0xeba <mpu6050_readByte>
     f60:	88 23       	and	r24, r24
     f62:	29 f1       	breq	.+74     	; 0xfae <mpu6050_writeBits+0x78>
     f64:	40 2f       	mov	r20, r16
     f66:	50 e0       	ldi	r21, 0x00	; 0
     f68:	41 1b       	sub	r20, r17
     f6a:	51 09       	sbc	r21, r1
     f6c:	4f 5f       	subi	r20, 0xFF	; 255
     f6e:	5f 4f       	sbci	r21, 0xFF	; 255
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <mpu6050_writeBits+0x44>
     f76:	88 0f       	add	r24, r24
     f78:	99 1f       	adc	r25, r25
     f7a:	1a 95       	dec	r17
     f7c:	e2 f7       	brpl	.-8      	; 0xf76 <mpu6050_writeBits+0x40>
     f7e:	01 97       	sbiw	r24, 0x01	; 1
     f80:	04 2e       	mov	r0, r20
     f82:	02 c0       	rjmp	.+4      	; 0xf88 <mpu6050_writeBits+0x52>
     f84:	88 0f       	add	r24, r24
     f86:	99 1f       	adc	r25, r25
     f88:	0a 94       	dec	r0
     f8a:	e2 f7       	brpl	.-8      	; 0xf84 <mpu6050_writeBits+0x4e>
     f8c:	2f 2d       	mov	r18, r15
     f8e:	30 e0       	ldi	r19, 0x00	; 0
     f90:	02 c0       	rjmp	.+4      	; 0xf96 <mpu6050_writeBits+0x60>
     f92:	22 0f       	add	r18, r18
     f94:	33 1f       	adc	r19, r19
     f96:	4a 95       	dec	r20
     f98:	e2 f7       	brpl	.-8      	; 0xf92 <mpu6050_writeBits+0x5c>
     f9a:	68 2f       	mov	r22, r24
     f9c:	60 95       	com	r22
     f9e:	99 81       	ldd	r25, Y+1	; 0x01
     fa0:	69 23       	and	r22, r25
     fa2:	82 23       	and	r24, r18
     fa4:	68 2b       	or	r22, r24
     fa6:	69 83       	std	Y+1, r22	; 0x01
     fa8:	8e 2d       	mov	r24, r14
     faa:	0e 94 8b 07 	call	0xf16	; 0xf16 <mpu6050_writeByte>
     fae:	0f 90       	pop	r0
     fb0:	df 91       	pop	r29
     fb2:	cf 91       	pop	r28
     fb4:	1f 91       	pop	r17
     fb6:	0f 91       	pop	r16
     fb8:	ff 90       	pop	r15
     fba:	ef 90       	pop	r14
     fbc:	08 95       	ret

00000fbe <mpu6050_writeBit>:
     fbe:	ff 92       	push	r15
     fc0:	0f 93       	push	r16
     fc2:	1f 93       	push	r17
     fc4:	cf 93       	push	r28
     fc6:	df 93       	push	r29
     fc8:	1f 92       	push	r1
     fca:	cd b7       	in	r28, 0x3d	; 61
     fcc:	de b7       	in	r29, 0x3e	; 62
     fce:	18 2f       	mov	r17, r24
     fd0:	06 2f       	mov	r16, r22
     fd2:	f4 2e       	mov	r15, r20
     fd4:	be 01       	movw	r22, r28
     fd6:	6f 5f       	subi	r22, 0xFF	; 255
     fd8:	7f 4f       	sbci	r23, 0xFF	; 255
     fda:	0e 94 5d 07 	call	0xeba	; 0xeba <mpu6050_readByte>
     fde:	ff 20       	and	r15, r15
     fe0:	51 f0       	breq	.+20     	; 0xff6 <mpu6050_writeBit+0x38>
     fe2:	61 e0       	ldi	r22, 0x01	; 1
     fe4:	70 e0       	ldi	r23, 0x00	; 0
     fe6:	02 c0       	rjmp	.+4      	; 0xfec <mpu6050_writeBit+0x2e>
     fe8:	66 0f       	add	r22, r22
     fea:	77 1f       	adc	r23, r23
     fec:	0a 95       	dec	r16
     fee:	e2 f7       	brpl	.-8      	; 0xfe8 <mpu6050_writeBit+0x2a>
     ff0:	89 81       	ldd	r24, Y+1	; 0x01
     ff2:	68 2b       	or	r22, r24
     ff4:	0a c0       	rjmp	.+20     	; 0x100a <mpu6050_writeBit+0x4c>
     ff6:	61 e0       	ldi	r22, 0x01	; 1
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <mpu6050_writeBit+0x42>
     ffc:	66 0f       	add	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	0a 95       	dec	r16
    1002:	e2 f7       	brpl	.-8      	; 0xffc <mpu6050_writeBit+0x3e>
    1004:	60 95       	com	r22
    1006:	89 81       	ldd	r24, Y+1	; 0x01
    1008:	68 23       	and	r22, r24
    100a:	69 83       	std	Y+1, r22	; 0x01
    100c:	81 2f       	mov	r24, r17
    100e:	0e 94 8b 07 	call	0xf16	; 0xf16 <mpu6050_writeByte>
    1012:	0f 90       	pop	r0
    1014:	df 91       	pop	r29
    1016:	cf 91       	pop	r28
    1018:	1f 91       	pop	r17
    101a:	0f 91       	pop	r16
    101c:	ff 90       	pop	r15
    101e:	08 95       	ret

00001020 <mpu6050_setSleepDisabled>:
    1020:	40 e0       	ldi	r20, 0x00	; 0
    1022:	66 e0       	ldi	r22, 0x06	; 6
    1024:	8b e6       	ldi	r24, 0x6B	; 107
    1026:	0e 94 df 07 	call	0xfbe	; 0xfbe <mpu6050_writeBit>
    102a:	08 95       	ret

0000102c <mpu6050_init>:
    102c:	0e 94 16 02 	call	0x42c	; 0x42c <i2c_init>
    1030:	83 e0       	ldi	r24, 0x03	; 3
    1032:	8a 95       	dec	r24
    1034:	f1 f7       	brne	.-4      	; 0x1032 <mpu6050_init+0x6>
    1036:	00 00       	nop
    1038:	87 ea       	ldi	r24, 0xA7	; 167
    103a:	91 e6       	ldi	r25, 0x61	; 97
    103c:	01 97       	sbiw	r24, 0x01	; 1
    103e:	f1 f7       	brne	.-4      	; 0x103c <mpu6050_init+0x10>
    1040:	00 c0       	rjmp	.+0      	; 0x1042 <mpu6050_init+0x16>
    1042:	00 00       	nop
    1044:	0e 94 10 08 	call	0x1020	; 0x1020 <mpu6050_setSleepDisabled>
    1048:	83 ec       	ldi	r24, 0xC3	; 195
    104a:	99 e0       	ldi	r25, 0x09	; 9
    104c:	01 97       	sbiw	r24, 0x01	; 1
    104e:	f1 f7       	brne	.-4      	; 0x104c <mpu6050_init+0x20>
    1050:	00 c0       	rjmp	.+0      	; 0x1052 <mpu6050_init+0x26>
    1052:	00 00       	nop
    1054:	21 e0       	ldi	r18, 0x01	; 1
    1056:	43 e0       	ldi	r20, 0x03	; 3
    1058:	62 e0       	ldi	r22, 0x02	; 2
    105a:	8b e6       	ldi	r24, 0x6B	; 107
    105c:	0e 94 9b 07 	call	0xf36	; 0xf36 <mpu6050_writeBits>
    1060:	23 e0       	ldi	r18, 0x03	; 3
    1062:	43 e0       	ldi	r20, 0x03	; 3
    1064:	62 e0       	ldi	r22, 0x02	; 2
    1066:	8a e1       	ldi	r24, 0x1A	; 26
    1068:	0e 94 9b 07 	call	0xf36	; 0xf36 <mpu6050_writeBits>
    106c:	64 e0       	ldi	r22, 0x04	; 4
    106e:	89 e1       	ldi	r24, 0x19	; 25
    1070:	0e 94 8b 07 	call	0xf16	; 0xf16 <mpu6050_writeByte>
    1074:	23 e0       	ldi	r18, 0x03	; 3
    1076:	42 e0       	ldi	r20, 0x02	; 2
    1078:	64 e0       	ldi	r22, 0x04	; 4
    107a:	8b e1       	ldi	r24, 0x1B	; 27
    107c:	0e 94 9b 07 	call	0xf36	; 0xf36 <mpu6050_writeBits>
    1080:	20 e0       	ldi	r18, 0x00	; 0
    1082:	42 e0       	ldi	r20, 0x02	; 2
    1084:	64 e0       	ldi	r22, 0x04	; 4
    1086:	8c e1       	ldi	r24, 0x1C	; 28
    1088:	0e 94 9b 07 	call	0xf36	; 0xf36 <mpu6050_writeBits>
    108c:	08 95       	ret

0000108e <mpu6050_getRawAccelData>:

//can not accept many request if we alreay have getattitude requests
/*
 * get raw accel data including the x y and z axis
 */
void mpu6050_getRawAccelData(int16_t* ax, int16_t* ay, int16_t* az) {
    108e:	ef 92       	push	r14
    1090:	ff 92       	push	r15
    1092:	0f 93       	push	r16
    1094:	1f 93       	push	r17
    1096:	cf 93       	push	r28
    1098:	df 93       	push	r29
    109a:	7c 01       	movw	r14, r24
    109c:	8b 01       	movw	r16, r22
    109e:	ea 01       	movw	r28, r20
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 6, (uint8_t *)buffer);
    10a0:	42 e3       	ldi	r20, 0x32	; 50
    10a2:	55 e0       	ldi	r21, 0x05	; 5
    10a4:	66 e0       	ldi	r22, 0x06	; 6
    10a6:	8b e3       	ldi	r24, 0x3B	; 59
    10a8:	0e 94 0f 07 	call	0xe1e	; 0xe1e <mpu6050_readBytes>

    *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    10ac:	e2 e3       	ldi	r30, 0x32	; 50
    10ae:	f5 e0       	ldi	r31, 0x05	; 5
    10b0:	20 81       	ld	r18, Z
    10b2:	81 81       	ldd	r24, Z+1	; 0x01
    10b4:	90 e0       	ldi	r25, 0x00	; 0
    10b6:	92 2b       	or	r25, r18
    10b8:	d7 01       	movw	r26, r14
    10ba:	8d 93       	st	X+, r24
    10bc:	9c 93       	st	X, r25
    *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    10be:	22 81       	ldd	r18, Z+2	; 0x02
    10c0:	83 81       	ldd	r24, Z+3	; 0x03
    10c2:	90 e0       	ldi	r25, 0x00	; 0
    10c4:	92 2b       	or	r25, r18
    10c6:	d8 01       	movw	r26, r16
    10c8:	8d 93       	st	X+, r24
    10ca:	9c 93       	st	X, r25
    *az = (((int16_t)buffer[4]) << 8) | buffer[5];
    10cc:	24 81       	ldd	r18, Z+4	; 0x04
    10ce:	85 81       	ldd	r24, Z+5	; 0x05
    10d0:	90 e0       	ldi	r25, 0x00	; 0
    10d2:	92 2b       	or	r25, r18
    10d4:	99 83       	std	Y+1, r25	; 0x01
    10d6:	88 83       	st	Y, r24
}
    10d8:	df 91       	pop	r29
    10da:	cf 91       	pop	r28
    10dc:	1f 91       	pop	r17
    10de:	0f 91       	pop	r16
    10e0:	ff 90       	pop	r15
    10e2:	ef 90       	pop	r14
    10e4:	08 95       	ret

000010e6 <mpu6050_getConvAccelData>:

/*
 * get raw accel data  converted to g and deg/sec values
 */
void mpu6050_getConvAccelData(double* axg, double* ayg, double* azg) {
    10e6:	cf 92       	push	r12
    10e8:	df 92       	push	r13
    10ea:	ef 92       	push	r14
    10ec:	ff 92       	push	r15
    10ee:	0f 93       	push	r16
    10f0:	1f 93       	push	r17
    10f2:	cf 93       	push	r28
    10f4:	df 93       	push	r29
    10f6:	00 d0       	rcall	.+0      	; 0x10f8 <mpu6050_getConvAccelData+0x12>
    10f8:	00 d0       	rcall	.+0      	; 0x10fa <mpu6050_getConvAccelData+0x14>
    10fa:	00 d0       	rcall	.+0      	; 0x10fc <mpu6050_getConvAccelData+0x16>
    10fc:	cd b7       	in	r28, 0x3d	; 61
    10fe:	de b7       	in	r29, 0x3e	; 62
    1100:	6c 01       	movw	r12, r24
    1102:	7b 01       	movw	r14, r22
    1104:	8a 01       	movw	r16, r20
	int16_t ax = 0;
    1106:	1a 82       	std	Y+2, r1	; 0x02
    1108:	19 82       	std	Y+1, r1	; 0x01
	int16_t ay = 0;
    110a:	1c 82       	std	Y+4, r1	; 0x04
    110c:	1b 82       	std	Y+3, r1	; 0x03
	int16_t az = 0;
    110e:	1e 82       	std	Y+6, r1	; 0x06
    1110:	1d 82       	std	Y+5, r1	; 0x05
	
	mpu6050_getRawAccelData(&ax, &ay, &az);
    1112:	ae 01       	movw	r20, r28
    1114:	4b 5f       	subi	r20, 0xFB	; 251
    1116:	5f 4f       	sbci	r21, 0xFF	; 255
    1118:	be 01       	movw	r22, r28
    111a:	6d 5f       	subi	r22, 0xFD	; 253
    111c:	7f 4f       	sbci	r23, 0xFF	; 255
    111e:	ce 01       	movw	r24, r28
    1120:	01 96       	adiw	r24, 0x01	; 1
    1122:	0e 94 47 08 	call	0x108e	; 0x108e <mpu6050_getRawAccelData>

	#if MPU6050_CALIBRATEDACCGYRO == 1
    *axg = (double)(ax-MPU6050_AXOFFSET)/MPU6050_AXGAIN;
    1126:	69 81       	ldd	r22, Y+1	; 0x01
    1128:	7a 81       	ldd	r23, Y+2	; 0x02
    112a:	07 2e       	mov	r0, r23
    112c:	00 0c       	add	r0, r0
    112e:	88 0b       	sbc	r24, r24
    1130:	99 0b       	sbc	r25, r25
    1132:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__floatsisf>
    1136:	2a e0       	ldi	r18, 0x0A	; 10
    1138:	37 ed       	ldi	r19, 0xD7	; 215
    113a:	43 ea       	ldi	r20, 0xA3	; 163
    113c:	5c e3       	ldi	r21, 0x3C	; 60
    113e:	0e 94 ed 08 	call	0x11da	; 0x11da <__subsf3>
    1142:	20 e0       	ldi	r18, 0x00	; 0
    1144:	30 e0       	ldi	r19, 0x00	; 0
    1146:	40 e8       	ldi	r20, 0x80	; 128
    1148:	58 e3       	ldi	r21, 0x38	; 56
    114a:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
    114e:	f6 01       	movw	r30, r12
    1150:	60 83       	st	Z, r22
    1152:	71 83       	std	Z+1, r23	; 0x01
    1154:	82 83       	std	Z+2, r24	; 0x02
    1156:	93 83       	std	Z+3, r25	; 0x03
    *ayg = (double)(ay-MPU6050_AYOFFSET)/MPU6050_AYGAIN;
    1158:	6b 81       	ldd	r22, Y+3	; 0x03
    115a:	7c 81       	ldd	r23, Y+4	; 0x04
    115c:	07 2e       	mov	r0, r23
    115e:	00 0c       	add	r0, r0
    1160:	88 0b       	sbc	r24, r24
    1162:	99 0b       	sbc	r25, r25
    1164:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__floatsisf>
    1168:	2d ec       	ldi	r18, 0xCD	; 205
    116a:	3c ec       	ldi	r19, 0xCC	; 204
    116c:	4c e4       	ldi	r20, 0x4C	; 76
    116e:	5d e3       	ldi	r21, 0x3D	; 61
    1170:	0e 94 ed 08 	call	0x11da	; 0x11da <__subsf3>
    1174:	20 e0       	ldi	r18, 0x00	; 0
    1176:	30 e0       	ldi	r19, 0x00	; 0
    1178:	40 e8       	ldi	r20, 0x80	; 128
    117a:	58 e3       	ldi	r21, 0x38	; 56
    117c:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
    1180:	f7 01       	movw	r30, r14
    1182:	60 83       	st	Z, r22
    1184:	71 83       	std	Z+1, r23	; 0x01
    1186:	82 83       	std	Z+2, r24	; 0x02
    1188:	93 83       	std	Z+3, r25	; 0x03
    *azg = (double)(az-MPU6050_AZOFFSET)/MPU6050_AZGAIN;
    118a:	6d 81       	ldd	r22, Y+5	; 0x05
    118c:	7e 81       	ldd	r23, Y+6	; 0x06
    118e:	07 2e       	mov	r0, r23
    1190:	00 0c       	add	r0, r0
    1192:	88 0b       	sbc	r24, r24
    1194:	99 0b       	sbc	r25, r25
    1196:	0e 94 61 09 	call	0x12c2	; 0x12c2 <__floatsisf>
    119a:	2d ec       	ldi	r18, 0xCD	; 205
    119c:	3c ec       	ldi	r19, 0xCC	; 204
    119e:	4c e4       	ldi	r20, 0x4C	; 76
    11a0:	5e e3       	ldi	r21, 0x3E	; 62
    11a2:	0e 94 ee 08 	call	0x11dc	; 0x11dc <__addsf3>
    11a6:	20 e0       	ldi	r18, 0x00	; 0
    11a8:	30 e0       	ldi	r19, 0x00	; 0
    11aa:	40 e8       	ldi	r20, 0x80	; 128
    11ac:	58 e3       	ldi	r21, 0x38	; 56
    11ae:	0e 94 16 0a 	call	0x142c	; 0x142c <__mulsf3>
    11b2:	f8 01       	movw	r30, r16
    11b4:	60 83       	st	Z, r22
    11b6:	71 83       	std	Z+1, r23	; 0x01
    11b8:	82 83       	std	Z+2, r24	; 0x02
    11ba:	93 83       	std	Z+3, r25	; 0x03
	#else
    *axg = (double)(ax)/MPU6050_AGAIN;
    *ayg = (double)(ay)/MPU6050_AGAIN;
    *azg = (double)(az)/MPU6050_AGAIN;
 	#endif
}
    11bc:	26 96       	adiw	r28, 0x06	; 6
    11be:	0f b6       	in	r0, 0x3f	; 63
    11c0:	f8 94       	cli
    11c2:	de bf       	out	0x3e, r29	; 62
    11c4:	0f be       	out	0x3f, r0	; 63
    11c6:	cd bf       	out	0x3d, r28	; 61
    11c8:	df 91       	pop	r29
    11ca:	cf 91       	pop	r28
    11cc:	1f 91       	pop	r17
    11ce:	0f 91       	pop	r16
    11d0:	ff 90       	pop	r15
    11d2:	ef 90       	pop	r14
    11d4:	df 90       	pop	r13
    11d6:	cf 90       	pop	r12
    11d8:	08 95       	ret

000011da <__subsf3>:
    11da:	50 58       	subi	r21, 0x80	; 128

000011dc <__addsf3>:
    11dc:	bb 27       	eor	r27, r27
    11de:	aa 27       	eor	r26, r26
    11e0:	0e 94 05 09 	call	0x120a	; 0x120a <__addsf3x>
    11e4:	0c 94 d7 09 	jmp	0x13ae	; 0x13ae <__fp_round>
    11e8:	0e 94 c9 09 	call	0x1392	; 0x1392 <__fp_pscA>
    11ec:	38 f0       	brcs	.+14     	; 0x11fc <__addsf3+0x20>
    11ee:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <__fp_pscB>
    11f2:	20 f0       	brcs	.+8      	; 0x11fc <__addsf3+0x20>
    11f4:	39 f4       	brne	.+14     	; 0x1204 <__addsf3+0x28>
    11f6:	9f 3f       	cpi	r25, 0xFF	; 255
    11f8:	19 f4       	brne	.+6      	; 0x1200 <__addsf3+0x24>
    11fa:	26 f4       	brtc	.+8      	; 0x1204 <__addsf3+0x28>
    11fc:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__fp_nan>
    1200:	0e f4       	brtc	.+2      	; 0x1204 <__addsf3+0x28>
    1202:	e0 95       	com	r30
    1204:	e7 fb       	bst	r30, 7
    1206:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_inf>

0000120a <__addsf3x>:
    120a:	e9 2f       	mov	r30, r25
    120c:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__fp_split3>
    1210:	58 f3       	brcs	.-42     	; 0x11e8 <__addsf3+0xc>
    1212:	ba 17       	cp	r27, r26
    1214:	62 07       	cpc	r22, r18
    1216:	73 07       	cpc	r23, r19
    1218:	84 07       	cpc	r24, r20
    121a:	95 07       	cpc	r25, r21
    121c:	20 f0       	brcs	.+8      	; 0x1226 <__addsf3x+0x1c>
    121e:	79 f4       	brne	.+30     	; 0x123e <__addsf3x+0x34>
    1220:	a6 f5       	brtc	.+104    	; 0x128a <__addsf3x+0x80>
    1222:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__fp_zero>
    1226:	0e f4       	brtc	.+2      	; 0x122a <__addsf3x+0x20>
    1228:	e0 95       	com	r30
    122a:	0b 2e       	mov	r0, r27
    122c:	ba 2f       	mov	r27, r26
    122e:	a0 2d       	mov	r26, r0
    1230:	0b 01       	movw	r0, r22
    1232:	b9 01       	movw	r22, r18
    1234:	90 01       	movw	r18, r0
    1236:	0c 01       	movw	r0, r24
    1238:	ca 01       	movw	r24, r20
    123a:	a0 01       	movw	r20, r0
    123c:	11 24       	eor	r1, r1
    123e:	ff 27       	eor	r31, r31
    1240:	59 1b       	sub	r21, r25
    1242:	99 f0       	breq	.+38     	; 0x126a <__addsf3x+0x60>
    1244:	59 3f       	cpi	r21, 0xF9	; 249
    1246:	50 f4       	brcc	.+20     	; 0x125c <__addsf3x+0x52>
    1248:	50 3e       	cpi	r21, 0xE0	; 224
    124a:	68 f1       	brcs	.+90     	; 0x12a6 <__addsf3x+0x9c>
    124c:	1a 16       	cp	r1, r26
    124e:	f0 40       	sbci	r31, 0x00	; 0
    1250:	a2 2f       	mov	r26, r18
    1252:	23 2f       	mov	r18, r19
    1254:	34 2f       	mov	r19, r20
    1256:	44 27       	eor	r20, r20
    1258:	58 5f       	subi	r21, 0xF8	; 248
    125a:	f3 cf       	rjmp	.-26     	; 0x1242 <__addsf3x+0x38>
    125c:	46 95       	lsr	r20
    125e:	37 95       	ror	r19
    1260:	27 95       	ror	r18
    1262:	a7 95       	ror	r26
    1264:	f0 40       	sbci	r31, 0x00	; 0
    1266:	53 95       	inc	r21
    1268:	c9 f7       	brne	.-14     	; 0x125c <__addsf3x+0x52>
    126a:	7e f4       	brtc	.+30     	; 0x128a <__addsf3x+0x80>
    126c:	1f 16       	cp	r1, r31
    126e:	ba 0b       	sbc	r27, r26
    1270:	62 0b       	sbc	r22, r18
    1272:	73 0b       	sbc	r23, r19
    1274:	84 0b       	sbc	r24, r20
    1276:	ba f0       	brmi	.+46     	; 0x12a6 <__addsf3x+0x9c>
    1278:	91 50       	subi	r25, 0x01	; 1
    127a:	a1 f0       	breq	.+40     	; 0x12a4 <__addsf3x+0x9a>
    127c:	ff 0f       	add	r31, r31
    127e:	bb 1f       	adc	r27, r27
    1280:	66 1f       	adc	r22, r22
    1282:	77 1f       	adc	r23, r23
    1284:	88 1f       	adc	r24, r24
    1286:	c2 f7       	brpl	.-16     	; 0x1278 <__addsf3x+0x6e>
    1288:	0e c0       	rjmp	.+28     	; 0x12a6 <__addsf3x+0x9c>
    128a:	ba 0f       	add	r27, r26
    128c:	62 1f       	adc	r22, r18
    128e:	73 1f       	adc	r23, r19
    1290:	84 1f       	adc	r24, r20
    1292:	48 f4       	brcc	.+18     	; 0x12a6 <__addsf3x+0x9c>
    1294:	87 95       	ror	r24
    1296:	77 95       	ror	r23
    1298:	67 95       	ror	r22
    129a:	b7 95       	ror	r27
    129c:	f7 95       	ror	r31
    129e:	9e 3f       	cpi	r25, 0xFE	; 254
    12a0:	08 f0       	brcs	.+2      	; 0x12a4 <__addsf3x+0x9a>
    12a2:	b0 cf       	rjmp	.-160    	; 0x1204 <__addsf3+0x28>
    12a4:	93 95       	inc	r25
    12a6:	88 0f       	add	r24, r24
    12a8:	08 f0       	brcs	.+2      	; 0x12ac <__addsf3x+0xa2>
    12aa:	99 27       	eor	r25, r25
    12ac:	ee 0f       	add	r30, r30
    12ae:	97 95       	ror	r25
    12b0:	87 95       	ror	r24
    12b2:	08 95       	ret

000012b4 <__cmpsf2>:
    12b4:	0e 94 9c 09 	call	0x1338	; 0x1338 <__fp_cmp>
    12b8:	08 f4       	brcc	.+2      	; 0x12bc <__cmpsf2+0x8>
    12ba:	81 e0       	ldi	r24, 0x01	; 1
    12bc:	08 95       	ret

000012be <__floatunsisf>:
    12be:	e8 94       	clt
    12c0:	09 c0       	rjmp	.+18     	; 0x12d4 <__floatsisf+0x12>

000012c2 <__floatsisf>:
    12c2:	97 fb       	bst	r25, 7
    12c4:	3e f4       	brtc	.+14     	; 0x12d4 <__floatsisf+0x12>
    12c6:	90 95       	com	r25
    12c8:	80 95       	com	r24
    12ca:	70 95       	com	r23
    12cc:	61 95       	neg	r22
    12ce:	7f 4f       	sbci	r23, 0xFF	; 255
    12d0:	8f 4f       	sbci	r24, 0xFF	; 255
    12d2:	9f 4f       	sbci	r25, 0xFF	; 255
    12d4:	99 23       	and	r25, r25
    12d6:	a9 f0       	breq	.+42     	; 0x1302 <__floatsisf+0x40>
    12d8:	f9 2f       	mov	r31, r25
    12da:	96 e9       	ldi	r25, 0x96	; 150
    12dc:	bb 27       	eor	r27, r27
    12de:	93 95       	inc	r25
    12e0:	f6 95       	lsr	r31
    12e2:	87 95       	ror	r24
    12e4:	77 95       	ror	r23
    12e6:	67 95       	ror	r22
    12e8:	b7 95       	ror	r27
    12ea:	f1 11       	cpse	r31, r1
    12ec:	f8 cf       	rjmp	.-16     	; 0x12de <__floatsisf+0x1c>
    12ee:	fa f4       	brpl	.+62     	; 0x132e <__floatsisf+0x6c>
    12f0:	bb 0f       	add	r27, r27
    12f2:	11 f4       	brne	.+4      	; 0x12f8 <__floatsisf+0x36>
    12f4:	60 ff       	sbrs	r22, 0
    12f6:	1b c0       	rjmp	.+54     	; 0x132e <__floatsisf+0x6c>
    12f8:	6f 5f       	subi	r22, 0xFF	; 255
    12fa:	7f 4f       	sbci	r23, 0xFF	; 255
    12fc:	8f 4f       	sbci	r24, 0xFF	; 255
    12fe:	9f 4f       	sbci	r25, 0xFF	; 255
    1300:	16 c0       	rjmp	.+44     	; 0x132e <__floatsisf+0x6c>
    1302:	88 23       	and	r24, r24
    1304:	11 f0       	breq	.+4      	; 0x130a <__floatsisf+0x48>
    1306:	96 e9       	ldi	r25, 0x96	; 150
    1308:	11 c0       	rjmp	.+34     	; 0x132c <__floatsisf+0x6a>
    130a:	77 23       	and	r23, r23
    130c:	21 f0       	breq	.+8      	; 0x1316 <__floatsisf+0x54>
    130e:	9e e8       	ldi	r25, 0x8E	; 142
    1310:	87 2f       	mov	r24, r23
    1312:	76 2f       	mov	r23, r22
    1314:	05 c0       	rjmp	.+10     	; 0x1320 <__floatsisf+0x5e>
    1316:	66 23       	and	r22, r22
    1318:	71 f0       	breq	.+28     	; 0x1336 <__floatsisf+0x74>
    131a:	96 e8       	ldi	r25, 0x86	; 134
    131c:	86 2f       	mov	r24, r22
    131e:	70 e0       	ldi	r23, 0x00	; 0
    1320:	60 e0       	ldi	r22, 0x00	; 0
    1322:	2a f0       	brmi	.+10     	; 0x132e <__floatsisf+0x6c>
    1324:	9a 95       	dec	r25
    1326:	66 0f       	add	r22, r22
    1328:	77 1f       	adc	r23, r23
    132a:	88 1f       	adc	r24, r24
    132c:	da f7       	brpl	.-10     	; 0x1324 <__floatsisf+0x62>
    132e:	88 0f       	add	r24, r24
    1330:	96 95       	lsr	r25
    1332:	87 95       	ror	r24
    1334:	97 f9       	bld	r25, 7
    1336:	08 95       	ret

00001338 <__fp_cmp>:
    1338:	99 0f       	add	r25, r25
    133a:	00 08       	sbc	r0, r0
    133c:	55 0f       	add	r21, r21
    133e:	aa 0b       	sbc	r26, r26
    1340:	e0 e8       	ldi	r30, 0x80	; 128
    1342:	fe ef       	ldi	r31, 0xFE	; 254
    1344:	16 16       	cp	r1, r22
    1346:	17 06       	cpc	r1, r23
    1348:	e8 07       	cpc	r30, r24
    134a:	f9 07       	cpc	r31, r25
    134c:	c0 f0       	brcs	.+48     	; 0x137e <__fp_cmp+0x46>
    134e:	12 16       	cp	r1, r18
    1350:	13 06       	cpc	r1, r19
    1352:	e4 07       	cpc	r30, r20
    1354:	f5 07       	cpc	r31, r21
    1356:	98 f0       	brcs	.+38     	; 0x137e <__fp_cmp+0x46>
    1358:	62 1b       	sub	r22, r18
    135a:	73 0b       	sbc	r23, r19
    135c:	84 0b       	sbc	r24, r20
    135e:	95 0b       	sbc	r25, r21
    1360:	39 f4       	brne	.+14     	; 0x1370 <__fp_cmp+0x38>
    1362:	0a 26       	eor	r0, r26
    1364:	61 f0       	breq	.+24     	; 0x137e <__fp_cmp+0x46>
    1366:	23 2b       	or	r18, r19
    1368:	24 2b       	or	r18, r20
    136a:	25 2b       	or	r18, r21
    136c:	21 f4       	brne	.+8      	; 0x1376 <__fp_cmp+0x3e>
    136e:	08 95       	ret
    1370:	0a 26       	eor	r0, r26
    1372:	09 f4       	brne	.+2      	; 0x1376 <__fp_cmp+0x3e>
    1374:	a1 40       	sbci	r26, 0x01	; 1
    1376:	a6 95       	lsr	r26
    1378:	8f ef       	ldi	r24, 0xFF	; 255
    137a:	81 1d       	adc	r24, r1
    137c:	81 1d       	adc	r24, r1
    137e:	08 95       	ret

00001380 <__fp_inf>:
    1380:	97 f9       	bld	r25, 7
    1382:	9f 67       	ori	r25, 0x7F	; 127
    1384:	80 e8       	ldi	r24, 0x80	; 128
    1386:	70 e0       	ldi	r23, 0x00	; 0
    1388:	60 e0       	ldi	r22, 0x00	; 0
    138a:	08 95       	ret

0000138c <__fp_nan>:
    138c:	9f ef       	ldi	r25, 0xFF	; 255
    138e:	80 ec       	ldi	r24, 0xC0	; 192
    1390:	08 95       	ret

00001392 <__fp_pscA>:
    1392:	00 24       	eor	r0, r0
    1394:	0a 94       	dec	r0
    1396:	16 16       	cp	r1, r22
    1398:	17 06       	cpc	r1, r23
    139a:	18 06       	cpc	r1, r24
    139c:	09 06       	cpc	r0, r25
    139e:	08 95       	ret

000013a0 <__fp_pscB>:
    13a0:	00 24       	eor	r0, r0
    13a2:	0a 94       	dec	r0
    13a4:	12 16       	cp	r1, r18
    13a6:	13 06       	cpc	r1, r19
    13a8:	14 06       	cpc	r1, r20
    13aa:	05 06       	cpc	r0, r21
    13ac:	08 95       	ret

000013ae <__fp_round>:
    13ae:	09 2e       	mov	r0, r25
    13b0:	03 94       	inc	r0
    13b2:	00 0c       	add	r0, r0
    13b4:	11 f4       	brne	.+4      	; 0x13ba <__fp_round+0xc>
    13b6:	88 23       	and	r24, r24
    13b8:	52 f0       	brmi	.+20     	; 0x13ce <__fp_round+0x20>
    13ba:	bb 0f       	add	r27, r27
    13bc:	40 f4       	brcc	.+16     	; 0x13ce <__fp_round+0x20>
    13be:	bf 2b       	or	r27, r31
    13c0:	11 f4       	brne	.+4      	; 0x13c6 <__fp_round+0x18>
    13c2:	60 ff       	sbrs	r22, 0
    13c4:	04 c0       	rjmp	.+8      	; 0x13ce <__fp_round+0x20>
    13c6:	6f 5f       	subi	r22, 0xFF	; 255
    13c8:	7f 4f       	sbci	r23, 0xFF	; 255
    13ca:	8f 4f       	sbci	r24, 0xFF	; 255
    13cc:	9f 4f       	sbci	r25, 0xFF	; 255
    13ce:	08 95       	ret

000013d0 <__fp_split3>:
    13d0:	57 fd       	sbrc	r21, 7
    13d2:	90 58       	subi	r25, 0x80	; 128
    13d4:	44 0f       	add	r20, r20
    13d6:	55 1f       	adc	r21, r21
    13d8:	59 f0       	breq	.+22     	; 0x13f0 <__fp_splitA+0x10>
    13da:	5f 3f       	cpi	r21, 0xFF	; 255
    13dc:	71 f0       	breq	.+28     	; 0x13fa <__fp_splitA+0x1a>
    13de:	47 95       	ror	r20

000013e0 <__fp_splitA>:
    13e0:	88 0f       	add	r24, r24
    13e2:	97 fb       	bst	r25, 7
    13e4:	99 1f       	adc	r25, r25
    13e6:	61 f0       	breq	.+24     	; 0x1400 <__fp_splitA+0x20>
    13e8:	9f 3f       	cpi	r25, 0xFF	; 255
    13ea:	79 f0       	breq	.+30     	; 0x140a <__fp_splitA+0x2a>
    13ec:	87 95       	ror	r24
    13ee:	08 95       	ret
    13f0:	12 16       	cp	r1, r18
    13f2:	13 06       	cpc	r1, r19
    13f4:	14 06       	cpc	r1, r20
    13f6:	55 1f       	adc	r21, r21
    13f8:	f2 cf       	rjmp	.-28     	; 0x13de <__fp_split3+0xe>
    13fa:	46 95       	lsr	r20
    13fc:	f1 df       	rcall	.-30     	; 0x13e0 <__fp_splitA>
    13fe:	08 c0       	rjmp	.+16     	; 0x1410 <__fp_splitA+0x30>
    1400:	16 16       	cp	r1, r22
    1402:	17 06       	cpc	r1, r23
    1404:	18 06       	cpc	r1, r24
    1406:	99 1f       	adc	r25, r25
    1408:	f1 cf       	rjmp	.-30     	; 0x13ec <__fp_splitA+0xc>
    140a:	86 95       	lsr	r24
    140c:	71 05       	cpc	r23, r1
    140e:	61 05       	cpc	r22, r1
    1410:	08 94       	sec
    1412:	08 95       	ret

00001414 <__fp_zero>:
    1414:	e8 94       	clt

00001416 <__fp_szero>:
    1416:	bb 27       	eor	r27, r27
    1418:	66 27       	eor	r22, r22
    141a:	77 27       	eor	r23, r23
    141c:	cb 01       	movw	r24, r22
    141e:	97 f9       	bld	r25, 7
    1420:	08 95       	ret

00001422 <__gesf2>:
    1422:	0e 94 9c 09 	call	0x1338	; 0x1338 <__fp_cmp>
    1426:	08 f4       	brcc	.+2      	; 0x142a <__gesf2+0x8>
    1428:	8f ef       	ldi	r24, 0xFF	; 255
    142a:	08 95       	ret

0000142c <__mulsf3>:
    142c:	0e 94 29 0a 	call	0x1452	; 0x1452 <__mulsf3x>
    1430:	0c 94 d7 09 	jmp	0x13ae	; 0x13ae <__fp_round>
    1434:	0e 94 c9 09 	call	0x1392	; 0x1392 <__fp_pscA>
    1438:	38 f0       	brcs	.+14     	; 0x1448 <__mulsf3+0x1c>
    143a:	0e 94 d0 09 	call	0x13a0	; 0x13a0 <__fp_pscB>
    143e:	20 f0       	brcs	.+8      	; 0x1448 <__mulsf3+0x1c>
    1440:	95 23       	and	r25, r21
    1442:	11 f0       	breq	.+4      	; 0x1448 <__mulsf3+0x1c>
    1444:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_inf>
    1448:	0c 94 c6 09 	jmp	0x138c	; 0x138c <__fp_nan>
    144c:	11 24       	eor	r1, r1
    144e:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__fp_szero>

00001452 <__mulsf3x>:
    1452:	0e 94 e8 09 	call	0x13d0	; 0x13d0 <__fp_split3>
    1456:	70 f3       	brcs	.-36     	; 0x1434 <__mulsf3+0x8>

00001458 <__mulsf3_pse>:
    1458:	95 9f       	mul	r25, r21
    145a:	c1 f3       	breq	.-16     	; 0x144c <__mulsf3+0x20>
    145c:	95 0f       	add	r25, r21
    145e:	50 e0       	ldi	r21, 0x00	; 0
    1460:	55 1f       	adc	r21, r21
    1462:	62 9f       	mul	r22, r18
    1464:	f0 01       	movw	r30, r0
    1466:	72 9f       	mul	r23, r18
    1468:	bb 27       	eor	r27, r27
    146a:	f0 0d       	add	r31, r0
    146c:	b1 1d       	adc	r27, r1
    146e:	63 9f       	mul	r22, r19
    1470:	aa 27       	eor	r26, r26
    1472:	f0 0d       	add	r31, r0
    1474:	b1 1d       	adc	r27, r1
    1476:	aa 1f       	adc	r26, r26
    1478:	64 9f       	mul	r22, r20
    147a:	66 27       	eor	r22, r22
    147c:	b0 0d       	add	r27, r0
    147e:	a1 1d       	adc	r26, r1
    1480:	66 1f       	adc	r22, r22
    1482:	82 9f       	mul	r24, r18
    1484:	22 27       	eor	r18, r18
    1486:	b0 0d       	add	r27, r0
    1488:	a1 1d       	adc	r26, r1
    148a:	62 1f       	adc	r22, r18
    148c:	73 9f       	mul	r23, r19
    148e:	b0 0d       	add	r27, r0
    1490:	a1 1d       	adc	r26, r1
    1492:	62 1f       	adc	r22, r18
    1494:	83 9f       	mul	r24, r19
    1496:	a0 0d       	add	r26, r0
    1498:	61 1d       	adc	r22, r1
    149a:	22 1f       	adc	r18, r18
    149c:	74 9f       	mul	r23, r20
    149e:	33 27       	eor	r19, r19
    14a0:	a0 0d       	add	r26, r0
    14a2:	61 1d       	adc	r22, r1
    14a4:	23 1f       	adc	r18, r19
    14a6:	84 9f       	mul	r24, r20
    14a8:	60 0d       	add	r22, r0
    14aa:	21 1d       	adc	r18, r1
    14ac:	82 2f       	mov	r24, r18
    14ae:	76 2f       	mov	r23, r22
    14b0:	6a 2f       	mov	r22, r26
    14b2:	11 24       	eor	r1, r1
    14b4:	9f 57       	subi	r25, 0x7F	; 127
    14b6:	50 40       	sbci	r21, 0x00	; 0
    14b8:	9a f0       	brmi	.+38     	; 0x14e0 <__mulsf3_pse+0x88>
    14ba:	f1 f0       	breq	.+60     	; 0x14f8 <__mulsf3_pse+0xa0>
    14bc:	88 23       	and	r24, r24
    14be:	4a f0       	brmi	.+18     	; 0x14d2 <__mulsf3_pse+0x7a>
    14c0:	ee 0f       	add	r30, r30
    14c2:	ff 1f       	adc	r31, r31
    14c4:	bb 1f       	adc	r27, r27
    14c6:	66 1f       	adc	r22, r22
    14c8:	77 1f       	adc	r23, r23
    14ca:	88 1f       	adc	r24, r24
    14cc:	91 50       	subi	r25, 0x01	; 1
    14ce:	50 40       	sbci	r21, 0x00	; 0
    14d0:	a9 f7       	brne	.-22     	; 0x14bc <__mulsf3_pse+0x64>
    14d2:	9e 3f       	cpi	r25, 0xFE	; 254
    14d4:	51 05       	cpc	r21, r1
    14d6:	80 f0       	brcs	.+32     	; 0x14f8 <__mulsf3_pse+0xa0>
    14d8:	0c 94 c0 09 	jmp	0x1380	; 0x1380 <__fp_inf>
    14dc:	0c 94 0b 0a 	jmp	0x1416	; 0x1416 <__fp_szero>
    14e0:	5f 3f       	cpi	r21, 0xFF	; 255
    14e2:	e4 f3       	brlt	.-8      	; 0x14dc <__mulsf3_pse+0x84>
    14e4:	98 3e       	cpi	r25, 0xE8	; 232
    14e6:	d4 f3       	brlt	.-12     	; 0x14dc <__mulsf3_pse+0x84>
    14e8:	86 95       	lsr	r24
    14ea:	77 95       	ror	r23
    14ec:	67 95       	ror	r22
    14ee:	b7 95       	ror	r27
    14f0:	f7 95       	ror	r31
    14f2:	e7 95       	ror	r30
    14f4:	9f 5f       	subi	r25, 0xFF	; 255
    14f6:	c1 f7       	brne	.-16     	; 0x14e8 <__mulsf3_pse+0x90>
    14f8:	fe 2b       	or	r31, r30
    14fa:	88 0f       	add	r24, r24
    14fc:	91 1d       	adc	r25, r1
    14fe:	96 95       	lsr	r25
    1500:	87 95       	ror	r24
    1502:	97 f9       	bld	r25, 7
    1504:	08 95       	ret

00001506 <dtostrf>:
    1506:	ef 92       	push	r14
    1508:	0f 93       	push	r16
    150a:	1f 93       	push	r17
    150c:	cf 93       	push	r28
    150e:	df 93       	push	r29
    1510:	e8 01       	movw	r28, r16
    1512:	47 fd       	sbrc	r20, 7
    1514:	02 c0       	rjmp	.+4      	; 0x151a <dtostrf+0x14>
    1516:	34 e0       	ldi	r19, 0x04	; 4
    1518:	01 c0       	rjmp	.+2      	; 0x151c <dtostrf+0x16>
    151a:	34 e1       	ldi	r19, 0x14	; 20
    151c:	04 2e       	mov	r0, r20
    151e:	00 0c       	add	r0, r0
    1520:	55 0b       	sbc	r21, r21
    1522:	57 ff       	sbrs	r21, 7
    1524:	03 c0       	rjmp	.+6      	; 0x152c <dtostrf+0x26>
    1526:	51 95       	neg	r21
    1528:	41 95       	neg	r20
    152a:	51 09       	sbc	r21, r1
    152c:	e3 2e       	mov	r14, r19
    152e:	02 2f       	mov	r16, r18
    1530:	24 2f       	mov	r18, r20
    1532:	ae 01       	movw	r20, r28
    1534:	0e 94 a3 0a 	call	0x1546	; 0x1546 <dtoa_prf>
    1538:	ce 01       	movw	r24, r28
    153a:	df 91       	pop	r29
    153c:	cf 91       	pop	r28
    153e:	1f 91       	pop	r17
    1540:	0f 91       	pop	r16
    1542:	ef 90       	pop	r14
    1544:	08 95       	ret

00001546 <dtoa_prf>:
    1546:	a9 e0       	ldi	r26, 0x09	; 9
    1548:	b0 e0       	ldi	r27, 0x00	; 0
    154a:	e9 ea       	ldi	r30, 0xA9	; 169
    154c:	fa e0       	ldi	r31, 0x0A	; 10
    154e:	0c 94 db 0c 	jmp	0x19b6	; 0x19b6 <__prologue_saves__+0xc>
    1552:	6a 01       	movw	r12, r20
    1554:	12 2f       	mov	r17, r18
    1556:	b0 2e       	mov	r11, r16
    1558:	2b e3       	ldi	r18, 0x3B	; 59
    155a:	20 17       	cp	r18, r16
    155c:	20 f0       	brcs	.+8      	; 0x1566 <dtoa_prf+0x20>
    155e:	ff 24       	eor	r15, r15
    1560:	f3 94       	inc	r15
    1562:	f0 0e       	add	r15, r16
    1564:	02 c0       	rjmp	.+4      	; 0x156a <dtoa_prf+0x24>
    1566:	2c e3       	ldi	r18, 0x3C	; 60
    1568:	f2 2e       	mov	r15, r18
    156a:	0f 2d       	mov	r16, r15
    156c:	27 e0       	ldi	r18, 0x07	; 7
    156e:	ae 01       	movw	r20, r28
    1570:	4f 5f       	subi	r20, 0xFF	; 255
    1572:	5f 4f       	sbci	r21, 0xFF	; 255
    1574:	0e 94 fd 0b 	call	0x17fa	; 0x17fa <__ftoa_engine>
    1578:	bc 01       	movw	r22, r24
    157a:	49 81       	ldd	r20, Y+1	; 0x01
    157c:	84 2f       	mov	r24, r20
    157e:	89 70       	andi	r24, 0x09	; 9
    1580:	81 30       	cpi	r24, 0x01	; 1
    1582:	31 f0       	breq	.+12     	; 0x1590 <dtoa_prf+0x4a>
    1584:	e1 fc       	sbrc	r14, 1
    1586:	06 c0       	rjmp	.+12     	; 0x1594 <dtoa_prf+0x4e>
    1588:	e0 fe       	sbrs	r14, 0
    158a:	06 c0       	rjmp	.+12     	; 0x1598 <dtoa_prf+0x52>
    158c:	90 e2       	ldi	r25, 0x20	; 32
    158e:	05 c0       	rjmp	.+10     	; 0x159a <dtoa_prf+0x54>
    1590:	9d e2       	ldi	r25, 0x2D	; 45
    1592:	03 c0       	rjmp	.+6      	; 0x159a <dtoa_prf+0x54>
    1594:	9b e2       	ldi	r25, 0x2B	; 43
    1596:	01 c0       	rjmp	.+2      	; 0x159a <dtoa_prf+0x54>
    1598:	90 e0       	ldi	r25, 0x00	; 0
    159a:	5e 2d       	mov	r21, r14
    159c:	50 71       	andi	r21, 0x10	; 16
    159e:	43 ff       	sbrs	r20, 3
    15a0:	3c c0       	rjmp	.+120    	; 0x161a <dtoa_prf+0xd4>
    15a2:	91 11       	cpse	r25, r1
    15a4:	02 c0       	rjmp	.+4      	; 0x15aa <dtoa_prf+0x64>
    15a6:	83 e0       	ldi	r24, 0x03	; 3
    15a8:	01 c0       	rjmp	.+2      	; 0x15ac <dtoa_prf+0x66>
    15aa:	84 e0       	ldi	r24, 0x04	; 4
    15ac:	81 17       	cp	r24, r17
    15ae:	18 f4       	brcc	.+6      	; 0x15b6 <dtoa_prf+0x70>
    15b0:	21 2f       	mov	r18, r17
    15b2:	28 1b       	sub	r18, r24
    15b4:	01 c0       	rjmp	.+2      	; 0x15b8 <dtoa_prf+0x72>
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	51 11       	cpse	r21, r1
    15ba:	0b c0       	rjmp	.+22     	; 0x15d2 <dtoa_prf+0x8c>
    15bc:	f6 01       	movw	r30, r12
    15be:	82 2f       	mov	r24, r18
    15c0:	30 e2       	ldi	r19, 0x20	; 32
    15c2:	88 23       	and	r24, r24
    15c4:	19 f0       	breq	.+6      	; 0x15cc <dtoa_prf+0x86>
    15c6:	31 93       	st	Z+, r19
    15c8:	81 50       	subi	r24, 0x01	; 1
    15ca:	fb cf       	rjmp	.-10     	; 0x15c2 <dtoa_prf+0x7c>
    15cc:	c2 0e       	add	r12, r18
    15ce:	d1 1c       	adc	r13, r1
    15d0:	20 e0       	ldi	r18, 0x00	; 0
    15d2:	99 23       	and	r25, r25
    15d4:	29 f0       	breq	.+10     	; 0x15e0 <dtoa_prf+0x9a>
    15d6:	d6 01       	movw	r26, r12
    15d8:	9c 93       	st	X, r25
    15da:	f6 01       	movw	r30, r12
    15dc:	31 96       	adiw	r30, 0x01	; 1
    15de:	6f 01       	movw	r12, r30
    15e0:	c6 01       	movw	r24, r12
    15e2:	03 96       	adiw	r24, 0x03	; 3
    15e4:	e2 fe       	sbrs	r14, 2
    15e6:	0a c0       	rjmp	.+20     	; 0x15fc <dtoa_prf+0xb6>
    15e8:	3e e4       	ldi	r19, 0x4E	; 78
    15ea:	d6 01       	movw	r26, r12
    15ec:	3c 93       	st	X, r19
    15ee:	41 e4       	ldi	r20, 0x41	; 65
    15f0:	11 96       	adiw	r26, 0x01	; 1
    15f2:	4c 93       	st	X, r20
    15f4:	11 97       	sbiw	r26, 0x01	; 1
    15f6:	12 96       	adiw	r26, 0x02	; 2
    15f8:	3c 93       	st	X, r19
    15fa:	06 c0       	rjmp	.+12     	; 0x1608 <dtoa_prf+0xc2>
    15fc:	3e e6       	ldi	r19, 0x6E	; 110
    15fe:	f6 01       	movw	r30, r12
    1600:	30 83       	st	Z, r19
    1602:	41 e6       	ldi	r20, 0x61	; 97
    1604:	41 83       	std	Z+1, r20	; 0x01
    1606:	32 83       	std	Z+2, r19	; 0x02
    1608:	fc 01       	movw	r30, r24
    160a:	32 2f       	mov	r19, r18
    160c:	40 e2       	ldi	r20, 0x20	; 32
    160e:	33 23       	and	r19, r19
    1610:	09 f4       	brne	.+2      	; 0x1614 <dtoa_prf+0xce>
    1612:	42 c0       	rjmp	.+132    	; 0x1698 <dtoa_prf+0x152>
    1614:	41 93       	st	Z+, r20
    1616:	31 50       	subi	r19, 0x01	; 1
    1618:	fa cf       	rjmp	.-12     	; 0x160e <dtoa_prf+0xc8>
    161a:	42 ff       	sbrs	r20, 2
    161c:	44 c0       	rjmp	.+136    	; 0x16a6 <dtoa_prf+0x160>
    161e:	91 11       	cpse	r25, r1
    1620:	02 c0       	rjmp	.+4      	; 0x1626 <dtoa_prf+0xe0>
    1622:	83 e0       	ldi	r24, 0x03	; 3
    1624:	01 c0       	rjmp	.+2      	; 0x1628 <dtoa_prf+0xe2>
    1626:	84 e0       	ldi	r24, 0x04	; 4
    1628:	81 17       	cp	r24, r17
    162a:	18 f4       	brcc	.+6      	; 0x1632 <dtoa_prf+0xec>
    162c:	21 2f       	mov	r18, r17
    162e:	28 1b       	sub	r18, r24
    1630:	01 c0       	rjmp	.+2      	; 0x1634 <dtoa_prf+0xee>
    1632:	20 e0       	ldi	r18, 0x00	; 0
    1634:	51 11       	cpse	r21, r1
    1636:	0b c0       	rjmp	.+22     	; 0x164e <dtoa_prf+0x108>
    1638:	f6 01       	movw	r30, r12
    163a:	82 2f       	mov	r24, r18
    163c:	30 e2       	ldi	r19, 0x20	; 32
    163e:	88 23       	and	r24, r24
    1640:	19 f0       	breq	.+6      	; 0x1648 <dtoa_prf+0x102>
    1642:	31 93       	st	Z+, r19
    1644:	81 50       	subi	r24, 0x01	; 1
    1646:	fb cf       	rjmp	.-10     	; 0x163e <dtoa_prf+0xf8>
    1648:	c2 0e       	add	r12, r18
    164a:	d1 1c       	adc	r13, r1
    164c:	20 e0       	ldi	r18, 0x00	; 0
    164e:	99 23       	and	r25, r25
    1650:	29 f0       	breq	.+10     	; 0x165c <dtoa_prf+0x116>
    1652:	d6 01       	movw	r26, r12
    1654:	9c 93       	st	X, r25
    1656:	f6 01       	movw	r30, r12
    1658:	31 96       	adiw	r30, 0x01	; 1
    165a:	6f 01       	movw	r12, r30
    165c:	c6 01       	movw	r24, r12
    165e:	03 96       	adiw	r24, 0x03	; 3
    1660:	e2 fe       	sbrs	r14, 2
    1662:	0b c0       	rjmp	.+22     	; 0x167a <dtoa_prf+0x134>
    1664:	39 e4       	ldi	r19, 0x49	; 73
    1666:	d6 01       	movw	r26, r12
    1668:	3c 93       	st	X, r19
    166a:	3e e4       	ldi	r19, 0x4E	; 78
    166c:	11 96       	adiw	r26, 0x01	; 1
    166e:	3c 93       	st	X, r19
    1670:	11 97       	sbiw	r26, 0x01	; 1
    1672:	36 e4       	ldi	r19, 0x46	; 70
    1674:	12 96       	adiw	r26, 0x02	; 2
    1676:	3c 93       	st	X, r19
    1678:	07 c0       	rjmp	.+14     	; 0x1688 <dtoa_prf+0x142>
    167a:	39 e6       	ldi	r19, 0x69	; 105
    167c:	f6 01       	movw	r30, r12
    167e:	30 83       	st	Z, r19
    1680:	3e e6       	ldi	r19, 0x6E	; 110
    1682:	31 83       	std	Z+1, r19	; 0x01
    1684:	36 e6       	ldi	r19, 0x66	; 102
    1686:	32 83       	std	Z+2, r19	; 0x02
    1688:	fc 01       	movw	r30, r24
    168a:	32 2f       	mov	r19, r18
    168c:	40 e2       	ldi	r20, 0x20	; 32
    168e:	33 23       	and	r19, r19
    1690:	19 f0       	breq	.+6      	; 0x1698 <dtoa_prf+0x152>
    1692:	41 93       	st	Z+, r20
    1694:	31 50       	subi	r19, 0x01	; 1
    1696:	fb cf       	rjmp	.-10     	; 0x168e <dtoa_prf+0x148>
    1698:	fc 01       	movw	r30, r24
    169a:	e2 0f       	add	r30, r18
    169c:	f1 1d       	adc	r31, r1
    169e:	10 82       	st	Z, r1
    16a0:	8e ef       	ldi	r24, 0xFE	; 254
    16a2:	9f ef       	ldi	r25, 0xFF	; 255
    16a4:	a6 c0       	rjmp	.+332    	; 0x17f2 <dtoa_prf+0x2ac>
    16a6:	21 e0       	ldi	r18, 0x01	; 1
    16a8:	30 e0       	ldi	r19, 0x00	; 0
    16aa:	91 11       	cpse	r25, r1
    16ac:	02 c0       	rjmp	.+4      	; 0x16b2 <dtoa_prf+0x16c>
    16ae:	20 e0       	ldi	r18, 0x00	; 0
    16b0:	30 e0       	ldi	r19, 0x00	; 0
    16b2:	16 16       	cp	r1, r22
    16b4:	17 06       	cpc	r1, r23
    16b6:	1c f4       	brge	.+6      	; 0x16be <dtoa_prf+0x178>
    16b8:	fb 01       	movw	r30, r22
    16ba:	31 96       	adiw	r30, 0x01	; 1
    16bc:	02 c0       	rjmp	.+4      	; 0x16c2 <dtoa_prf+0x17c>
    16be:	e1 e0       	ldi	r30, 0x01	; 1
    16c0:	f0 e0       	ldi	r31, 0x00	; 0
    16c2:	2e 0f       	add	r18, r30
    16c4:	3f 1f       	adc	r19, r31
    16c6:	bb 20       	and	r11, r11
    16c8:	21 f0       	breq	.+8      	; 0x16d2 <dtoa_prf+0x18c>
    16ca:	eb 2d       	mov	r30, r11
    16cc:	f0 e0       	ldi	r31, 0x00	; 0
    16ce:	31 96       	adiw	r30, 0x01	; 1
    16d0:	02 c0       	rjmp	.+4      	; 0x16d6 <dtoa_prf+0x190>
    16d2:	e0 e0       	ldi	r30, 0x00	; 0
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	2e 0f       	add	r18, r30
    16d8:	3f 1f       	adc	r19, r31
    16da:	e1 2f       	mov	r30, r17
    16dc:	f0 e0       	ldi	r31, 0x00	; 0
    16de:	2e 17       	cp	r18, r30
    16e0:	3f 07       	cpc	r19, r31
    16e2:	1c f4       	brge	.+6      	; 0x16ea <dtoa_prf+0x1a4>
    16e4:	12 1b       	sub	r17, r18
    16e6:	21 2f       	mov	r18, r17
    16e8:	01 c0       	rjmp	.+2      	; 0x16ec <dtoa_prf+0x1a6>
    16ea:	20 e0       	ldi	r18, 0x00	; 0
    16ec:	8e 2d       	mov	r24, r14
    16ee:	88 71       	andi	r24, 0x18	; 24
    16f0:	59 f4       	brne	.+22     	; 0x1708 <dtoa_prf+0x1c2>
    16f2:	f6 01       	movw	r30, r12
    16f4:	82 2f       	mov	r24, r18
    16f6:	30 e2       	ldi	r19, 0x20	; 32
    16f8:	88 23       	and	r24, r24
    16fa:	19 f0       	breq	.+6      	; 0x1702 <dtoa_prf+0x1bc>
    16fc:	31 93       	st	Z+, r19
    16fe:	81 50       	subi	r24, 0x01	; 1
    1700:	fb cf       	rjmp	.-10     	; 0x16f8 <dtoa_prf+0x1b2>
    1702:	c2 0e       	add	r12, r18
    1704:	d1 1c       	adc	r13, r1
    1706:	20 e0       	ldi	r18, 0x00	; 0
    1708:	99 23       	and	r25, r25
    170a:	29 f0       	breq	.+10     	; 0x1716 <dtoa_prf+0x1d0>
    170c:	d6 01       	movw	r26, r12
    170e:	9c 93       	st	X, r25
    1710:	f6 01       	movw	r30, r12
    1712:	31 96       	adiw	r30, 0x01	; 1
    1714:	6f 01       	movw	r12, r30
    1716:	51 11       	cpse	r21, r1
    1718:	0b c0       	rjmp	.+22     	; 0x1730 <dtoa_prf+0x1ea>
    171a:	f6 01       	movw	r30, r12
    171c:	82 2f       	mov	r24, r18
    171e:	90 e3       	ldi	r25, 0x30	; 48
    1720:	88 23       	and	r24, r24
    1722:	19 f0       	breq	.+6      	; 0x172a <dtoa_prf+0x1e4>
    1724:	91 93       	st	Z+, r25
    1726:	81 50       	subi	r24, 0x01	; 1
    1728:	fb cf       	rjmp	.-10     	; 0x1720 <dtoa_prf+0x1da>
    172a:	c2 0e       	add	r12, r18
    172c:	d1 1c       	adc	r13, r1
    172e:	20 e0       	ldi	r18, 0x00	; 0
    1730:	0f 2d       	mov	r16, r15
    1732:	06 0f       	add	r16, r22
    1734:	9a 81       	ldd	r25, Y+2	; 0x02
    1736:	34 2f       	mov	r19, r20
    1738:	30 71       	andi	r19, 0x10	; 16
    173a:	44 ff       	sbrs	r20, 4
    173c:	03 c0       	rjmp	.+6      	; 0x1744 <dtoa_prf+0x1fe>
    173e:	91 33       	cpi	r25, 0x31	; 49
    1740:	09 f4       	brne	.+2      	; 0x1744 <dtoa_prf+0x1fe>
    1742:	01 50       	subi	r16, 0x01	; 1
    1744:	10 16       	cp	r1, r16
    1746:	24 f4       	brge	.+8      	; 0x1750 <dtoa_prf+0x20a>
    1748:	09 30       	cpi	r16, 0x09	; 9
    174a:	18 f0       	brcs	.+6      	; 0x1752 <dtoa_prf+0x20c>
    174c:	08 e0       	ldi	r16, 0x08	; 8
    174e:	01 c0       	rjmp	.+2      	; 0x1752 <dtoa_prf+0x20c>
    1750:	01 e0       	ldi	r16, 0x01	; 1
    1752:	ab 01       	movw	r20, r22
    1754:	77 ff       	sbrs	r23, 7
    1756:	02 c0       	rjmp	.+4      	; 0x175c <dtoa_prf+0x216>
    1758:	40 e0       	ldi	r20, 0x00	; 0
    175a:	50 e0       	ldi	r21, 0x00	; 0
    175c:	fb 01       	movw	r30, r22
    175e:	e4 1b       	sub	r30, r20
    1760:	f5 0b       	sbc	r31, r21
    1762:	a1 e0       	ldi	r26, 0x01	; 1
    1764:	b0 e0       	ldi	r27, 0x00	; 0
    1766:	ac 0f       	add	r26, r28
    1768:	bd 1f       	adc	r27, r29
    176a:	ea 0f       	add	r30, r26
    176c:	fb 1f       	adc	r31, r27
    176e:	8e e2       	ldi	r24, 0x2E	; 46
    1770:	a8 2e       	mov	r10, r24
    1772:	4b 01       	movw	r8, r22
    1774:	80 1a       	sub	r8, r16
    1776:	91 08       	sbc	r9, r1
    1778:	0b 2d       	mov	r16, r11
    177a:	10 e0       	ldi	r17, 0x00	; 0
    177c:	11 95       	neg	r17
    177e:	01 95       	neg	r16
    1780:	11 09       	sbc	r17, r1
    1782:	4f 3f       	cpi	r20, 0xFF	; 255
    1784:	bf ef       	ldi	r27, 0xFF	; 255
    1786:	5b 07       	cpc	r21, r27
    1788:	21 f4       	brne	.+8      	; 0x1792 <dtoa_prf+0x24c>
    178a:	d6 01       	movw	r26, r12
    178c:	ac 92       	st	X, r10
    178e:	11 96       	adiw	r26, 0x01	; 1
    1790:	6d 01       	movw	r12, r26
    1792:	64 17       	cp	r22, r20
    1794:	75 07       	cpc	r23, r21
    1796:	2c f0       	brlt	.+10     	; 0x17a2 <dtoa_prf+0x25c>
    1798:	84 16       	cp	r8, r20
    179a:	95 06       	cpc	r9, r21
    179c:	14 f4       	brge	.+4      	; 0x17a2 <dtoa_prf+0x25c>
    179e:	81 81       	ldd	r24, Z+1	; 0x01
    17a0:	01 c0       	rjmp	.+2      	; 0x17a4 <dtoa_prf+0x25e>
    17a2:	80 e3       	ldi	r24, 0x30	; 48
    17a4:	41 50       	subi	r20, 0x01	; 1
    17a6:	51 09       	sbc	r21, r1
    17a8:	31 96       	adiw	r30, 0x01	; 1
    17aa:	d6 01       	movw	r26, r12
    17ac:	11 96       	adiw	r26, 0x01	; 1
    17ae:	7d 01       	movw	r14, r26
    17b0:	40 17       	cp	r20, r16
    17b2:	51 07       	cpc	r21, r17
    17b4:	24 f0       	brlt	.+8      	; 0x17be <dtoa_prf+0x278>
    17b6:	d6 01       	movw	r26, r12
    17b8:	8c 93       	st	X, r24
    17ba:	67 01       	movw	r12, r14
    17bc:	e2 cf       	rjmp	.-60     	; 0x1782 <dtoa_prf+0x23c>
    17be:	64 17       	cp	r22, r20
    17c0:	75 07       	cpc	r23, r21
    17c2:	39 f4       	brne	.+14     	; 0x17d2 <dtoa_prf+0x28c>
    17c4:	96 33       	cpi	r25, 0x36	; 54
    17c6:	20 f4       	brcc	.+8      	; 0x17d0 <dtoa_prf+0x28a>
    17c8:	95 33       	cpi	r25, 0x35	; 53
    17ca:	19 f4       	brne	.+6      	; 0x17d2 <dtoa_prf+0x28c>
    17cc:	31 11       	cpse	r19, r1
    17ce:	01 c0       	rjmp	.+2      	; 0x17d2 <dtoa_prf+0x28c>
    17d0:	81 e3       	ldi	r24, 0x31	; 49
    17d2:	f6 01       	movw	r30, r12
    17d4:	80 83       	st	Z, r24
    17d6:	f7 01       	movw	r30, r14
    17d8:	82 2f       	mov	r24, r18
    17da:	90 e2       	ldi	r25, 0x20	; 32
    17dc:	88 23       	and	r24, r24
    17de:	19 f0       	breq	.+6      	; 0x17e6 <dtoa_prf+0x2a0>
    17e0:	91 93       	st	Z+, r25
    17e2:	81 50       	subi	r24, 0x01	; 1
    17e4:	fb cf       	rjmp	.-10     	; 0x17dc <dtoa_prf+0x296>
    17e6:	f7 01       	movw	r30, r14
    17e8:	e2 0f       	add	r30, r18
    17ea:	f1 1d       	adc	r31, r1
    17ec:	10 82       	st	Z, r1
    17ee:	80 e0       	ldi	r24, 0x00	; 0
    17f0:	90 e0       	ldi	r25, 0x00	; 0
    17f2:	29 96       	adiw	r28, 0x09	; 9
    17f4:	ec e0       	ldi	r30, 0x0C	; 12
    17f6:	0c 94 f7 0c 	jmp	0x19ee	; 0x19ee <__epilogue_restores__+0xc>

000017fa <__ftoa_engine>:
    17fa:	28 30       	cpi	r18, 0x08	; 8
    17fc:	08 f0       	brcs	.+2      	; 0x1800 <__ftoa_engine+0x6>
    17fe:	27 e0       	ldi	r18, 0x07	; 7
    1800:	33 27       	eor	r19, r19
    1802:	da 01       	movw	r26, r20
    1804:	99 0f       	add	r25, r25
    1806:	31 1d       	adc	r19, r1
    1808:	87 fd       	sbrc	r24, 7
    180a:	91 60       	ori	r25, 0x01	; 1
    180c:	00 96       	adiw	r24, 0x00	; 0
    180e:	61 05       	cpc	r22, r1
    1810:	71 05       	cpc	r23, r1
    1812:	39 f4       	brne	.+14     	; 0x1822 <__ftoa_engine+0x28>
    1814:	32 60       	ori	r19, 0x02	; 2
    1816:	2e 5f       	subi	r18, 0xFE	; 254
    1818:	3d 93       	st	X+, r19
    181a:	30 e3       	ldi	r19, 0x30	; 48
    181c:	2a 95       	dec	r18
    181e:	e1 f7       	brne	.-8      	; 0x1818 <__ftoa_engine+0x1e>
    1820:	08 95       	ret
    1822:	9f 3f       	cpi	r25, 0xFF	; 255
    1824:	30 f0       	brcs	.+12     	; 0x1832 <__ftoa_engine+0x38>
    1826:	80 38       	cpi	r24, 0x80	; 128
    1828:	71 05       	cpc	r23, r1
    182a:	61 05       	cpc	r22, r1
    182c:	09 f0       	breq	.+2      	; 0x1830 <__ftoa_engine+0x36>
    182e:	3c 5f       	subi	r19, 0xFC	; 252
    1830:	3c 5f       	subi	r19, 0xFC	; 252
    1832:	3d 93       	st	X+, r19
    1834:	91 30       	cpi	r25, 0x01	; 1
    1836:	08 f0       	brcs	.+2      	; 0x183a <__ftoa_engine+0x40>
    1838:	80 68       	ori	r24, 0x80	; 128
    183a:	91 1d       	adc	r25, r1
    183c:	df 93       	push	r29
    183e:	cf 93       	push	r28
    1840:	1f 93       	push	r17
    1842:	0f 93       	push	r16
    1844:	ff 92       	push	r15
    1846:	ef 92       	push	r14
    1848:	19 2f       	mov	r17, r25
    184a:	98 7f       	andi	r25, 0xF8	; 248
    184c:	96 95       	lsr	r25
    184e:	e9 2f       	mov	r30, r25
    1850:	96 95       	lsr	r25
    1852:	96 95       	lsr	r25
    1854:	e9 0f       	add	r30, r25
    1856:	ff 27       	eor	r31, r31
    1858:	ee 53       	subi	r30, 0x3E	; 62
    185a:	ff 4f       	sbci	r31, 0xFF	; 255
    185c:	99 27       	eor	r25, r25
    185e:	33 27       	eor	r19, r19
    1860:	ee 24       	eor	r14, r14
    1862:	ff 24       	eor	r15, r15
    1864:	a7 01       	movw	r20, r14
    1866:	e7 01       	movw	r28, r14
    1868:	05 90       	lpm	r0, Z+
    186a:	08 94       	sec
    186c:	07 94       	ror	r0
    186e:	28 f4       	brcc	.+10     	; 0x187a <__ftoa_engine+0x80>
    1870:	36 0f       	add	r19, r22
    1872:	e7 1e       	adc	r14, r23
    1874:	f8 1e       	adc	r15, r24
    1876:	49 1f       	adc	r20, r25
    1878:	51 1d       	adc	r21, r1
    187a:	66 0f       	add	r22, r22
    187c:	77 1f       	adc	r23, r23
    187e:	88 1f       	adc	r24, r24
    1880:	99 1f       	adc	r25, r25
    1882:	06 94       	lsr	r0
    1884:	a1 f7       	brne	.-24     	; 0x186e <__ftoa_engine+0x74>
    1886:	05 90       	lpm	r0, Z+
    1888:	07 94       	ror	r0
    188a:	28 f4       	brcc	.+10     	; 0x1896 <__ftoa_engine+0x9c>
    188c:	e7 0e       	add	r14, r23
    188e:	f8 1e       	adc	r15, r24
    1890:	49 1f       	adc	r20, r25
    1892:	56 1f       	adc	r21, r22
    1894:	c1 1d       	adc	r28, r1
    1896:	77 0f       	add	r23, r23
    1898:	88 1f       	adc	r24, r24
    189a:	99 1f       	adc	r25, r25
    189c:	66 1f       	adc	r22, r22
    189e:	06 94       	lsr	r0
    18a0:	a1 f7       	brne	.-24     	; 0x188a <__ftoa_engine+0x90>
    18a2:	05 90       	lpm	r0, Z+
    18a4:	07 94       	ror	r0
    18a6:	28 f4       	brcc	.+10     	; 0x18b2 <__ftoa_engine+0xb8>
    18a8:	f8 0e       	add	r15, r24
    18aa:	49 1f       	adc	r20, r25
    18ac:	56 1f       	adc	r21, r22
    18ae:	c7 1f       	adc	r28, r23
    18b0:	d1 1d       	adc	r29, r1
    18b2:	88 0f       	add	r24, r24
    18b4:	99 1f       	adc	r25, r25
    18b6:	66 1f       	adc	r22, r22
    18b8:	77 1f       	adc	r23, r23
    18ba:	06 94       	lsr	r0
    18bc:	a1 f7       	brne	.-24     	; 0x18a6 <__ftoa_engine+0xac>
    18be:	05 90       	lpm	r0, Z+
    18c0:	07 94       	ror	r0
    18c2:	20 f4       	brcc	.+8      	; 0x18cc <__ftoa_engine+0xd2>
    18c4:	49 0f       	add	r20, r25
    18c6:	56 1f       	adc	r21, r22
    18c8:	c7 1f       	adc	r28, r23
    18ca:	d8 1f       	adc	r29, r24
    18cc:	99 0f       	add	r25, r25
    18ce:	66 1f       	adc	r22, r22
    18d0:	77 1f       	adc	r23, r23
    18d2:	88 1f       	adc	r24, r24
    18d4:	06 94       	lsr	r0
    18d6:	a9 f7       	brne	.-22     	; 0x18c2 <__ftoa_engine+0xc8>
    18d8:	84 91       	lpm	r24, Z
    18da:	10 95       	com	r17
    18dc:	17 70       	andi	r17, 0x07	; 7
    18de:	41 f0       	breq	.+16     	; 0x18f0 <__ftoa_engine+0xf6>
    18e0:	d6 95       	lsr	r29
    18e2:	c7 95       	ror	r28
    18e4:	57 95       	ror	r21
    18e6:	47 95       	ror	r20
    18e8:	f7 94       	ror	r15
    18ea:	e7 94       	ror	r14
    18ec:	1a 95       	dec	r17
    18ee:	c1 f7       	brne	.-16     	; 0x18e0 <__ftoa_engine+0xe6>
    18f0:	e8 e6       	ldi	r30, 0x68	; 104
    18f2:	f0 e0       	ldi	r31, 0x00	; 0
    18f4:	68 94       	set
    18f6:	15 90       	lpm	r1, Z+
    18f8:	15 91       	lpm	r17, Z+
    18fa:	35 91       	lpm	r19, Z+
    18fc:	65 91       	lpm	r22, Z+
    18fe:	95 91       	lpm	r25, Z+
    1900:	05 90       	lpm	r0, Z+
    1902:	7f e2       	ldi	r23, 0x2F	; 47
    1904:	73 95       	inc	r23
    1906:	e1 18       	sub	r14, r1
    1908:	f1 0a       	sbc	r15, r17
    190a:	43 0b       	sbc	r20, r19
    190c:	56 0b       	sbc	r21, r22
    190e:	c9 0b       	sbc	r28, r25
    1910:	d0 09       	sbc	r29, r0
    1912:	c0 f7       	brcc	.-16     	; 0x1904 <__ftoa_engine+0x10a>
    1914:	e1 0c       	add	r14, r1
    1916:	f1 1e       	adc	r15, r17
    1918:	43 1f       	adc	r20, r19
    191a:	56 1f       	adc	r21, r22
    191c:	c9 1f       	adc	r28, r25
    191e:	d0 1d       	adc	r29, r0
    1920:	7e f4       	brtc	.+30     	; 0x1940 <__ftoa_engine+0x146>
    1922:	70 33       	cpi	r23, 0x30	; 48
    1924:	11 f4       	brne	.+4      	; 0x192a <__ftoa_engine+0x130>
    1926:	8a 95       	dec	r24
    1928:	e6 cf       	rjmp	.-52     	; 0x18f6 <__ftoa_engine+0xfc>
    192a:	e8 94       	clt
    192c:	01 50       	subi	r16, 0x01	; 1
    192e:	30 f0       	brcs	.+12     	; 0x193c <__ftoa_engine+0x142>
    1930:	08 0f       	add	r16, r24
    1932:	0a f4       	brpl	.+2      	; 0x1936 <__ftoa_engine+0x13c>
    1934:	00 27       	eor	r16, r16
    1936:	02 17       	cp	r16, r18
    1938:	08 f4       	brcc	.+2      	; 0x193c <__ftoa_engine+0x142>
    193a:	20 2f       	mov	r18, r16
    193c:	23 95       	inc	r18
    193e:	02 2f       	mov	r16, r18
    1940:	7a 33       	cpi	r23, 0x3A	; 58
    1942:	28 f0       	brcs	.+10     	; 0x194e <__ftoa_engine+0x154>
    1944:	79 e3       	ldi	r23, 0x39	; 57
    1946:	7d 93       	st	X+, r23
    1948:	2a 95       	dec	r18
    194a:	e9 f7       	brne	.-6      	; 0x1946 <__ftoa_engine+0x14c>
    194c:	10 c0       	rjmp	.+32     	; 0x196e <__ftoa_engine+0x174>
    194e:	7d 93       	st	X+, r23
    1950:	2a 95       	dec	r18
    1952:	89 f6       	brne	.-94     	; 0x18f6 <__ftoa_engine+0xfc>
    1954:	06 94       	lsr	r0
    1956:	97 95       	ror	r25
    1958:	67 95       	ror	r22
    195a:	37 95       	ror	r19
    195c:	17 95       	ror	r17
    195e:	17 94       	ror	r1
    1960:	e1 18       	sub	r14, r1
    1962:	f1 0a       	sbc	r15, r17
    1964:	43 0b       	sbc	r20, r19
    1966:	56 0b       	sbc	r21, r22
    1968:	c9 0b       	sbc	r28, r25
    196a:	d0 09       	sbc	r29, r0
    196c:	98 f0       	brcs	.+38     	; 0x1994 <__ftoa_engine+0x19a>
    196e:	23 95       	inc	r18
    1970:	7e 91       	ld	r23, -X
    1972:	73 95       	inc	r23
    1974:	7a 33       	cpi	r23, 0x3A	; 58
    1976:	08 f0       	brcs	.+2      	; 0x197a <__ftoa_engine+0x180>
    1978:	70 e3       	ldi	r23, 0x30	; 48
    197a:	7c 93       	st	X, r23
    197c:	20 13       	cpse	r18, r16
    197e:	b8 f7       	brcc	.-18     	; 0x196e <__ftoa_engine+0x174>
    1980:	7e 91       	ld	r23, -X
    1982:	70 61       	ori	r23, 0x10	; 16
    1984:	7d 93       	st	X+, r23
    1986:	30 f0       	brcs	.+12     	; 0x1994 <__ftoa_engine+0x19a>
    1988:	83 95       	inc	r24
    198a:	71 e3       	ldi	r23, 0x31	; 49
    198c:	7d 93       	st	X+, r23
    198e:	70 e3       	ldi	r23, 0x30	; 48
    1990:	2a 95       	dec	r18
    1992:	e1 f7       	brne	.-8      	; 0x198c <__ftoa_engine+0x192>
    1994:	11 24       	eor	r1, r1
    1996:	ef 90       	pop	r14
    1998:	ff 90       	pop	r15
    199a:	0f 91       	pop	r16
    199c:	1f 91       	pop	r17
    199e:	cf 91       	pop	r28
    19a0:	df 91       	pop	r29
    19a2:	99 27       	eor	r25, r25
    19a4:	87 fd       	sbrc	r24, 7
    19a6:	90 95       	com	r25
    19a8:	08 95       	ret

000019aa <__prologue_saves__>:
    19aa:	2f 92       	push	r2
    19ac:	3f 92       	push	r3
    19ae:	4f 92       	push	r4
    19b0:	5f 92       	push	r5
    19b2:	6f 92       	push	r6
    19b4:	7f 92       	push	r7
    19b6:	8f 92       	push	r8
    19b8:	9f 92       	push	r9
    19ba:	af 92       	push	r10
    19bc:	bf 92       	push	r11
    19be:	cf 92       	push	r12
    19c0:	df 92       	push	r13
    19c2:	ef 92       	push	r14
    19c4:	ff 92       	push	r15
    19c6:	0f 93       	push	r16
    19c8:	1f 93       	push	r17
    19ca:	cf 93       	push	r28
    19cc:	df 93       	push	r29
    19ce:	cd b7       	in	r28, 0x3d	; 61
    19d0:	de b7       	in	r29, 0x3e	; 62
    19d2:	ca 1b       	sub	r28, r26
    19d4:	db 0b       	sbc	r29, r27
    19d6:	0f b6       	in	r0, 0x3f	; 63
    19d8:	f8 94       	cli
    19da:	de bf       	out	0x3e, r29	; 62
    19dc:	0f be       	out	0x3f, r0	; 63
    19de:	cd bf       	out	0x3d, r28	; 61
    19e0:	09 94       	ijmp

000019e2 <__epilogue_restores__>:
    19e2:	2a 88       	ldd	r2, Y+18	; 0x12
    19e4:	39 88       	ldd	r3, Y+17	; 0x11
    19e6:	48 88       	ldd	r4, Y+16	; 0x10
    19e8:	5f 84       	ldd	r5, Y+15	; 0x0f
    19ea:	6e 84       	ldd	r6, Y+14	; 0x0e
    19ec:	7d 84       	ldd	r7, Y+13	; 0x0d
    19ee:	8c 84       	ldd	r8, Y+12	; 0x0c
    19f0:	9b 84       	ldd	r9, Y+11	; 0x0b
    19f2:	aa 84       	ldd	r10, Y+10	; 0x0a
    19f4:	b9 84       	ldd	r11, Y+9	; 0x09
    19f6:	c8 84       	ldd	r12, Y+8	; 0x08
    19f8:	df 80       	ldd	r13, Y+7	; 0x07
    19fa:	ee 80       	ldd	r14, Y+6	; 0x06
    19fc:	fd 80       	ldd	r15, Y+5	; 0x05
    19fe:	0c 81       	ldd	r16, Y+4	; 0x04
    1a00:	1b 81       	ldd	r17, Y+3	; 0x03
    1a02:	aa 81       	ldd	r26, Y+2	; 0x02
    1a04:	b9 81       	ldd	r27, Y+1	; 0x01
    1a06:	ce 0f       	add	r28, r30
    1a08:	d1 1d       	adc	r29, r1
    1a0a:	0f b6       	in	r0, 0x3f	; 63
    1a0c:	f8 94       	cli
    1a0e:	de bf       	out	0x3e, r29	; 62
    1a10:	0f be       	out	0x3f, r0	; 63
    1a12:	cd bf       	out	0x3d, r28	; 61
    1a14:	ed 01       	movw	r28, r26
    1a16:	08 95       	ret

00001a18 <_exit>:
    1a18:	f8 94       	cli

00001a1a <__stop_program>:
    1a1a:	ff cf       	rjmp	.-2      	; 0x1a1a <__stop_program>
