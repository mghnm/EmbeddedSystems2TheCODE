
EmbeddedSystems2TheCODE.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  00001a30  00001ac4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001a30  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000424  00800126  00800126  00001aea  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001aea  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001b1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000002b8  00000000  00000000  00001b5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000030a7  00000000  00000000  00001e14  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000f58  00000000  00000000  00004ebb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000015c8  00000000  00000000  00005e13  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a70  00000000  00000000  000073dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ab  00000000  00000000  00007e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002e5d  00000000  00000000  000087f7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002c8  00000000  00000000  0000b654  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 f7 01 	jmp	0x3ee	; 0x3ee <__ctors_end>
       4:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
       8:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
       c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      10:	0c 94 ae 04 	jmp	0x95c	; 0x95c <__vector_4>
      14:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      18:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      1c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      20:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      24:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      28:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      2c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      30:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      34:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      38:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      3c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      40:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      44:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      48:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__vector_18>
      4c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      50:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      54:	0c 94 ba 05 	jmp	0xb74	; 0xb74 <__vector_21>
      58:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      5c:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      60:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>
      64:	0c 94 14 02 	jmp	0x428	; 0x428 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	00 40       	sbci	r16, 0x00	; 0
      6a:	7a 10       	cpse	r7, r10
      6c:	f3 5a       	subi	r31, 0xA3	; 163
      6e:	00 a0       	ldd	r0, Z+32	; 0x20
      70:	72 4e       	sbci	r23, 0xE2	; 226
      72:	18 09       	sbc	r17, r8
      74:	00 10       	cpse	r0, r0
      76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__vector_4+0x66>
      78:	e8 00       	.word	0x00e8	; ????
      7a:	00 e8       	ldi	r16, 0x80	; 128
      7c:	76 48       	sbci	r23, 0x86	; 134
      7e:	17 00       	.word	0x0017	; ????
      80:	00 e4       	ldi	r16, 0x40	; 64
      82:	0b 54       	subi	r16, 0x4B	; 75
      84:	02 00       	.word	0x0002	; ????
      86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
      88:	9a 3b       	cpi	r25, 0xBA	; 186
      8a:	00 00       	nop
      8c:	00 e1       	ldi	r16, 0x10	; 16
      8e:	f5 05       	cpc	r31, r5
      90:	00 00       	nop
      92:	80 96       	adiw	r24, 0x20	; 32
      94:	98 00       	.word	0x0098	; ????
      96:	00 00       	nop
      98:	40 42       	sbci	r20, 0x20	; 32
      9a:	0f 00       	.word	0x000f	; ????
      9c:	00 00       	nop
      9e:	a0 86       	std	Z+8, r10	; 0x08
      a0:	01 00       	.word	0x0001	; ????
      a2:	00 00       	nop
      a4:	10 27       	eor	r17, r16
      a6:	00 00       	nop
      a8:	00 00       	nop
      aa:	e8 03       	fmulsu	r22, r16
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	64 00       	.word	0x0064	; ????
      b2:	00 00       	nop
      b4:	00 00       	nop
      b6:	0a 00       	.word	0x000a	; ????
      b8:	00 00       	nop
      ba:	00 00       	nop
      bc:	01 00       	.word	0x0001	; ????
      be:	00 00       	nop
      c0:	00 00       	nop
      c2:	2c 76       	andi	r18, 0x6C	; 108
      c4:	d8 88       	ldd	r13, Y+16	; 0x10
      c6:	dc 67       	ori	r29, 0x7C	; 124
      c8:	4f 08       	sbc	r4, r15
      ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
      cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
      ce:	ae 59       	subi	r26, 0x9E	; 158
      d0:	e1 b1       	in	r30, 0x01	; 1
      d2:	b7 96       	adiw	r30, 0x27	; 39
      d4:	e5 e3       	ldi	r30, 0x35	; 53
      d6:	e4 53       	subi	r30, 0x34	; 52
      d8:	c6 3a       	cpi	r28, 0xA6	; 166
      da:	e6 51       	subi	r30, 0x16	; 22
      dc:	99 76       	andi	r25, 0x69	; 105
      de:	96 e8       	ldi	r25, 0x86	; 134
      e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <lcd_putc+0x3c>
      e2:	84 26       	eor	r8, r20
      e4:	eb 89       	ldd	r30, Y+19	; 0x13
      e6:	8c 9b       	sbis	0x11, 4	; 17
      e8:	62 ed       	ldi	r22, 0xD2	; 210
      ea:	40 7c       	andi	r20, 0xC0	; 192
      ec:	6f fc       	.word	0xfc6f	; ????
      ee:	ef bc       	out	0x2f, r14	; 47
      f0:	9c 9f       	mul	r25, r28
      f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
      f4:	ba a5       	ldd	r27, Y+42	; 0x2a
      f6:	6f a5       	ldd	r22, Y+47	; 0x2f
      f8:	f4 90       	lpm	r15, Z
      fa:	05 5a       	subi	r16, 0xA5	; 165
      fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
      fe:	5c 93       	st	X, r21
     100:	6b 6c       	ori	r22, 0xCB	; 203
     102:	f9 67       	ori	r31, 0x79	; 121
     104:	6d c1       	rjmp	.+730    	; 0x3e0 <init_sequence+0xe>
     106:	1b fc       	.word	0xfc1b	; ????
     108:	e0 e4       	ldi	r30, 0x40	; 64
     10a:	0d 47       	sbci	r16, 0x7D	; 125
     10c:	fe f5       	brtc	.+126    	; 0x18c <ssd1306oled_font+0x2a>
     10e:	20 e6       	ldi	r18, 0x60	; 96
     110:	b5 00       	.word	0x00b5	; ????
     112:	d0 ed       	ldi	r29, 0xD0	; 208
     114:	90 2e       	mov	r9, r16
     116:	03 00       	.word	0x0003	; ????
     118:	94 35       	cpi	r25, 0x54	; 84
     11a:	77 05       	cpc	r23, r7
     11c:	00 80       	ld	r0, Z
     11e:	84 1e       	adc	r8, r20
     120:	08 00       	.word	0x0008	; ????
     122:	00 20       	and	r0, r0
     124:	4e 0a       	sbc	r4, r30
     126:	00 00       	nop
     128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
     12a:	0c 33       	cpi	r16, 0x3C	; 60
     12c:	33 33       	cpi	r19, 0x33	; 51
     12e:	33 0f       	add	r19, r19
     130:	98 6e       	ori	r25, 0xE8	; 232
     132:	12 83       	std	Z+2, r17	; 0x02
     134:	11 41       	sbci	r17, 0x11	; 17
     136:	ef 8d       	ldd	r30, Y+31	; 0x1f
     138:	21 14       	cp	r2, r1
     13a:	89 3b       	cpi	r24, 0xB9	; 185
     13c:	e6 55       	subi	r30, 0x56	; 86
     13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
     140:	fe e6       	ldi	r31, 0x6E	; 110
     142:	db 18       	sub	r13, r11
     144:	d1 84       	ldd	r13, Z+9	; 0x09
     146:	4b 38       	cpi	r20, 0x8B	; 139
     148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
     14a:	7c 1d       	adc	r23, r12
     14c:	90 1d       	adc	r25, r0
     14e:	a4 bb       	out	0x14, r26	; 20
     150:	e4 24       	eor	r14, r4
     152:	20 32       	cpi	r18, 0x20	; 32
     154:	84 72       	andi	r24, 0x24	; 36
     156:	5e 22       	and	r5, r30
     158:	81 00       	.word	0x0081	; ????
     15a:	c9 f1       	breq	.+114    	; 0x1ce <ssd1306oled_font+0x6c>
     15c:	24 ec       	ldi	r18, 0xC4	; 196
     15e:	a1 e5       	ldi	r26, 0x51	; 81
     160:	3d 27       	eor	r19, r29

00000162 <ssd1306oled_font>:
	...
     16a:	00 2f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14     ./..............
     17a:	00 24 2a 7f 2a 12 00 62 64 08 13 23 00 36 49 55     .$*.*..bd..#.6IU
     18a:	22 50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00     "P........."A...
     19a:	41 22 1c 00 00 14 08 3e 08 14 00 08 08 3e 08 08     A".....>.....>..
     1aa:	00 00 00 a0 60 00 00 08 08 08 08 08 00 00 60 60     ....`.........``
     1ba:	00 00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00     ... .....>QIE>..
     1ca:	42 7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31     B.@..BaQIF.!AEK1
     1da:	00 18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49     .......'EEE9.<JI
     1ea:	49 30 00 01 71 09 05 03 00 36 49 49 49 36 00 06     I0..q....6III6..
     1fa:	49 49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00     II)...66....V6..
     20a:	00 08 14 22 41 00 00 14 14 14 14 14 00 00 41 22     ..."A.........A"
     21a:	14 08 00 02 01 51 09 06 00 32 49 59 51 3e 00 7c     .....Q...2IYQ>.|
     22a:	12 11 12 7c 00 7f 49 49 49 36 00 3e 41 41 41 22     ...|..III6.>AAA"
     23a:	00 7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09     ..AA"...IIIA....
     24a:	09 01 00 3e 41 49 49 7a 00 7f 08 08 08 7f 00 00     ...>AIIz........
     25a:	41 7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41     A.A.. @A?....."A
     26a:	00 7f 40 40 40 40 00 7f 02 0c 02 7f 00 7f 04 08     ..@@@@..........
     27a:	10 7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e     ...>AAA>.......>
     28a:	41 51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31     AQ!^....)F.FIII1
     29a:	00 01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40     .......?@@@?.. @
     2aa:	20 1f 00 3f 40 38 40 3f 00 63 14 08 14 63 00 07      ..?@8@?.c...c..
     2ba:	08 70 08 07 00 61 51 49 45 43 00 00 7f 41 41 00     .p...aQIEC...AA.
     2ca:	00 55 2a 55 2a 55 00 00 41 41 7f 00 00 04 02 01     .U*U*U..AA......
     2da:	02 04 00 40 40 40 40 40 00 00 01 02 04 00 00 20     ...@@@@@....... 
     2ea:	54 54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20     TTTx..HDD8.8DDD 
     2fa:	00 38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09     .8DDH..8TTT...~.
     30a:	01 02 00 18 a4 a4 a4 7c 00 7f 08 04 04 78 00 00     .......|.....x..
     31a:	44 7d 40 00 00 40 80 84 7d 00 00 7f 10 28 44 00     D}@..@..}....(D.
     32a:	00 00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04     ..A.@..|...x.|..
     33a:	04 78 00 38 44 44 44 38 00 fc 24 24 24 18 00 18     .x.8DDD8..$$$...
     34a:	24 24 18 fc 00 7c 08 04 04 08 00 48 54 54 54 20     $$...|.....HTTT 
     35a:	00 04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40     ..?D@ .<@@ |.. @
     36a:	20 1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 1c      ..<@0@<.D(.(D..
     37a:	a0 a0 a0 7c 00 44 64 54 4c 44 00 00 08 77 41 00     ...|.DdTLD...wA.
     38a:	00 00 00 63 00 00 00 00 41 77 08 00 00 08 04 08     ...c....Aw......
     39a:	08 04 00 3a 40 40 20 7a 00 3d 40 40 40 3d 00 21     ...:@@ z.=@@@=.!
     3aa:	54 54 54 79 00 7d 12 11 12 7d 00 39 44 44 44 39     TTTy.}...}.9DDD9
     3ba:	00 3d 42 42 42 3d 00 02 05 02 00 00 00 7e 01 49     .=BBB=.......~.I
     3ca:	55 73 00 7c 10 10 08 1c                             Us.|....

000003d2 <init_sequence>:
     3d2:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
     3e2:	00 d5 f0 d9 22 da 12 db 20 8d 14 00                 ...."... ...

000003ee <__ctors_end>:
     3ee:	11 24       	eor	r1, r1
     3f0:	1f be       	out	0x3f, r1	; 63
     3f2:	cf ef       	ldi	r28, 0xFF	; 255
     3f4:	d8 e0       	ldi	r29, 0x08	; 8
     3f6:	de bf       	out	0x3e, r29	; 62
     3f8:	cd bf       	out	0x3d, r28	; 61

000003fa <__do_copy_data>:
     3fa:	11 e0       	ldi	r17, 0x01	; 1
     3fc:	a0 e0       	ldi	r26, 0x00	; 0
     3fe:	b1 e0       	ldi	r27, 0x01	; 1
     400:	e0 e3       	ldi	r30, 0x30	; 48
     402:	fa e1       	ldi	r31, 0x1A	; 26
     404:	02 c0       	rjmp	.+4      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     406:	05 90       	lpm	r0, Z+
     408:	0d 92       	st	X+, r0
     40a:	a6 32       	cpi	r26, 0x26	; 38
     40c:	b1 07       	cpc	r27, r17
     40e:	d9 f7       	brne	.-10     	; 0x406 <__LOCK_REGION_LENGTH__+0x6>

00000410 <__do_clear_bss>:
     410:	25 e0       	ldi	r18, 0x05	; 5
     412:	a6 e2       	ldi	r26, 0x26	; 38
     414:	b1 e0       	ldi	r27, 0x01	; 1
     416:	01 c0       	rjmp	.+2      	; 0x41a <.do_clear_bss_start>

00000418 <.do_clear_bss_loop>:
     418:	1d 92       	st	X+, r1

0000041a <.do_clear_bss_start>:
     41a:	aa 34       	cpi	r26, 0x4A	; 74
     41c:	b2 07       	cpc	r27, r18
     41e:	e1 f7       	brne	.-8      	; 0x418 <.do_clear_bss_loop>
     420:	0e 94 08 06 	call	0xc10	; 0xc10 <main>
     424:	0c 94 16 0d 	jmp	0x1a2c	; 0x1a2c <_exit>

00000428 <__bad_interrupt>:
     428:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000042c <i2c_init>:
            break;
        case 64:
            TWSR = 0x3;
            break;
        default:
            TWSR = 0x00;
     42c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
            break;
    }
    TWBR = (uint8_t)SET_TWBR;
     430:	88 e4       	ldi	r24, 0x48	; 72
     432:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
    // enable
    TWCR = (1 << TWEN);
     436:	84 e0       	ldi	r24, 0x04	; 4
     438:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     43c:	08 95       	ret

0000043e <i2c_start>:
*                                                                       *
*Anropar:void													        *
************************************************************************/
void i2c_start(uint8_t i2c_addr){
	// i2c start
	TWCR = 0xA4;//(1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
     43e:	94 ea       	ldi	r25, 0xA4	; 164
     440:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while((TWCR & (1 << TWINT)) == 0);
     444:	ec eb       	ldi	r30, 0xBC	; 188
     446:	f0 e0       	ldi	r31, 0x00	; 0
     448:	90 81       	ld	r25, Z
     44a:	99 23       	and	r25, r25
     44c:	ec f7       	brge	.-6      	; 0x448 <i2c_start+0xa>
	
	// send adress
	TWDR = i2c_addr;
     44e:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
	TWCR = 0x84;//(1 << TWINT)|( 1 << TWEN);
     452:	84 e8       	ldi	r24, 0x84	; 132
     454:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
	while((TWCR & (1 << 7)) == 0);//(1 << TWINT)) == 0);
     458:	ec eb       	ldi	r30, 0xBC	; 188
     45a:	f0 e0       	ldi	r31, 0x00	; 0
     45c:	80 81       	ld	r24, Z
     45e:	88 23       	and	r24, r24
     460:	ec f7       	brge	.-6      	; 0x45c <i2c_start+0x1e>
	}
     462:	08 95       	ret

00000464 <i2c_stop>:
*                                                                       *
*Anropar:void													        *
************************************************************************/
void i2c_stop(void){
    // i2c stop
    TWCR = 0x94;//(1 << TWINT)|(1 << TWSTO)|(1 << TWEN);//or 0x94
     464:	84 e9       	ldi	r24, 0x94	; 148
     466:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
     46a:	08 95       	ret

0000046c <i2c_byte>:
*Utdata: void								                            *
*                                                                       *
*Anropar:void													        *
************************************************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
     46c:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
    TWCR = 0x84;// (1 << TWINT)|( 1 << TWEN);
     470:	84 e8       	ldi	r24, 0x84	; 132
     472:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    while((TWCR & (1 << TWINT)) == 0);
     476:	ec eb       	ldi	r30, 0xBC	; 188
     478:	f0 e0       	ldi	r31, 0x00	; 0
     47a:	80 81       	ld	r24, Z
     47c:	88 23       	and	r24, r24
     47e:	ec f7       	brge	.-6      	; 0x47a <i2c_byte+0xe>
}
     480:	08 95       	ret

00000482 <i2c_readAck>:
*Utdata: The received value from the bus                                *
*                                                                       *
*Anropar: void  												        *
************************************************************************/
uint8_t i2c_readAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
     482:	84 ec       	ldi	r24, 0xC4	; 196
     484:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     488:	80 e4       	ldi	r24, 0x40	; 64
     48a:	91 e0       	ldi	r25, 0x01	; 1
     48c:	ec eb       	ldi	r30, 0xBC	; 188
     48e:	f0 e0       	ldi	r31, 0x00	; 0
     490:	09 c0       	rjmp	.+18     	; 0x4a4 <i2c_readAck+0x22>
     492:	01 97       	sbiw	r24, 0x01	; 1
		  timeout !=0){
		timeout--;
		if(timeout == 0){
     494:	39 f4       	brne	.+14     	; 0x4a4 <i2c_readAck+0x22>
			I2C_ErrorCode |= (1 << I2C_READACK);
     496:	80 91 29 05 	lds	r24, 0x0529	; 0x800529 <I2C_ErrorCode>
     49a:	88 60       	ori	r24, 0x08	; 8
     49c:	80 93 29 05 	sts	0x0529, r24	; 0x800529 <I2C_ErrorCode>
			return 0;
     4a0:	80 e0       	ldi	r24, 0x00	; 0
     4a2:	08 95       	ret
*Anropar: void  												        *
************************************************************************/
uint8_t i2c_readAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWEA);
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
     4a4:	20 81       	ld	r18, Z
     4a6:	22 23       	and	r18, r18
     4a8:	a4 f7       	brge	.-24     	; 0x492 <i2c_readAck+0x10>
		if(timeout == 0){
			I2C_ErrorCode |= (1 << I2C_READACK);
			return 0;
		}
	};
    return TWDR;
     4aa:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     4ae:	08 95       	ret

000004b0 <i2c_readNAck>:
 *Utdata: The received value from the bus                                *
 *                                                                       *
 *Anropar: void  												         *
 ************************************************************************/
uint8_t i2c_readNAck(void){
    TWCR = (1<<TWINT)|(1<<TWEN);
     4b0:	84 e8       	ldi	r24, 0x84	; 132
     4b2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
    while((TWCR & (1 << TWINT)) == 0);
     4b6:	ec eb       	ldi	r30, 0xBC	; 188
     4b8:	f0 e0       	ldi	r31, 0x00	; 0
     4ba:	80 81       	ld	r24, Z
     4bc:	88 23       	and	r24, r24
     4be:	ec f7       	brge	.-6      	; 0x4ba <i2c_readNAck+0xa>
    return TWDR;
     4c0:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7e00bb>
}
     4c4:	08 95       	ret

000004c6 <lcd_command>:
            } else {
                lcd_drawPixel(x+i, y+j, !color);
            }
        }
    }
}
     4c6:	ef 92       	push	r14
     4c8:	ff 92       	push	r15
     4ca:	0f 93       	push	r16
     4cc:	1f 93       	push	r17
     4ce:	cf 93       	push	r28
     4d0:	df 93       	push	r29
     4d2:	7c 01       	movw	r14, r24
     4d4:	16 2f       	mov	r17, r22
     4d6:	88 e7       	ldi	r24, 0x78	; 120
     4d8:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     4dc:	80 e0       	ldi	r24, 0x00	; 0
     4de:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     4e2:	11 23       	and	r17, r17
     4e4:	71 f0       	breq	.+28     	; 0x502 <lcd_command+0x3c>
     4e6:	e7 01       	movw	r28, r14
     4e8:	11 50       	subi	r17, 0x01	; 1
     4ea:	01 2f       	mov	r16, r17
     4ec:	10 e0       	ldi	r17, 0x00	; 0
     4ee:	0f 5f       	subi	r16, 0xFF	; 255
     4f0:	1f 4f       	sbci	r17, 0xFF	; 255
     4f2:	0e 0d       	add	r16, r14
     4f4:	1f 1d       	adc	r17, r15
     4f6:	89 91       	ld	r24, Y+
     4f8:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     4fc:	c0 17       	cp	r28, r16
     4fe:	d1 07       	cpc	r29, r17
     500:	d1 f7       	brne	.-12     	; 0x4f6 <lcd_command+0x30>
     502:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     506:	df 91       	pop	r29
     508:	cf 91       	pop	r28
     50a:	1f 91       	pop	r17
     50c:	0f 91       	pop	r16
     50e:	ff 90       	pop	r15
     510:	ef 90       	pop	r14
     512:	08 95       	ret

00000514 <lcd_data>:
     514:	ef 92       	push	r14
     516:	ff 92       	push	r15
     518:	0f 93       	push	r16
     51a:	1f 93       	push	r17
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	7c 01       	movw	r14, r24
     522:	8b 01       	movw	r16, r22
     524:	88 e7       	ldi	r24, 0x78	; 120
     526:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     52a:	80 e4       	ldi	r24, 0x40	; 64
     52c:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     530:	01 15       	cp	r16, r1
     532:	11 05       	cpc	r17, r1
     534:	49 f0       	breq	.+18     	; 0x548 <lcd_data+0x34>
     536:	e7 01       	movw	r28, r14
     538:	0e 0d       	add	r16, r14
     53a:	1f 1d       	adc	r17, r15
     53c:	89 91       	ld	r24, Y+
     53e:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     542:	c0 17       	cp	r28, r16
     544:	d1 07       	cpc	r29, r17
     546:	d1 f7       	brne	.-12     	; 0x53c <lcd_data+0x28>
     548:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     54c:	df 91       	pop	r29
     54e:	cf 91       	pop	r28
     550:	1f 91       	pop	r17
     552:	0f 91       	pop	r16
     554:	ff 90       	pop	r15
     556:	ef 90       	pop	r14
     558:	08 95       	ret

0000055a <lcd_gotoxy>:
     55a:	cf 93       	push	r28
     55c:	df 93       	push	r29
     55e:	00 d0       	rcall	.+0      	; 0x560 <lcd_gotoxy+0x6>
     560:	00 d0       	rcall	.+0      	; 0x562 <lcd_gotoxy+0x8>
     562:	1f 92       	push	r1
     564:	cd b7       	in	r28, 0x3d	; 61
     566:	de b7       	in	r29, 0x3e	; 62
     568:	86 31       	cpi	r24, 0x16	; 22
     56a:	38 f5       	brcc	.+78     	; 0x5ba <lcd_gotoxy+0x60>
     56c:	68 30       	cpi	r22, 0x08	; 8
     56e:	28 f5       	brcc	.+74     	; 0x5ba <lcd_gotoxy+0x60>
     570:	98 2f       	mov	r25, r24
     572:	99 0f       	add	r25, r25
     574:	89 0f       	add	r24, r25
     576:	88 0f       	add	r24, r24
     578:	e6 e2       	ldi	r30, 0x26	; 38
     57a:	f5 e0       	ldi	r31, 0x05	; 5
     57c:	80 83       	st	Z, r24
     57e:	61 83       	std	Z+1, r22	; 0x01
     580:	60 55       	subi	r22, 0x50	; 80
     582:	69 83       	std	Y+1, r22	; 0x01
     584:	91 e2       	ldi	r25, 0x21	; 33
     586:	9a 83       	std	Y+2, r25	; 0x02
     588:	92 e0       	ldi	r25, 0x02	; 2
     58a:	98 0f       	add	r25, r24
     58c:	9f 70       	andi	r25, 0x0F	; 15
     58e:	9b 83       	std	Y+3, r25	; 0x03
     590:	90 e0       	ldi	r25, 0x00	; 0
     592:	02 96       	adiw	r24, 0x02	; 2
     594:	80 7f       	andi	r24, 0xF0	; 240
     596:	99 27       	eor	r25, r25
     598:	95 95       	asr	r25
     59a:	87 95       	ror	r24
     59c:	95 95       	asr	r25
     59e:	87 95       	ror	r24
     5a0:	95 95       	asr	r25
     5a2:	87 95       	ror	r24
     5a4:	95 95       	asr	r25
     5a6:	87 95       	ror	r24
     5a8:	80 5f       	subi	r24, 0xF0	; 240
     5aa:	8c 83       	std	Y+4, r24	; 0x04
     5ac:	8f e7       	ldi	r24, 0x7F	; 127
     5ae:	8d 83       	std	Y+5, r24	; 0x05
     5b0:	65 e0       	ldi	r22, 0x05	; 5
     5b2:	ce 01       	movw	r24, r28
     5b4:	01 96       	adiw	r24, 0x01	; 1
     5b6:	0e 94 63 02 	call	0x4c6	; 0x4c6 <lcd_command>
     5ba:	0f 90       	pop	r0
     5bc:	0f 90       	pop	r0
     5be:	0f 90       	pop	r0
     5c0:	0f 90       	pop	r0
     5c2:	0f 90       	pop	r0
     5c4:	df 91       	pop	r29
     5c6:	cf 91       	pop	r28
     5c8:	08 95       	ret

000005ca <lcd_home>:
     5ca:	60 e0       	ldi	r22, 0x00	; 0
     5cc:	80 e0       	ldi	r24, 0x00	; 0
     5ce:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     5d2:	08 95       	ret

000005d4 <lcd_clrscr>:
     5d4:	0f 93       	push	r16
     5d6:	1f 93       	push	r17
     5d8:	cf 93       	push	r28
     5da:	df 93       	push	r29
     5dc:	06 e2       	ldi	r16, 0x26	; 38
     5de:	11 e0       	ldi	r17, 0x01	; 1
     5e0:	c0 e0       	ldi	r28, 0x00	; 0
     5e2:	d0 e8       	ldi	r29, 0x80	; 128
     5e4:	f8 01       	movw	r30, r16
     5e6:	8d 2f       	mov	r24, r29
     5e8:	11 92       	st	Z+, r1
     5ea:	8a 95       	dec	r24
     5ec:	e9 f7       	brne	.-6      	; 0x5e8 <lcd_clrscr+0x14>
     5ee:	6c 2f       	mov	r22, r28
     5f0:	80 e0       	ldi	r24, 0x00	; 0
     5f2:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     5f6:	60 e8       	ldi	r22, 0x80	; 128
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	c8 01       	movw	r24, r16
     5fc:	0e 94 8a 02 	call	0x514	; 0x514 <lcd_data>
     600:	cf 5f       	subi	r28, 0xFF	; 255
     602:	00 58       	subi	r16, 0x80	; 128
     604:	1f 4f       	sbci	r17, 0xFF	; 255
     606:	c8 30       	cpi	r28, 0x08	; 8
     608:	69 f7       	brne	.-38     	; 0x5e4 <lcd_clrscr+0x10>
     60a:	0e 94 e5 02 	call	0x5ca	; 0x5ca <lcd_home>
     60e:	df 91       	pop	r29
     610:	cf 91       	pop	r28
     612:	1f 91       	pop	r17
     614:	0f 91       	pop	r16
     616:	08 95       	ret

00000618 <lcd_init>:
     618:	1f 93       	push	r17
     61a:	cf 93       	push	r28
     61c:	df 93       	push	r29
     61e:	cd b7       	in	r28, 0x3d	; 61
     620:	de b7       	in	r29, 0x3e	; 62
     622:	6c 97       	sbiw	r28, 0x1c	; 28
     624:	0f b6       	in	r0, 0x3f	; 63
     626:	f8 94       	cli
     628:	de bf       	out	0x3e, r29	; 62
     62a:	0f be       	out	0x3f, r0	; 63
     62c:	cd bf       	out	0x3d, r28	; 61
     62e:	18 2f       	mov	r17, r24
     630:	0e 94 16 02 	call	0x42c	; 0x42c <i2c_init>
     634:	e2 ed       	ldi	r30, 0xD2	; 210
     636:	f3 e0       	ldi	r31, 0x03	; 3
     638:	de 01       	movw	r26, r28
     63a:	11 96       	adiw	r26, 0x01	; 1
     63c:	9e 01       	movw	r18, r28
     63e:	24 5e       	subi	r18, 0xE4	; 228
     640:	3f 4f       	sbci	r19, 0xFF	; 255
     642:	84 91       	lpm	r24, Z
     644:	8d 93       	st	X+, r24
     646:	31 96       	adiw	r30, 0x01	; 1
     648:	a2 17       	cp	r26, r18
     64a:	b3 07       	cpc	r27, r19
     64c:	d1 f7       	brne	.-12     	; 0x642 <lcd_init+0x2a>
     64e:	1c 8f       	std	Y+28, r17	; 0x1c
     650:	6c e1       	ldi	r22, 0x1C	; 28
     652:	ce 01       	movw	r24, r28
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	0e 94 63 02 	call	0x4c6	; 0x4c6 <lcd_command>
     65a:	0e 94 ea 02 	call	0x5d4	; 0x5d4 <lcd_clrscr>
     65e:	6c 96       	adiw	r28, 0x1c	; 28
     660:	0f b6       	in	r0, 0x3f	; 63
     662:	f8 94       	cli
     664:	de bf       	out	0x3e, r29	; 62
     666:	0f be       	out	0x3f, r0	; 63
     668:	cd bf       	out	0x3d, r28	; 61
     66a:	df 91       	pop	r29
     66c:	cf 91       	pop	r28
     66e:	1f 91       	pop	r17
     670:	08 95       	ret

00000672 <lcd_putc>:
     672:	4f 92       	push	r4
     674:	5f 92       	push	r5
     676:	6f 92       	push	r6
     678:	7f 92       	push	r7
     67a:	9f 92       	push	r9
     67c:	af 92       	push	r10
     67e:	bf 92       	push	r11
     680:	cf 92       	push	r12
     682:	df 92       	push	r13
     684:	ef 92       	push	r14
     686:	ff 92       	push	r15
     688:	0f 93       	push	r16
     68a:	1f 93       	push	r17
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62
     694:	2c 97       	sbiw	r28, 0x0c	; 12
     696:	0f b6       	in	r0, 0x3f	; 63
     698:	f8 94       	cli
     69a:	de bf       	out	0x3e, r29	; 62
     69c:	0f be       	out	0x3f, r0	; 63
     69e:	cd bf       	out	0x3d, r28	; 61
     6a0:	89 30       	cpi	r24, 0x09	; 9
     6a2:	01 f1       	breq	.+64     	; 0x6e4 <lcd_putc+0x72>
     6a4:	18 f4       	brcc	.+6      	; 0x6ac <lcd_putc+0x3a>
     6a6:	88 30       	cpi	r24, 0x08	; 8
     6a8:	39 f0       	breq	.+14     	; 0x6b8 <lcd_putc+0x46>
     6aa:	52 c0       	rjmp	.+164    	; 0x750 <lcd_putc+0xde>
     6ac:	8a 30       	cpi	r24, 0x0A	; 10
     6ae:	e9 f1       	breq	.+122    	; 0x72a <lcd_putc+0xb8>
     6b0:	8d 30       	cpi	r24, 0x0D	; 13
     6b2:	09 f4       	brne	.+2      	; 0x6b6 <lcd_putc+0x44>
     6b4:	47 c0       	rjmp	.+142    	; 0x744 <lcd_putc+0xd2>
     6b6:	4c c0       	rjmp	.+152    	; 0x750 <lcd_putc+0xde>
     6b8:	06 e2       	ldi	r16, 0x26	; 38
     6ba:	15 e0       	ldi	r17, 0x05	; 5
     6bc:	f8 01       	movw	r30, r16
     6be:	80 81       	ld	r24, Z
     6c0:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     6c4:	61 81       	ldd	r22, Z+1	; 0x01
     6c6:	89 1b       	sub	r24, r25
     6c8:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     6cc:	80 e2       	ldi	r24, 0x20	; 32
     6ce:	0e 94 39 03 	call	0x672	; 0x672 <lcd_putc>
     6d2:	f8 01       	movw	r30, r16
     6d4:	80 81       	ld	r24, Z
     6d6:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     6da:	61 81       	ldd	r22, Z+1	; 0x01
     6dc:	89 1b       	sub	r24, r25
     6de:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     6e2:	ed c0       	rjmp	.+474    	; 0x8be <lcd_putc+0x24c>
     6e4:	80 91 26 05 	lds	r24, 0x0526	; 0x800526 <cursorPosition>
     6e8:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     6ec:	29 2f       	mov	r18, r25
     6ee:	30 e0       	ldi	r19, 0x00	; 0
     6f0:	22 0f       	add	r18, r18
     6f2:	33 1f       	adc	r19, r19
     6f4:	22 0f       	add	r18, r18
     6f6:	33 1f       	adc	r19, r19
     6f8:	b9 01       	movw	r22, r18
     6fa:	68 0f       	add	r22, r24
     6fc:	71 1d       	adc	r23, r1
     6fe:	45 e1       	ldi	r20, 0x15	; 21
     700:	50 e0       	ldi	r21, 0x00	; 0
     702:	2a 01       	movw	r4, r20
     704:	42 1a       	sub	r4, r18
     706:	53 0a       	sbc	r5, r19
     708:	64 15       	cp	r22, r4
     70a:	75 05       	cpc	r23, r5
     70c:	40 f4       	brcc	.+16     	; 0x71e <lcd_putc+0xac>
     70e:	99 0f       	add	r25, r25
     710:	99 0f       	add	r25, r25
     712:	60 91 27 05 	lds	r22, 0x0527	; 0x800527 <cursorPosition+0x1>
     716:	89 0f       	add	r24, r25
     718:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     71c:	d0 c0       	rjmp	.+416    	; 0x8be <lcd_putc+0x24c>
     71e:	60 91 27 05 	lds	r22, 0x0527	; 0x800527 <cursorPosition+0x1>
     722:	85 e1       	ldi	r24, 0x15	; 21
     724:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     728:	ca c0       	rjmp	.+404    	; 0x8be <lcd_putc+0x24c>
     72a:	80 91 27 05 	lds	r24, 0x0527	; 0x800527 <cursorPosition+0x1>
     72e:	87 30       	cpi	r24, 0x07	; 7
     730:	08 f0       	brcs	.+2      	; 0x734 <lcd_putc+0xc2>
     732:	c5 c0       	rjmp	.+394    	; 0x8be <lcd_putc+0x24c>
     734:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__data_start>
     738:	68 0f       	add	r22, r24
     73a:	80 91 26 05 	lds	r24, 0x0526	; 0x800526 <cursorPosition>
     73e:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     742:	bd c0       	rjmp	.+378    	; 0x8be <lcd_putc+0x24c>
     744:	60 91 27 05 	lds	r22, 0x0527	; 0x800527 <cursorPosition+0x1>
     748:	80 e0       	ldi	r24, 0x00	; 0
     74a:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
     74e:	b7 c0       	rjmp	.+366    	; 0x8be <lcd_putc+0x24c>
     750:	90 90 26 05 	lds	r9, 0x0526	; 0x800526 <cursorPosition>
     754:	0f 2e       	mov	r0, r31
     756:	f9 e7       	ldi	r31, 0x79	; 121
     758:	5f 2e       	mov	r5, r31
     75a:	f0 2d       	mov	r31, r0
     75c:	59 14       	cp	r5, r9
     75e:	08 f4       	brcc	.+2      	; 0x762 <lcd_putc+0xf0>
     760:	ae c0       	rjmp	.+348    	; 0x8be <lcd_putc+0x24c>
     762:	80 32       	cpi	r24, 0x20	; 32
     764:	08 f4       	brcc	.+2      	; 0x768 <lcd_putc+0xf6>
     766:	ab c0       	rjmp	.+342    	; 0x8be <lcd_putc+0x24c>
     768:	80 52       	subi	r24, 0x20	; 32
     76a:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     76e:	92 30       	cpi	r25, 0x02	; 2
     770:	09 f0       	breq	.+2      	; 0x774 <lcd_putc+0x102>
     772:	85 c0       	rjmp	.+266    	; 0x87e <lcd_putc+0x20c>
     774:	9e 01       	movw	r18, r28
     776:	2f 5f       	subi	r18, 0xFF	; 255
     778:	3f 4f       	sbci	r19, 0xFF	; 255
     77a:	79 01       	movw	r14, r18
     77c:	90 e0       	ldi	r25, 0x00	; 0
     77e:	5c 01       	movw	r10, r24
     780:	aa 0c       	add	r10, r10
     782:	bb 1c       	adc	r11, r11
     784:	8a 0d       	add	r24, r10
     786:	9b 1d       	adc	r25, r11
     788:	88 0f       	add	r24, r24
     78a:	99 1f       	adc	r25, r25
     78c:	fc 01       	movw	r30, r24
     78e:	ee 59       	subi	r30, 0x9E	; 158
     790:	fe 4f       	sbci	r31, 0xFE	; 254
     792:	5f 01       	movw	r10, r30
     794:	3e 01       	movw	r6, r28
     796:	fd e0       	ldi	r31, 0x0D	; 13
     798:	6f 0e       	add	r6, r31
     79a:	71 1c       	adc	r7, r1
     79c:	69 01       	movw	r12, r18
     79e:	01 e0       	ldi	r16, 0x01	; 1
     7a0:	10 e0       	ldi	r17, 0x00	; 0
     7a2:	d6 01       	movw	r26, r12
     7a4:	11 96       	adiw	r26, 0x01	; 1
     7a6:	1c 92       	st	X, r1
     7a8:	1e 92       	st	-X, r1
     7aa:	f5 01       	movw	r30, r10
     7ac:	44 91       	lpm	r20, Z
     7ae:	21 e0       	ldi	r18, 0x01	; 1
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	80 e0       	ldi	r24, 0x00	; 0
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	e4 2f       	mov	r30, r20
     7b8:	f0 e0       	ldi	r31, 0x00	; 0
     7ba:	af 01       	movw	r20, r30
     7bc:	08 2e       	mov	r0, r24
     7be:	02 c0       	rjmp	.+4      	; 0x7c4 <lcd_putc+0x152>
     7c0:	55 95       	asr	r21
     7c2:	47 95       	ror	r20
     7c4:	0a 94       	dec	r0
     7c6:	e2 f7       	brpl	.-8      	; 0x7c0 <lcd_putc+0x14e>
     7c8:	40 ff       	sbrs	r20, 0
     7ca:	1b c0       	rjmp	.+54     	; 0x802 <lcd_putc+0x190>
     7cc:	6d 91       	ld	r22, X+
     7ce:	7c 91       	ld	r23, X
     7d0:	11 97       	sbiw	r26, 0x01	; 1
     7d2:	a8 01       	movw	r20, r16
     7d4:	02 2e       	mov	r0, r18
     7d6:	02 c0       	rjmp	.+4      	; 0x7dc <lcd_putc+0x16a>
     7d8:	44 0f       	add	r20, r20
     7da:	55 1f       	adc	r21, r21
     7dc:	0a 94       	dec	r0
     7de:	e2 f7       	brpl	.-8      	; 0x7d8 <lcd_putc+0x166>
     7e0:	64 2b       	or	r22, r20
     7e2:	75 2b       	or	r23, r21
     7e4:	ac 01       	movw	r20, r24
     7e6:	44 0f       	add	r20, r20
     7e8:	55 1f       	adc	r21, r21
     7ea:	28 01       	movw	r4, r16
     7ec:	02 c0       	rjmp	.+4      	; 0x7f2 <lcd_putc+0x180>
     7ee:	44 0c       	add	r4, r4
     7f0:	55 1c       	adc	r5, r5
     7f2:	4a 95       	dec	r20
     7f4:	e2 f7       	brpl	.-8      	; 0x7ee <lcd_putc+0x17c>
     7f6:	a2 01       	movw	r20, r4
     7f8:	46 2b       	or	r20, r22
     7fa:	57 2b       	or	r21, r23
     7fc:	11 96       	adiw	r26, 0x01	; 1
     7fe:	5c 93       	st	X, r21
     800:	4e 93       	st	-X, r20
     802:	01 96       	adiw	r24, 0x01	; 1
     804:	2e 5f       	subi	r18, 0xFE	; 254
     806:	3f 4f       	sbci	r19, 0xFF	; 255
     808:	88 30       	cpi	r24, 0x08	; 8
     80a:	91 05       	cpc	r25, r1
     80c:	b1 f6       	brne	.-84     	; 0x7ba <lcd_putc+0x148>
     80e:	22 e0       	ldi	r18, 0x02	; 2
     810:	c2 0e       	add	r12, r18
     812:	d1 1c       	adc	r13, r1
     814:	3f ef       	ldi	r19, 0xFF	; 255
     816:	a3 1a       	sub	r10, r19
     818:	b3 0a       	sbc	r11, r19
     81a:	c6 14       	cp	r12, r6
     81c:	d7 04       	cpc	r13, r7
     81e:	09 f0       	breq	.+2      	; 0x822 <lcd_putc+0x1b0>
     820:	c0 cf       	rjmp	.-128    	; 0x7a2 <lcd_putc+0x130>
     822:	e9 2d       	mov	r30, r9
     824:	f0 e0       	ldi	r31, 0x00	; 0
     826:	90 91 27 05 	lds	r25, 0x0527	; 0x800527 <cursorPosition+0x1>
     82a:	89 2f       	mov	r24, r25
     82c:	90 e0       	ldi	r25, 0x00	; 0
     82e:	01 96       	adiw	r24, 0x01	; 1
     830:	96 95       	lsr	r25
     832:	98 2f       	mov	r25, r24
     834:	88 27       	eor	r24, r24
     836:	97 95       	ror	r25
     838:	87 95       	ror	r24
     83a:	df 01       	movw	r26, r30
     83c:	a8 0f       	add	r26, r24
     83e:	b9 1f       	adc	r27, r25
     840:	aa 5d       	subi	r26, 0xDA	; 218
     842:	be 4f       	sbci	r27, 0xFE	; 254
     844:	e8 0f       	add	r30, r24
     846:	f9 1f       	adc	r31, r25
     848:	af 01       	movw	r20, r30
     84a:	4a 55       	subi	r20, 0x5A	; 90
     84c:	5f 4f       	sbci	r21, 0xFF	; 255
     84e:	f7 01       	movw	r30, r14
     850:	80 81       	ld	r24, Z
     852:	91 81       	ldd	r25, Z+1	; 0x01
     854:	f2 e0       	ldi	r31, 0x02	; 2
     856:	ef 0e       	add	r14, r31
     858:	f1 1c       	adc	r15, r1
     85a:	9c 93       	st	X, r25
     85c:	11 96       	adiw	r26, 0x01	; 1
     85e:	9c 93       	st	X, r25
     860:	11 97       	sbiw	r26, 0x01	; 1
     862:	fa 01       	movw	r30, r20
     864:	80 83       	st	Z, r24
     866:	81 83       	std	Z+1, r24	; 0x01
     868:	12 96       	adiw	r26, 0x02	; 2
     86a:	4e 5f       	subi	r20, 0xFE	; 254
     86c:	5f 4f       	sbci	r21, 0xFF	; 255
     86e:	e6 14       	cp	r14, r6
     870:	f7 04       	cpc	r15, r7
     872:	69 f7       	brne	.-38     	; 0x84e <lcd_putc+0x1dc>
     874:	8c e0       	ldi	r24, 0x0C	; 12
     876:	89 0d       	add	r24, r9
     878:	80 93 26 05 	sts	0x0526, r24	; 0x800526 <cursorPosition>
     87c:	20 c0       	rjmp	.+64     	; 0x8be <lcd_putc+0x24c>
     87e:	20 91 27 05 	lds	r18, 0x0527	; 0x800527 <cursorPosition+0x1>
     882:	90 e0       	ldi	r25, 0x00	; 0
     884:	fc 01       	movw	r30, r24
     886:	ee 0f       	add	r30, r30
     888:	ff 1f       	adc	r31, r31
     88a:	e8 0f       	add	r30, r24
     88c:	f9 1f       	adc	r31, r25
     88e:	ee 0f       	add	r30, r30
     890:	ff 1f       	adc	r31, r31
     892:	ee 59       	subi	r30, 0x9E	; 158
     894:	fe 4f       	sbci	r31, 0xFE	; 254
     896:	a9 2d       	mov	r26, r9
     898:	b0 e0       	ldi	r27, 0x00	; 0
     89a:	30 e8       	ldi	r19, 0x80	; 128
     89c:	23 9f       	mul	r18, r19
     89e:	a0 0d       	add	r26, r0
     8a0:	b1 1d       	adc	r27, r1
     8a2:	11 24       	eor	r1, r1
     8a4:	aa 5d       	subi	r26, 0xDA	; 218
     8a6:	be 4f       	sbci	r27, 0xFE	; 254
     8a8:	86 e0       	ldi	r24, 0x06	; 6
     8aa:	94 91       	lpm	r25, Z
     8ac:	9d 93       	st	X+, r25
     8ae:	81 50       	subi	r24, 0x01	; 1
     8b0:	31 96       	adiw	r30, 0x01	; 1
     8b2:	81 11       	cpse	r24, r1
     8b4:	fa cf       	rjmp	.-12     	; 0x8aa <lcd_putc+0x238>
     8b6:	86 e0       	ldi	r24, 0x06	; 6
     8b8:	89 0d       	add	r24, r9
     8ba:	80 93 26 05 	sts	0x0526, r24	; 0x800526 <cursorPosition>
     8be:	2c 96       	adiw	r28, 0x0c	; 12
     8c0:	0f b6       	in	r0, 0x3f	; 63
     8c2:	f8 94       	cli
     8c4:	de bf       	out	0x3e, r29	; 62
     8c6:	0f be       	out	0x3f, r0	; 63
     8c8:	cd bf       	out	0x3d, r28	; 61
     8ca:	df 91       	pop	r29
     8cc:	cf 91       	pop	r28
     8ce:	1f 91       	pop	r17
     8d0:	0f 91       	pop	r16
     8d2:	ff 90       	pop	r15
     8d4:	ef 90       	pop	r14
     8d6:	df 90       	pop	r13
     8d8:	cf 90       	pop	r12
     8da:	bf 90       	pop	r11
     8dc:	af 90       	pop	r10
     8de:	9f 90       	pop	r9
     8e0:	7f 90       	pop	r7
     8e2:	6f 90       	pop	r6
     8e4:	5f 90       	pop	r5
     8e6:	4f 90       	pop	r4
     8e8:	08 95       	ret

000008ea <lcd_puts>:
     8ea:	cf 93       	push	r28
     8ec:	df 93       	push	r29
     8ee:	ec 01       	movw	r28, r24
     8f0:	88 81       	ld	r24, Y
     8f2:	88 23       	and	r24, r24
     8f4:	31 f0       	breq	.+12     	; 0x902 <__stack+0x3>
     8f6:	21 96       	adiw	r28, 0x01	; 1
     8f8:	0e 94 39 03 	call	0x672	; 0x672 <lcd_putc>
     8fc:	89 91       	ld	r24, Y+
     8fe:	81 11       	cpse	r24, r1
     900:	fb cf       	rjmp	.-10     	; 0x8f8 <lcd_puts+0xe>
     902:	df 91       	pop	r29
     904:	cf 91       	pop	r28
     906:	08 95       	ret

00000908 <lcd_display>:
void lcd_display() {
     908:	0f 93       	push	r16
     90a:	1f 93       	push	r17
     90c:	cf 93       	push	r28
     90e:	06 e2       	ldi	r16, 0x26	; 38
     910:	11 e0       	ldi	r17, 0x01	; 1
#if defined SSD1306
    lcd_gotoxy(0,0);
    lcd_data(&displayBuffer[0][0], DISPLAY_WIDTH*DISPLAY_HEIGHT/8);
#elif defined SH1106
    for (uint8_t i = 0; i < DISPLAY_HEIGHT/8; i++){
     912:	c0 e0       	ldi	r28, 0x00	; 0
        lcd_gotoxy(0,i);
     914:	6c 2f       	mov	r22, r28
     916:	80 e0       	ldi	r24, 0x00	; 0
     918:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
        lcd_data(displayBuffer[i], sizeof(displayBuffer[i]));
     91c:	60 e8       	ldi	r22, 0x80	; 128
     91e:	70 e0       	ldi	r23, 0x00	; 0
     920:	c8 01       	movw	r24, r16
     922:	0e 94 8a 02 	call	0x514	; 0x514 <lcd_data>
void lcd_display() {
#if defined SSD1306
    lcd_gotoxy(0,0);
    lcd_data(&displayBuffer[0][0], DISPLAY_WIDTH*DISPLAY_HEIGHT/8);
#elif defined SH1106
    for (uint8_t i = 0; i < DISPLAY_HEIGHT/8; i++){
     926:	cf 5f       	subi	r28, 0xFF	; 255
     928:	00 58       	subi	r16, 0x80	; 128
     92a:	1f 4f       	sbci	r17, 0xFF	; 255
     92c:	c8 30       	cpi	r28, 0x08	; 8
     92e:	91 f7       	brne	.-28     	; 0x914 <lcd_display+0xc>
        lcd_gotoxy(0,i);
        lcd_data(displayBuffer[i], sizeof(displayBuffer[i]));
    }
#endif
}
     930:	cf 91       	pop	r28
     932:	1f 91       	pop	r17
     934:	0f 91       	pop	r16
     936:	08 95       	ret

00000938 <initUART0>:
	}

	//Read sensor takes in the latest value stored in the sensors array at the specified index and returns it. This value is updated via the ADC_vect interrupt.
	uint16_t readSensor(uint8_t analogPin){
		return sensorValues[analogPin + 1];
	}
     938:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
     93c:	87 e6       	ldi	r24, 0x67	; 103
     93e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
     942:	e0 ec       	ldi	r30, 0xC0	; 192
     944:	f0 e0       	ldi	r31, 0x00	; 0
     946:	10 82       	st	Z, r1
     948:	88 e9       	ldi	r24, 0x98	; 152
     94a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
     94e:	86 e0       	ldi	r24, 0x06	; 6
     950:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
     954:	80 81       	ld	r24, Z
     956:	80 64       	ori	r24, 0x40	; 64
     958:	80 83       	st	Z, r24
     95a:	08 95       	ret

0000095c <__vector_4>:
     95c:	1f 92       	push	r1
     95e:	0f 92       	push	r0
     960:	0f b6       	in	r0, 0x3f	; 63
     962:	0f 92       	push	r0
     964:	11 24       	eor	r1, r1
     966:	2f 93       	push	r18
     968:	3f 93       	push	r19
     96a:	4f 93       	push	r20
     96c:	5f 93       	push	r21
     96e:	6f 93       	push	r22
     970:	7f 93       	push	r23
     972:	8f 93       	push	r24
     974:	9f 93       	push	r25
     976:	af 93       	push	r26
     978:	bf 93       	push	r27
     97a:	cf 93       	push	r28
     97c:	ef 93       	push	r30
     97e:	ff 93       	push	r31
     980:	33 9b       	sbis	0x06, 3	; 6
     982:	05 c0       	rjmp	.+10     	; 0x98e <__vector_4+0x32>
     984:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     988:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     98c:	21 c0       	rjmp	.+66     	; 0x9d0 <__vector_4+0x74>
     98e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     992:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     996:	90 93 3b 05 	sts	0x053B, r25	; 0x80053b <numuS+0x1>
     99a:	80 93 3a 05 	sts	0x053A, r24	; 0x80053a <numuS>
     99e:	cf b7       	in	r28, 0x3f	; 63
     9a0:	f8 94       	cli
     9a2:	60 91 3a 05 	lds	r22, 0x053A	; 0x80053a <numuS>
     9a6:	70 91 3b 05 	lds	r23, 0x053B	; 0x80053b <numuS+0x1>
     9aa:	80 e0       	ldi	r24, 0x00	; 0
     9ac:	90 e0       	ldi	r25, 0x00	; 0
     9ae:	0e 94 69 09 	call	0x12d2	; 0x12d2 <__floatunsisf>
     9b2:	2a e8       	ldi	r18, 0x8A	; 138
     9b4:	31 ec       	ldi	r19, 0xC1	; 193
     9b6:	4c e8       	ldi	r20, 0x8C	; 140
     9b8:	5a e3       	ldi	r21, 0x3A	; 58
     9ba:	0e 94 20 0a 	call	0x1440	; 0x1440 <__mulsf3>
     9be:	60 93 36 05 	sts	0x0536, r22	; 0x800536 <raw>
     9c2:	70 93 37 05 	sts	0x0537, r23	; 0x800537 <raw+0x1>
     9c6:	80 93 38 05 	sts	0x0538, r24	; 0x800538 <raw+0x2>
     9ca:	90 93 39 05 	sts	0x0539, r25	; 0x800539 <raw+0x3>
     9ce:	cf bf       	out	0x3f, r28	; 63
     9d0:	ff 91       	pop	r31
     9d2:	ef 91       	pop	r30
     9d4:	cf 91       	pop	r28
     9d6:	bf 91       	pop	r27
     9d8:	af 91       	pop	r26
     9da:	9f 91       	pop	r25
     9dc:	8f 91       	pop	r24
     9de:	7f 91       	pop	r23
     9e0:	6f 91       	pop	r22
     9e2:	5f 91       	pop	r21
     9e4:	4f 91       	pop	r20
     9e6:	3f 91       	pop	r19
     9e8:	2f 91       	pop	r18
     9ea:	0f 90       	pop	r0
     9ec:	0f be       	out	0x3f, r0	; 63
     9ee:	0f 90       	pop	r0
     9f0:	1f 90       	pop	r1
     9f2:	18 95       	reti

000009f4 <initializePWM>:
     9f4:	8a b1       	in	r24, 0x0a	; 10
     9f6:	80 66       	ori	r24, 0x60	; 96
     9f8:	8a b9       	out	0x0a, r24	; 10
     9fa:	17 bc       	out	0x27, r1	; 39
     9fc:	18 bc       	out	0x28, r1	; 40
     9fe:	84 b5       	in	r24, 0x24	; 36
     a00:	80 68       	ori	r24, 0x80	; 128
     a02:	84 bd       	out	0x24, r24	; 36
     a04:	84 b5       	in	r24, 0x24	; 36
     a06:	80 62       	ori	r24, 0x20	; 32
     a08:	84 bd       	out	0x24, r24	; 36
     a0a:	84 b5       	in	r24, 0x24	; 36
     a0c:	83 60       	ori	r24, 0x03	; 3
     a0e:	84 bd       	out	0x24, r24	; 36
     a10:	85 b5       	in	r24, 0x25	; 37
     a12:	85 60       	ori	r24, 0x05	; 5
     a14:	85 bd       	out	0x25, r24	; 37
     a16:	08 95       	ret

00000a18 <initializeMotors>:
     a18:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <initializePWM>
     a1c:	8a b1       	in	r24, 0x0a	; 10
     a1e:	84 69       	ori	r24, 0x94	; 148
     a20:	8a b9       	out	0x0a, r24	; 10
     a22:	20 9a       	sbi	0x04, 0	; 4
     a24:	08 95       	ret

00000a26 <initializeUltrasonic>:
     a26:	8f ef       	ldi	r24, 0xFF	; 255
     a28:	87 b9       	out	0x07, r24	; 7
     a2a:	3b 98       	cbi	0x07, 3	; 7
     a2c:	43 9a       	sbi	0x08, 3	; 8
     a2e:	42 98       	cbi	0x08, 2	; 8
     a30:	e4 e6       	ldi	r30, 0x64	; 100
     a32:	f0 e0       	ldi	r31, 0x00	; 0
     a34:	80 81       	ld	r24, Z
     a36:	87 7f       	andi	r24, 0xF7	; 247
     a38:	80 83       	st	Z, r24
     a3a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     a3e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     a42:	e1 e8       	ldi	r30, 0x81	; 129
     a44:	f0 e0       	ldi	r31, 0x00	; 0
     a46:	80 81       	ld	r24, Z
     a48:	81 60       	ori	r24, 0x01	; 1
     a4a:	80 83       	st	Z, r24
     a4c:	80 81       	ld	r24, Z
     a4e:	80 64       	ori	r24, 0x40	; 64
     a50:	80 83       	st	Z, r24
     a52:	82 e0       	ldi	r24, 0x02	; 2
     a54:	80 93 68 00 	sts	0x0068, r24	; 0x800068 <__TEXT_REGION_LENGTH__+0x7e0068>
     a58:	88 e0       	ldi	r24, 0x08	; 8
     a5a:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7e006c>
     a5e:	08 95       	ret

00000a60 <leftFwd>:
     a60:	5a 9a       	sbi	0x0b, 2	; 11
     a62:	5c 98       	cbi	0x0b, 4	; 11
     a64:	88 bd       	out	0x28, r24	; 40
     a66:	08 95       	ret

00000a68 <leftRev>:
     a68:	5a 98       	cbi	0x0b, 2	; 11
     a6a:	5c 9a       	sbi	0x0b, 4	; 11
     a6c:	88 bd       	out	0x28, r24	; 40
     a6e:	08 95       	ret

00000a70 <rightFwd>:
     a70:	5f 9a       	sbi	0x0b, 7	; 11
     a72:	28 98       	cbi	0x05, 0	; 5
     a74:	87 bd       	out	0x27, r24	; 39
     a76:	08 95       	ret

00000a78 <rightRev>:
     a78:	5f 98       	cbi	0x0b, 7	; 11
     a7a:	28 9a       	sbi	0x05, 0	; 5
     a7c:	87 bd       	out	0x27, r24	; 39
     a7e:	08 95       	ret

00000a80 <__vector_18>:
     a80:	1f 92       	push	r1
     a82:	0f 92       	push	r0
     a84:	0f b6       	in	r0, 0x3f	; 63
     a86:	0f 92       	push	r0
     a88:	11 24       	eor	r1, r1
     a8a:	2f 93       	push	r18
     a8c:	3f 93       	push	r19
     a8e:	4f 93       	push	r20
     a90:	5f 93       	push	r21
     a92:	6f 93       	push	r22
     a94:	7f 93       	push	r23
     a96:	8f 93       	push	r24
     a98:	9f 93       	push	r25
     a9a:	af 93       	push	r26
     a9c:	bf 93       	push	r27
     a9e:	ef 93       	push	r30
     aa0:	ff 93       	push	r31
     aa2:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
     aa6:	82 34       	cpi	r24, 0x42	; 66
     aa8:	41 f0       	breq	.+16     	; 0xaba <__vector_18+0x3a>
     aaa:	83 34       	cpi	r24, 0x43	; 67
     aac:	89 f0       	breq	.+34     	; 0xad0 <__vector_18+0x50>
     aae:	81 34       	cpi	r24, 0x41	; 65
     ab0:	c1 f4       	brne	.+48     	; 0xae2 <__vector_18+0x62>
     ab2:	81 e3       	ldi	r24, 0x31	; 49
     ab4:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <run>
     ab8:	14 c0       	rjmp	.+40     	; 0xae2 <__vector_18+0x62>
     aba:	e3 e0       	ldi	r30, 0x03	; 3
     abc:	f1 e0       	ldi	r31, 0x01	; 1
     abe:	89 e5       	ldi	r24, 0x59	; 89
     ac0:	95 e6       	ldi	r25, 0x65	; 101
     ac2:	91 83       	std	Z+1, r25	; 0x01
     ac4:	80 83       	st	Z, r24
     ac6:	83 e7       	ldi	r24, 0x73	; 115
     ac8:	90 e0       	ldi	r25, 0x00	; 0
     aca:	93 83       	std	Z+3, r25	; 0x03
     acc:	82 83       	std	Z+2, r24	; 0x02
     ace:	09 c0       	rjmp	.+18     	; 0xae2 <__vector_18+0x62>
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	0e 94 30 05 	call	0xa60	; 0xa60 <leftFwd>
     ad6:	80 e0       	ldi	r24, 0x00	; 0
     ad8:	0e 94 3c 05 	call	0xa78	; 0xa78 <rightRev>
     adc:	80 e3       	ldi	r24, 0x30	; 48
     ade:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <run>
     ae2:	ff 91       	pop	r31
     ae4:	ef 91       	pop	r30
     ae6:	bf 91       	pop	r27
     ae8:	af 91       	pop	r26
     aea:	9f 91       	pop	r25
     aec:	8f 91       	pop	r24
     aee:	7f 91       	pop	r23
     af0:	6f 91       	pop	r22
     af2:	5f 91       	pop	r21
     af4:	4f 91       	pop	r20
     af6:	3f 91       	pop	r19
     af8:	2f 91       	pop	r18
     afa:	0f 90       	pop	r0
     afc:	0f be       	out	0x3f, r0	; 63
     afe:	0f 90       	pop	r0
     b00:	1f 90       	pop	r1
     b02:	18 95       	reti

00000b04 <drive>:
     b04:	cf 93       	push	r28
     b06:	df 93       	push	r29
     b08:	18 16       	cp	r1, r24
     b0a:	19 06       	cpc	r1, r25
     b0c:	74 f4       	brge	.+28     	; 0xb2a <drive+0x26>
     b0e:	ec 01       	movw	r28, r24
     b10:	99 23       	and	r25, r25
     b12:	24 f4       	brge	.+8      	; 0xb1c <drive+0x18>
     b14:	cc 27       	eor	r28, r28
     b16:	dd 27       	eor	r29, r29
     b18:	c8 1b       	sub	r28, r24
     b1a:	d9 0b       	sbc	r29, r25
     b1c:	8c 2f       	mov	r24, r28
     b1e:	0e 94 30 05 	call	0xa60	; 0xa60 <leftFwd>
     b22:	8c 2f       	mov	r24, r28
     b24:	0e 94 3c 05 	call	0xa78	; 0xa78 <rightRev>
     b28:	0d c0       	rjmp	.+26     	; 0xb44 <drive+0x40>
     b2a:	ec 01       	movw	r28, r24
     b2c:	99 23       	and	r25, r25
     b2e:	24 f4       	brge	.+8      	; 0xb38 <drive+0x34>
     b30:	cc 27       	eor	r28, r28
     b32:	dd 27       	eor	r29, r29
     b34:	c8 1b       	sub	r28, r24
     b36:	d9 0b       	sbc	r29, r25
     b38:	8c 2f       	mov	r24, r28
     b3a:	0e 94 34 05 	call	0xa68	; 0xa68 <leftRev>
     b3e:	8c 2f       	mov	r24, r28
     b40:	0e 94 38 05 	call	0xa70	; 0xa70 <rightFwd>
     b44:	df 91       	pop	r29
     b46:	cf 91       	pop	r28
     b48:	08 95       	ret

00000b4a <sendUltraSonicSignal>:
     b4a:	42 9a       	sbi	0x08, 2	; 8
     b4c:	85 e3       	ldi	r24, 0x35	; 53
     b4e:	8a 95       	dec	r24
     b50:	f1 f7       	brne	.-4      	; 0xb4e <sendUltraSonicSignal+0x4>
     b52:	00 00       	nop
     b54:	42 98       	cbi	0x08, 2	; 8
     b56:	08 95       	ret

00000b58 <selectChannel>:
     b58:	ec e7       	ldi	r30, 0x7C	; 124
     b5a:	f0 e0       	ldi	r31, 0x00	; 0
     b5c:	90 81       	ld	r25, Z
     b5e:	90 7e       	andi	r25, 0xE0	; 224
     b60:	8f 71       	andi	r24, 0x1F	; 31
     b62:	89 2b       	or	r24, r25
     b64:	80 83       	st	Z, r24
     b66:	08 95       	ret

00000b68 <startConversion>:

	//For convenience startConversion is used instead of the bit maths.
	void startConversion(){
		ADCSRA |= (1 << ADSC);
     b68:	ea e7       	ldi	r30, 0x7A	; 122
     b6a:	f0 e0       	ldi	r31, 0x00	; 0
     b6c:	80 81       	ld	r24, Z
     b6e:	80 64       	ori	r24, 0x40	; 64
     b70:	80 83       	st	Z, r24
     b72:	08 95       	ret

00000b74 <__vector_21>:
volatile uint8_t currentAnalogChannel = OPTICAL_FRONT;

//volatile uint8_t currentAnalogChannel = OPTICAL_FRONT;

//Interrupt service routine to update the sensor value array continuously using interrupts
ISR(ADC_vect){
     b74:	1f 92       	push	r1
     b76:	0f 92       	push	r0
     b78:	0f b6       	in	r0, 0x3f	; 63
     b7a:	0f 92       	push	r0
     b7c:	11 24       	eor	r1, r1
     b7e:	2f 93       	push	r18
     b80:	3f 93       	push	r19
     b82:	4f 93       	push	r20
     b84:	5f 93       	push	r21
     b86:	6f 93       	push	r22
     b88:	7f 93       	push	r23
     b8a:	8f 93       	push	r24
     b8c:	9f 93       	push	r25
     b8e:	af 93       	push	r26
     b90:	bf 93       	push	r27
     b92:	ef 93       	push	r30
     b94:	ff 93       	push	r31
	
	
	//There is a simple logic change that would allow up to 6 sensors 0-5 analog pins
	
	if(currentAnalogChannel > OPTICAL_RIGHT){
     b96:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentAnalogChannel>
     b9a:	86 30       	cpi	r24, 0x06	; 6
     b9c:	18 f0       	brcs	.+6      	; 0xba4 <__vector_21+0x30>
		currentAnalogChannel = OPTICAL_FRONT;
     b9e:	81 e0       	ldi	r24, 0x01	; 1
     ba0:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <currentAnalogChannel>
		} else {}
		
		
		
		selectChannel(currentAnalogChannel);
     ba4:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentAnalogChannel>
     ba8:	0e 94 ac 05 	call	0xb58	; 0xb58 <selectChannel>
		sensorValues[currentAnalogChannel] = ADCW;
     bac:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <currentAnalogChannel>
     bb0:	f0 e0       	ldi	r31, 0x00	; 0
     bb2:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     bb6:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     bba:	ee 0f       	add	r30, r30
     bbc:	ff 1f       	adc	r31, r31
     bbe:	e6 5d       	subi	r30, 0xD6	; 214
     bc0:	fa 4f       	sbci	r31, 0xFA	; 250
     bc2:	91 83       	std	Z+1, r25	; 0x01
     bc4:	80 83       	st	Z, r24
		currentAnalogChannel++;
     bc6:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <currentAnalogChannel>
     bca:	8f 5f       	subi	r24, 0xFF	; 255
     bcc:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <currentAnalogChannel>
		startConversion();
     bd0:	0e 94 b4 05 	call	0xb68	; 0xb68 <startConversion>
		
		
	}
     bd4:	ff 91       	pop	r31
     bd6:	ef 91       	pop	r30
     bd8:	bf 91       	pop	r27
     bda:	af 91       	pop	r26
     bdc:	9f 91       	pop	r25
     bde:	8f 91       	pop	r24
     be0:	7f 91       	pop	r23
     be2:	6f 91       	pop	r22
     be4:	5f 91       	pop	r21
     be6:	4f 91       	pop	r20
     be8:	3f 91       	pop	r19
     bea:	2f 91       	pop	r18
     bec:	0f 90       	pop	r0
     bee:	0f be       	out	0x3f, r0	; 63
     bf0:	0f 90       	pop	r0
     bf2:	1f 90       	pop	r1
     bf4:	18 95       	reti

00000bf6 <initializeADC>:
	}

	//Initializes the ADC registers to support the IR and optical sensors.
	void initializeADC(){
		//Configure the ADMUX for AVCC as input (internal 5v reference) / not left adjusted results (10-bit resolution) / ADC0 as input / 0b0100:0000
		ADMUX = 0x40;
     bf6:	80 e4       	ldi	r24, 0x40	; 64
     bf8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
		//Configure ADCSRA for enable ADC / don't start conversion / prescaler 128 / disable auto-trigger / enable ADC interrupt 0b10001:111
		ADCSRA = 0x8F;
     bfc:	8f e8       	ldi	r24, 0x8F	; 143
     bfe:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
		
		selectChannel(OPTICAL_FRONT);
     c02:	81 e0       	ldi	r24, 0x01	; 1
     c04:	0e 94 ac 05 	call	0xb58	; 0xb58 <selectChannel>
		sei();
     c08:	78 94       	sei
		startConversion();
     c0a:	0e 94 b4 05 	call	0xb68	; 0xb68 <startConversion>
     c0e:	08 95       	ret

00000c10 <main>:
	}


	/* ****************************** Start of main *****************************/

	int main(void){
     c10:	cf 93       	push	r28
     c12:	df 93       	push	r29
     c14:	cd b7       	in	r28, 0x3d	; 61
     c16:	de b7       	in	r29, 0x3e	; 62
     c18:	c0 57       	subi	r28, 0x70	; 112
     c1a:	d1 09       	sbc	r29, r1
     c1c:	0f b6       	in	r0, 0x3f	; 63
     c1e:	f8 94       	cli
     c20:	de bf       	out	0x3e, r29	; 62
     c22:	0f be       	out	0x3f, r0	; 63
     c24:	cd bf       	out	0x3d, r28	; 61
		
		initUART0();
     c26:	0e 94 9c 04 	call	0x938	; 0x938 <initUART0>
		initializeMotors();
     c2a:	0e 94 0c 05 	call	0xa18	; 0xa18 <initializeMotors>
		initializeADC();
     c2e:	0e 94 fb 05 	call	0xbf6	; 0xbf6 <initializeADC>
		initializeUltrasonic();
     c32:	0e 94 13 05 	call	0xa26	; 0xa26 <initializeUltrasonic>
		sei();
     c36:	78 94       	sei
		DDRB =	0xFF;
     c38:	8f ef       	ldi	r24, 0xFF	; 255
     c3a:	84 b9       	out	0x04, r24	; 4
		char distance[100];
		char axg_arr[10];
		char ayg_arr[10];
		char azg_arr[10];
		
		lcd_init(0xAF);    // init lcd and turn on
     c3c:	8f ea       	ldi	r24, 0xAF	; 175
     c3e:	0e 94 0c 03 	call	0x618	; 0x618 <lcd_init>
		//init mpu6050
		mpu6050_init();
     c42:	0e 94 20 08 	call	0x1040	; 0x1040 <mpu6050_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c46:	2f ef       	ldi	r18, 0xFF	; 255
     c48:	80 e7       	ldi	r24, 0x70	; 112
     c4a:	92 e0       	ldi	r25, 0x02	; 2
     c4c:	21 50       	subi	r18, 0x01	; 1
     c4e:	80 40       	sbci	r24, 0x00	; 0
     c50:	90 40       	sbci	r25, 0x00	; 0
     c52:	e1 f7       	brne	.-8      	; 0xc4c <main+0x3c>
     c54:	00 c0       	rjmp	.+0      	; 0xc56 <main+0x46>
     c56:	00 00       	nop
			int16_t ay = 0;
			int16_t az = 0;
			int16_t gx = 0;
			int16_t gy = 0;
			int16_t gz = 0;
			double axg = 0;
     c58:	a9 96       	adiw	r28, 0x29	; 41
     c5a:	1c ae       	std	Y+60, r1	; 0x3c
     c5c:	1d ae       	std	Y+61, r1	; 0x3d
     c5e:	1e ae       	std	Y+62, r1	; 0x3e
     c60:	1f ae       	std	Y+63, r1	; 0x3f
     c62:	a9 97       	sbiw	r28, 0x29	; 41
			double ayg = 0;
     c64:	ad 96       	adiw	r28, 0x2d	; 45
     c66:	1c ae       	std	Y+60, r1	; 0x3c
     c68:	1d ae       	std	Y+61, r1	; 0x3d
     c6a:	1e ae       	std	Y+62, r1	; 0x3e
     c6c:	1f ae       	std	Y+63, r1	; 0x3f
     c6e:	ad 97       	sbiw	r28, 0x2d	; 45
			double azg = 0;
     c70:	e1 96       	adiw	r28, 0x31	; 49
     c72:	1c ae       	std	Y+60, r1	; 0x3c
     c74:	1d ae       	std	Y+61, r1	; 0x3d
     c76:	1e ae       	std	Y+62, r1	; 0x3e
     c78:	1f ae       	std	Y+63, r1	; 0x3f
     c7a:	e1 97       	sbiw	r28, 0x31	; 49
			#endif
			
			#if MPU6050_GETATTITUDE == 0
			
			if((axg > HIT_THRESHHOLD || axg < -HIT_THRESHHOLD) || (ayg > HIT_THRESHHOLD || ayg < -HIT_THRESHHOLD)){
				hit = 1;
     c7c:	77 24       	eor	r7, r7
     c7e:	73 94       	inc	r7
     c80:	2f ef       	ldi	r18, 0xFF	; 255
     c82:	8d ee       	ldi	r24, 0xED	; 237
     c84:	92 e0       	ldi	r25, 0x02	; 2
     c86:	21 50       	subi	r18, 0x01	; 1
     c88:	80 40       	sbci	r24, 0x00	; 0
     c8a:	90 40       	sbci	r25, 0x00	; 0
     c8c:	e1 f7       	brne	.-8      	; 0xc86 <main+0x76>
     c8e:	00 c0       	rjmp	.+0      	; 0xc90 <main+0x80>
     c90:	00 00       	nop
		while(1){
			_delay_ms(60);
			
			
			#if MPU6050_GETATTITUDE == 0
			mpu6050_getConvAccelData(&axg, &ayg, &azg);
     c92:	ae 01       	movw	r20, r28
     c94:	43 59       	subi	r20, 0x93	; 147
     c96:	5f 4f       	sbci	r21, 0xFF	; 255
     c98:	be 01       	movw	r22, r28
     c9a:	67 59       	subi	r22, 0x97	; 151
     c9c:	7f 4f       	sbci	r23, 0xFF	; 255
     c9e:	ce 01       	movw	r24, r28
     ca0:	8b 59       	subi	r24, 0x9B	; 155
     ca2:	9f 4f       	sbci	r25, 0xFF	; 255
     ca4:	0e 94 7d 08 	call	0x10fa	; 0x10fa <mpu6050_getConvAccelData>
			axg = axg + MPU_AXOFFSET;
     ca8:	2a e0       	ldi	r18, 0x0A	; 10
     caa:	37 ed       	ldi	r19, 0xD7	; 215
     cac:	43 ea       	ldi	r20, 0xA3	; 163
     cae:	5c e3       	ldi	r21, 0x3C	; 60
     cb0:	a9 96       	adiw	r28, 0x29	; 41
     cb2:	6c ad       	ldd	r22, Y+60	; 0x3c
     cb4:	7d ad       	ldd	r23, Y+61	; 0x3d
     cb6:	8e ad       	ldd	r24, Y+62	; 0x3e
     cb8:	9f ad       	ldd	r25, Y+63	; 0x3f
     cba:	a9 97       	sbiw	r28, 0x29	; 41
     cbc:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__addsf3>
     cc0:	6b 01       	movw	r12, r22
     cc2:	7c 01       	movw	r14, r24
     cc4:	a9 96       	adiw	r28, 0x29	; 41
     cc6:	6c af       	std	Y+60, r22	; 0x3c
     cc8:	7d af       	std	Y+61, r23	; 0x3d
     cca:	8e af       	std	Y+62, r24	; 0x3e
     ccc:	9f af       	std	Y+63, r25	; 0x3f
     cce:	a9 97       	sbiw	r28, 0x29	; 41
			ayg = ayg + MPU_AYOFFSET;
     cd0:	2d ec       	ldi	r18, 0xCD	; 205
     cd2:	3c ec       	ldi	r19, 0xCC	; 204
     cd4:	4c e4       	ldi	r20, 0x4C	; 76
     cd6:	5d e3       	ldi	r21, 0x3D	; 61
     cd8:	ad 96       	adiw	r28, 0x2d	; 45
     cda:	6c ad       	ldd	r22, Y+60	; 0x3c
     cdc:	7d ad       	ldd	r23, Y+61	; 0x3d
     cde:	8e ad       	ldd	r24, Y+62	; 0x3e
     ce0:	9f ad       	ldd	r25, Y+63	; 0x3f
     ce2:	ad 97       	sbiw	r28, 0x2d	; 45
     ce4:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__addsf3>
     ce8:	4b 01       	movw	r8, r22
     cea:	5c 01       	movw	r10, r24
     cec:	ad 96       	adiw	r28, 0x2d	; 45
     cee:	6c af       	std	Y+60, r22	; 0x3c
     cf0:	7d af       	std	Y+61, r23	; 0x3d
     cf2:	8e af       	std	Y+62, r24	; 0x3e
     cf4:	9f af       	std	Y+63, r25	; 0x3f
     cf6:	ad 97       	sbiw	r28, 0x2d	; 45
			azg = azg + MPU_AZOFFSET;
     cf8:	2d ec       	ldi	r18, 0xCD	; 205
     cfa:	3c ec       	ldi	r19, 0xCC	; 204
     cfc:	4c e4       	ldi	r20, 0x4C	; 76
     cfe:	5e e3       	ldi	r21, 0x3E	; 62
     d00:	e1 96       	adiw	r28, 0x31	; 49
     d02:	6c ad       	ldd	r22, Y+60	; 0x3c
     d04:	7d ad       	ldd	r23, Y+61	; 0x3d
     d06:	8e ad       	ldd	r24, Y+62	; 0x3e
     d08:	9f ad       	ldd	r25, Y+63	; 0x3f
     d0a:	e1 97       	sbiw	r28, 0x31	; 49
     d0c:	0e 94 f7 08 	call	0x11ee	; 0x11ee <__subsf3>
     d10:	e1 96       	adiw	r28, 0x31	; 49
     d12:	6c af       	std	Y+60, r22	; 0x3c
     d14:	7d af       	std	Y+61, r23	; 0x3d
     d16:	8e af       	std	Y+62, r24	; 0x3e
     d18:	9f af       	std	Y+63, r25	; 0x3f
     d1a:	e1 97       	sbiw	r28, 0x31	; 49
			
			#endif
			
			#if MPU6050_GETATTITUDE == 0
			
			if((axg > HIT_THRESHHOLD || axg < -HIT_THRESHHOLD) || (ayg > HIT_THRESHHOLD || ayg < -HIT_THRESHHOLD)){
     d1c:	2c ee       	ldi	r18, 0xEC	; 236
     d1e:	31 e5       	ldi	r19, 0x51	; 81
     d20:	48 e3       	ldi	r20, 0x38	; 56
     d22:	5e e3       	ldi	r21, 0x3E	; 62
     d24:	c7 01       	movw	r24, r14
     d26:	b6 01       	movw	r22, r12
     d28:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__gesf2>
     d2c:	18 16       	cp	r1, r24
     d2e:	f4 f0       	brlt	.+60     	; 0xd6c <main+0x15c>
     d30:	2c ee       	ldi	r18, 0xEC	; 236
     d32:	31 e5       	ldi	r19, 0x51	; 81
     d34:	48 e3       	ldi	r20, 0x38	; 56
     d36:	5e eb       	ldi	r21, 0xBE	; 190
     d38:	c7 01       	movw	r24, r14
     d3a:	b6 01       	movw	r22, r12
     d3c:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__cmpsf2>
     d40:	88 23       	and	r24, r24
     d42:	a4 f0       	brlt	.+40     	; 0xd6c <main+0x15c>
     d44:	2c ee       	ldi	r18, 0xEC	; 236
     d46:	31 e5       	ldi	r19, 0x51	; 81
     d48:	48 e3       	ldi	r20, 0x38	; 56
     d4a:	5e e3       	ldi	r21, 0x3E	; 62
     d4c:	c5 01       	movw	r24, r10
     d4e:	b4 01       	movw	r22, r8
     d50:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__gesf2>
     d54:	18 16       	cp	r1, r24
     d56:	54 f0       	brlt	.+20     	; 0xd6c <main+0x15c>
     d58:	2c ee       	ldi	r18, 0xEC	; 236
     d5a:	31 e5       	ldi	r19, 0x51	; 81
     d5c:	48 e3       	ldi	r20, 0x38	; 56
     d5e:	5e eb       	ldi	r21, 0xBE	; 190
     d60:	c5 01       	movw	r24, r10
     d62:	b4 01       	movw	r22, r8
     d64:	0e 94 64 09 	call	0x12c8	; 0x12c8 <__cmpsf2>
     d68:	88 23       	and	r24, r24
     d6a:	14 f4       	brge	.+4      	; 0xd70 <main+0x160>
				hit = 1;
     d6c:	70 92 28 05 	sts	0x0528, r7	; 0x800528 <hit>
			}
			#endif
			
			sendUltraSonicSignal();
     d70:	0e 94 a5 05 	call	0xb4a	; 0xb4a <sendUltraSonicSignal>
			dtostrf(raw, 3, 1, distance);
     d74:	60 91 36 05 	lds	r22, 0x0536	; 0x800536 <raw>
     d78:	70 91 37 05 	lds	r23, 0x0537	; 0x800537 <raw+0x1>
     d7c:	80 91 38 05 	lds	r24, 0x0538	; 0x800538 <raw+0x2>
     d80:	90 91 39 05 	lds	r25, 0x0539	; 0x800539 <raw+0x3>
     d84:	8e 01       	movw	r16, r28
     d86:	0f 5f       	subi	r16, 0xFF	; 255
     d88:	1f 4f       	sbci	r17, 0xFF	; 255
     d8a:	27 2d       	mov	r18, r7
     d8c:	43 e0       	ldi	r20, 0x03	; 3
     d8e:	0e 94 8d 0a 	call	0x151a	; 0x151a <dtostrf>
			
			
			lcd_gotoxy(0,0);
     d92:	60 e0       	ldi	r22, 0x00	; 0
     d94:	80 e0       	ldi	r24, 0x00	; 0
     d96:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
			lcd_puts("Distance: ");
     d9a:	86 e0       	ldi	r24, 0x06	; 6
     d9c:	91 e0       	ldi	r25, 0x01	; 1
     d9e:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts(distance);
     da2:	c8 01       	movw	r24, r16
     da4:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts("   ");
     da8:	81 e1       	ldi	r24, 0x11	; 17
     daa:	91 e0       	ldi	r25, 0x01	; 1
     dac:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			//lcd_display();
			
			lcd_gotoxy(12,3);
     db0:	63 e0       	ldi	r22, 0x03	; 3
     db2:	8c e0       	ldi	r24, 0x0C	; 12
     db4:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
			lcd_puts("Comm: ");
     db8:	85 e1       	ldi	r24, 0x15	; 21
     dba:	91 e0       	ldi	r25, 0x01	; 1
     dbc:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts(commCheck);
     dc0:	83 e0       	ldi	r24, 0x03	; 3
     dc2:	91 e0       	ldi	r25, 0x01	; 1
     dc4:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts("   ");
     dc8:	81 e1       	ldi	r24, 0x11	; 17
     dca:	91 e0       	ldi	r25, 0x01	; 1
     dcc:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			//lcd_display();
					
			
		    lcd_gotoxy(0,5);
     dd0:	65 e0       	ldi	r22, 0x05	; 5
     dd2:	80 e0       	ldi	r24, 0x00	; 0
     dd4:	0e 94 ad 02 	call	0x55a	; 0x55a <lcd_gotoxy>
			lcd_puts("Status: ");
     dd8:	8c e1       	ldi	r24, 0x1C	; 28
     dda:	91 e0       	ldi	r25, 0x01	; 1
     ddc:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts(hit);
     de0:	80 91 28 05 	lds	r24, 0x0528	; 0x800528 <hit>
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_puts("   ");
     dea:	81 e1       	ldi	r24, 0x11	; 17
     dec:	91 e0       	ldi	r25, 0x01	; 1
     dee:	0e 94 75 04 	call	0x8ea	; 0x8ea <lcd_puts>
			lcd_display();
     df2:	0e 94 84 04 	call	0x908	; 0x908 <lcd_display>
			
			
			
			
			if(raw > 10 && !hit){
     df6:	20 e0       	ldi	r18, 0x00	; 0
     df8:	30 e0       	ldi	r19, 0x00	; 0
     dfa:	40 e2       	ldi	r20, 0x20	; 32
     dfc:	51 e4       	ldi	r21, 0x41	; 65
     dfe:	60 91 36 05 	lds	r22, 0x0536	; 0x800536 <raw>
     e02:	70 91 37 05 	lds	r23, 0x0537	; 0x800537 <raw+0x1>
     e06:	80 91 38 05 	lds	r24, 0x0538	; 0x800538 <raw+0x2>
     e0a:	90 91 39 05 	lds	r25, 0x0539	; 0x800539 <raw+0x3>
     e0e:	0e 94 1b 0a 	call	0x1436	; 0x1436 <__gesf2>
     e12:	18 16       	cp	r1, r24
     e14:	4c f4       	brge	.+18     	; 0xe28 <main+0x218>
     e16:	80 91 28 05 	lds	r24, 0x0528	; 0x800528 <hit>
     e1a:	81 11       	cpse	r24, r1
     e1c:	05 c0       	rjmp	.+10     	; 0xe28 <main+0x218>
				drive(126);
     e1e:	8e e7       	ldi	r24, 0x7E	; 126
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 82 05 	call	0xb04	; 0xb04 <drive>
     e26:	2c cf       	rjmp	.-424    	; 0xc80 <main+0x70>
			} else {
				drive(0);
     e28:	80 e0       	ldi	r24, 0x00	; 0
     e2a:	90 e0       	ldi	r25, 0x00	; 0
     e2c:	0e 94 82 05 	call	0xb04	; 0xb04 <drive>
     e30:	27 cf       	rjmp	.-434    	; 0xc80 <main+0x70>

00000e32 <mpu6050_readBytes>:
    *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    *az = (((int16_t)buffer[4]) << 8) | buffer[5];
    *gx = (((int16_t)buffer[8]) << 8) | buffer[9];
    *gy = (((int16_t)buffer[10]) << 8) | buffer[11];
    *gz = (((int16_t)buffer[12]) << 8) | buffer[13];
}
     e32:	af 92       	push	r10
     e34:	bf 92       	push	r11
     e36:	cf 92       	push	r12
     e38:	df 92       	push	r13
     e3a:	ff 92       	push	r15
     e3c:	0f 93       	push	r16
     e3e:	1f 93       	push	r17
     e40:	cf 93       	push	r28
     e42:	df 93       	push	r29
     e44:	66 23       	and	r22, r22
     e46:	b9 f1       	breq	.+110    	; 0xeb6 <mpu6050_readBytes+0x84>
     e48:	c5 2f       	mov	r28, r21
     e4a:	d4 2f       	mov	r29, r20
     e4c:	f6 2e       	mov	r15, r22
     e4e:	18 2f       	mov	r17, r24
     e50:	80 ed       	ldi	r24, 0xD0	; 208
     e52:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     e56:	81 2f       	mov	r24, r17
     e58:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     e5c:	83 e0       	ldi	r24, 0x03	; 3
     e5e:	8a 95       	dec	r24
     e60:	f1 f7       	brne	.-4      	; 0xe5e <mpu6050_readBytes+0x2c>
     e62:	00 00       	nop
     e64:	81 ed       	ldi	r24, 0xD1	; 209
     e66:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     e6a:	0d 2f       	mov	r16, r29
     e6c:	1c 2f       	mov	r17, r28
     e6e:	cc 24       	eor	r12, r12
     e70:	ca 94       	dec	r12
     e72:	cf 0c       	add	r12, r15
     e74:	d1 2c       	mov	r13, r1
     e76:	ef ef       	ldi	r30, 0xFF	; 255
     e78:	ce 1a       	sub	r12, r30
     e7a:	de 0a       	sbc	r13, r30
     e7c:	c0 e0       	ldi	r28, 0x00	; 0
     e7e:	d0 e0       	ldi	r29, 0x00	; 0
     e80:	af 2c       	mov	r10, r15
     e82:	b1 2c       	mov	r11, r1
     e84:	f1 e0       	ldi	r31, 0x01	; 1
     e86:	af 1a       	sub	r10, r31
     e88:	b1 08       	sbc	r11, r1
     e8a:	ac 16       	cp	r10, r28
     e8c:	bd 06       	cpc	r11, r29
     e8e:	29 f4       	brne	.+10     	; 0xe9a <mpu6050_readBytes+0x68>
     e90:	0e 94 58 02 	call	0x4b0	; 0x4b0 <i2c_readNAck>
     e94:	f8 01       	movw	r30, r16
     e96:	80 83       	st	Z, r24
     e98:	04 c0       	rjmp	.+8      	; 0xea2 <mpu6050_readBytes+0x70>
     e9a:	0e 94 41 02 	call	0x482	; 0x482 <i2c_readAck>
     e9e:	f8 01       	movw	r30, r16
     ea0:	80 83       	st	Z, r24
     ea2:	21 96       	adiw	r28, 0x01	; 1
     ea4:	0f 5f       	subi	r16, 0xFF	; 255
     ea6:	1f 4f       	sbci	r17, 0xFF	; 255
     ea8:	cc 15       	cp	r28, r12
     eaa:	dd 05       	cpc	r29, r13
     eac:	71 f7       	brne	.-36     	; 0xe8a <mpu6050_readBytes+0x58>
     eae:	cf 2d       	mov	r28, r15
     eb0:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     eb4:	01 c0       	rjmp	.+2      	; 0xeb8 <mpu6050_readBytes+0x86>
     eb6:	c0 e0       	ldi	r28, 0x00	; 0
     eb8:	8c 2f       	mov	r24, r28
     eba:	df 91       	pop	r29
     ebc:	cf 91       	pop	r28
     ebe:	1f 91       	pop	r17
     ec0:	0f 91       	pop	r16
     ec2:	ff 90       	pop	r15
     ec4:	df 90       	pop	r13
     ec6:	cf 90       	pop	r12
     ec8:	bf 90       	pop	r11
     eca:	af 90       	pop	r10
     ecc:	08 95       	ret

00000ece <mpu6050_readByte>:
     ece:	ab 01       	movw	r20, r22
     ed0:	61 e0       	ldi	r22, 0x01	; 1
     ed2:	0e 94 19 07 	call	0xe32	; 0xe32 <mpu6050_readBytes>
     ed6:	08 95       	ret

00000ed8 <mpu6050_writeBytes>:
     ed8:	ef 92       	push	r14
     eda:	ff 92       	push	r15
     edc:	0f 93       	push	r16
     ede:	1f 93       	push	r17
     ee0:	cf 93       	push	r28
     ee2:	df 93       	push	r29
     ee4:	66 23       	and	r22, r22
     ee6:	d1 f0       	breq	.+52     	; 0xf1c <mpu6050_writeBytes+0x44>
     ee8:	7a 01       	movw	r14, r20
     eea:	16 2f       	mov	r17, r22
     eec:	c8 2f       	mov	r28, r24
     eee:	80 ed       	ldi	r24, 0xD0	; 208
     ef0:	0e 94 1f 02 	call	0x43e	; 0x43e <i2c_start>
     ef4:	8c 2f       	mov	r24, r28
     ef6:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     efa:	e7 01       	movw	r28, r14
     efc:	6f ef       	ldi	r22, 0xFF	; 255
     efe:	61 0f       	add	r22, r17
     f00:	06 2f       	mov	r16, r22
     f02:	10 e0       	ldi	r17, 0x00	; 0
     f04:	0f 5f       	subi	r16, 0xFF	; 255
     f06:	1f 4f       	sbci	r17, 0xFF	; 255
     f08:	0e 0d       	add	r16, r14
     f0a:	1f 1d       	adc	r17, r15
     f0c:	89 91       	ld	r24, Y+
     f0e:	0e 94 36 02 	call	0x46c	; 0x46c <i2c_byte>
     f12:	c0 17       	cp	r28, r16
     f14:	d1 07       	cpc	r29, r17
     f16:	d1 f7       	brne	.-12     	; 0xf0c <mpu6050_writeBytes+0x34>
     f18:	0e 94 32 02 	call	0x464	; 0x464 <i2c_stop>
     f1c:	df 91       	pop	r29
     f1e:	cf 91       	pop	r28
     f20:	1f 91       	pop	r17
     f22:	0f 91       	pop	r16
     f24:	ff 90       	pop	r15
     f26:	ef 90       	pop	r14
     f28:	08 95       	ret

00000f2a <mpu6050_writeByte>:
     f2a:	cf 93       	push	r28
     f2c:	df 93       	push	r29
     f2e:	1f 92       	push	r1
     f30:	cd b7       	in	r28, 0x3d	; 61
     f32:	de b7       	in	r29, 0x3e	; 62
     f34:	69 83       	std	Y+1, r22	; 0x01
     f36:	ae 01       	movw	r20, r28
     f38:	4f 5f       	subi	r20, 0xFF	; 255
     f3a:	5f 4f       	sbci	r21, 0xFF	; 255
     f3c:	61 e0       	ldi	r22, 0x01	; 1
     f3e:	0e 94 6c 07 	call	0xed8	; 0xed8 <mpu6050_writeBytes>
     f42:	0f 90       	pop	r0
     f44:	df 91       	pop	r29
     f46:	cf 91       	pop	r28
     f48:	08 95       	ret

00000f4a <mpu6050_writeBits>:
     f4a:	ef 92       	push	r14
     f4c:	ff 92       	push	r15
     f4e:	0f 93       	push	r16
     f50:	1f 93       	push	r17
     f52:	cf 93       	push	r28
     f54:	df 93       	push	r29
     f56:	1f 92       	push	r1
     f58:	cd b7       	in	r28, 0x3d	; 61
     f5a:	de b7       	in	r29, 0x3e	; 62
     f5c:	44 23       	and	r20, r20
     f5e:	89 f1       	breq	.+98     	; 0xfc2 <mpu6050_writeBits+0x78>
     f60:	f2 2e       	mov	r15, r18
     f62:	14 2f       	mov	r17, r20
     f64:	06 2f       	mov	r16, r22
     f66:	e8 2e       	mov	r14, r24
     f68:	19 82       	std	Y+1, r1	; 0x01
     f6a:	be 01       	movw	r22, r28
     f6c:	6f 5f       	subi	r22, 0xFF	; 255
     f6e:	7f 4f       	sbci	r23, 0xFF	; 255
     f70:	0e 94 67 07 	call	0xece	; 0xece <mpu6050_readByte>
     f74:	88 23       	and	r24, r24
     f76:	29 f1       	breq	.+74     	; 0xfc2 <mpu6050_writeBits+0x78>
     f78:	40 2f       	mov	r20, r16
     f7a:	50 e0       	ldi	r21, 0x00	; 0
     f7c:	41 1b       	sub	r20, r17
     f7e:	51 09       	sbc	r21, r1
     f80:	4f 5f       	subi	r20, 0xFF	; 255
     f82:	5f 4f       	sbci	r21, 0xFF	; 255
     f84:	81 e0       	ldi	r24, 0x01	; 1
     f86:	90 e0       	ldi	r25, 0x00	; 0
     f88:	02 c0       	rjmp	.+4      	; 0xf8e <mpu6050_writeBits+0x44>
     f8a:	88 0f       	add	r24, r24
     f8c:	99 1f       	adc	r25, r25
     f8e:	1a 95       	dec	r17
     f90:	e2 f7       	brpl	.-8      	; 0xf8a <mpu6050_writeBits+0x40>
     f92:	01 97       	sbiw	r24, 0x01	; 1
     f94:	04 2e       	mov	r0, r20
     f96:	02 c0       	rjmp	.+4      	; 0xf9c <mpu6050_writeBits+0x52>
     f98:	88 0f       	add	r24, r24
     f9a:	99 1f       	adc	r25, r25
     f9c:	0a 94       	dec	r0
     f9e:	e2 f7       	brpl	.-8      	; 0xf98 <mpu6050_writeBits+0x4e>
     fa0:	2f 2d       	mov	r18, r15
     fa2:	30 e0       	ldi	r19, 0x00	; 0
     fa4:	02 c0       	rjmp	.+4      	; 0xfaa <mpu6050_writeBits+0x60>
     fa6:	22 0f       	add	r18, r18
     fa8:	33 1f       	adc	r19, r19
     faa:	4a 95       	dec	r20
     fac:	e2 f7       	brpl	.-8      	; 0xfa6 <mpu6050_writeBits+0x5c>
     fae:	68 2f       	mov	r22, r24
     fb0:	60 95       	com	r22
     fb2:	99 81       	ldd	r25, Y+1	; 0x01
     fb4:	69 23       	and	r22, r25
     fb6:	82 23       	and	r24, r18
     fb8:	68 2b       	or	r22, r24
     fba:	69 83       	std	Y+1, r22	; 0x01
     fbc:	8e 2d       	mov	r24, r14
     fbe:	0e 94 95 07 	call	0xf2a	; 0xf2a <mpu6050_writeByte>
     fc2:	0f 90       	pop	r0
     fc4:	df 91       	pop	r29
     fc6:	cf 91       	pop	r28
     fc8:	1f 91       	pop	r17
     fca:	0f 91       	pop	r16
     fcc:	ff 90       	pop	r15
     fce:	ef 90       	pop	r14
     fd0:	08 95       	ret

00000fd2 <mpu6050_writeBit>:
     fd2:	ff 92       	push	r15
     fd4:	0f 93       	push	r16
     fd6:	1f 93       	push	r17
     fd8:	cf 93       	push	r28
     fda:	df 93       	push	r29
     fdc:	1f 92       	push	r1
     fde:	cd b7       	in	r28, 0x3d	; 61
     fe0:	de b7       	in	r29, 0x3e	; 62
     fe2:	18 2f       	mov	r17, r24
     fe4:	06 2f       	mov	r16, r22
     fe6:	f4 2e       	mov	r15, r20
     fe8:	be 01       	movw	r22, r28
     fea:	6f 5f       	subi	r22, 0xFF	; 255
     fec:	7f 4f       	sbci	r23, 0xFF	; 255
     fee:	0e 94 67 07 	call	0xece	; 0xece <mpu6050_readByte>
     ff2:	ff 20       	and	r15, r15
     ff4:	51 f0       	breq	.+20     	; 0x100a <mpu6050_writeBit+0x38>
     ff6:	61 e0       	ldi	r22, 0x01	; 1
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	02 c0       	rjmp	.+4      	; 0x1000 <mpu6050_writeBit+0x2e>
     ffc:	66 0f       	add	r22, r22
     ffe:	77 1f       	adc	r23, r23
    1000:	0a 95       	dec	r16
    1002:	e2 f7       	brpl	.-8      	; 0xffc <mpu6050_writeBit+0x2a>
    1004:	89 81       	ldd	r24, Y+1	; 0x01
    1006:	68 2b       	or	r22, r24
    1008:	0a c0       	rjmp	.+20     	; 0x101e <mpu6050_writeBit+0x4c>
    100a:	61 e0       	ldi	r22, 0x01	; 1
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	02 c0       	rjmp	.+4      	; 0x1014 <mpu6050_writeBit+0x42>
    1010:	66 0f       	add	r22, r22
    1012:	77 1f       	adc	r23, r23
    1014:	0a 95       	dec	r16
    1016:	e2 f7       	brpl	.-8      	; 0x1010 <mpu6050_writeBit+0x3e>
    1018:	60 95       	com	r22
    101a:	89 81       	ldd	r24, Y+1	; 0x01
    101c:	68 23       	and	r22, r24
    101e:	69 83       	std	Y+1, r22	; 0x01
    1020:	81 2f       	mov	r24, r17
    1022:	0e 94 95 07 	call	0xf2a	; 0xf2a <mpu6050_writeByte>
    1026:	0f 90       	pop	r0
    1028:	df 91       	pop	r29
    102a:	cf 91       	pop	r28
    102c:	1f 91       	pop	r17
    102e:	0f 91       	pop	r16
    1030:	ff 90       	pop	r15
    1032:	08 95       	ret

00001034 <mpu6050_setSleepDisabled>:
    1034:	40 e0       	ldi	r20, 0x00	; 0
    1036:	66 e0       	ldi	r22, 0x06	; 6
    1038:	8b e6       	ldi	r24, 0x6B	; 107
    103a:	0e 94 e9 07 	call	0xfd2	; 0xfd2 <mpu6050_writeBit>
    103e:	08 95       	ret

00001040 <mpu6050_init>:
    1040:	0e 94 16 02 	call	0x42c	; 0x42c <i2c_init>
    1044:	83 e0       	ldi	r24, 0x03	; 3
    1046:	8a 95       	dec	r24
    1048:	f1 f7       	brne	.-4      	; 0x1046 <mpu6050_init+0x6>
    104a:	00 00       	nop
    104c:	87 ea       	ldi	r24, 0xA7	; 167
    104e:	91 e6       	ldi	r25, 0x61	; 97
    1050:	01 97       	sbiw	r24, 0x01	; 1
    1052:	f1 f7       	brne	.-4      	; 0x1050 <mpu6050_init+0x10>
    1054:	00 c0       	rjmp	.+0      	; 0x1056 <mpu6050_init+0x16>
    1056:	00 00       	nop
    1058:	0e 94 1a 08 	call	0x1034	; 0x1034 <mpu6050_setSleepDisabled>
    105c:	83 ec       	ldi	r24, 0xC3	; 195
    105e:	99 e0       	ldi	r25, 0x09	; 9
    1060:	01 97       	sbiw	r24, 0x01	; 1
    1062:	f1 f7       	brne	.-4      	; 0x1060 <mpu6050_init+0x20>
    1064:	00 c0       	rjmp	.+0      	; 0x1066 <mpu6050_init+0x26>
    1066:	00 00       	nop
    1068:	21 e0       	ldi	r18, 0x01	; 1
    106a:	43 e0       	ldi	r20, 0x03	; 3
    106c:	62 e0       	ldi	r22, 0x02	; 2
    106e:	8b e6       	ldi	r24, 0x6B	; 107
    1070:	0e 94 a5 07 	call	0xf4a	; 0xf4a <mpu6050_writeBits>
    1074:	23 e0       	ldi	r18, 0x03	; 3
    1076:	43 e0       	ldi	r20, 0x03	; 3
    1078:	62 e0       	ldi	r22, 0x02	; 2
    107a:	8a e1       	ldi	r24, 0x1A	; 26
    107c:	0e 94 a5 07 	call	0xf4a	; 0xf4a <mpu6050_writeBits>
    1080:	64 e0       	ldi	r22, 0x04	; 4
    1082:	89 e1       	ldi	r24, 0x19	; 25
    1084:	0e 94 95 07 	call	0xf2a	; 0xf2a <mpu6050_writeByte>
    1088:	23 e0       	ldi	r18, 0x03	; 3
    108a:	42 e0       	ldi	r20, 0x02	; 2
    108c:	64 e0       	ldi	r22, 0x04	; 4
    108e:	8b e1       	ldi	r24, 0x1B	; 27
    1090:	0e 94 a5 07 	call	0xf4a	; 0xf4a <mpu6050_writeBits>
    1094:	20 e0       	ldi	r18, 0x00	; 0
    1096:	42 e0       	ldi	r20, 0x02	; 2
    1098:	64 e0       	ldi	r22, 0x04	; 4
    109a:	8c e1       	ldi	r24, 0x1C	; 28
    109c:	0e 94 a5 07 	call	0xf4a	; 0xf4a <mpu6050_writeBits>
    10a0:	08 95       	ret

000010a2 <mpu6050_getRawAccelData>:

//can not accept many request if we alreay have getattitude requests
/*
 * get raw accel data including the x y and z axis
 */
void mpu6050_getRawAccelData(int16_t* ax, int16_t* ay, int16_t* az) {
    10a2:	ef 92       	push	r14
    10a4:	ff 92       	push	r15
    10a6:	0f 93       	push	r16
    10a8:	1f 93       	push	r17
    10aa:	cf 93       	push	r28
    10ac:	df 93       	push	r29
    10ae:	7c 01       	movw	r14, r24
    10b0:	8b 01       	movw	r16, r22
    10b2:	ea 01       	movw	r28, r20
	mpu6050_readBytes(MPU6050_RA_ACCEL_XOUT_H, 6, (uint8_t *)buffer);
    10b4:	4c e3       	ldi	r20, 0x3C	; 60
    10b6:	55 e0       	ldi	r21, 0x05	; 5
    10b8:	66 e0       	ldi	r22, 0x06	; 6
    10ba:	8b e3       	ldi	r24, 0x3B	; 59
    10bc:	0e 94 19 07 	call	0xe32	; 0xe32 <mpu6050_readBytes>

    *ax = (((int16_t)buffer[0]) << 8) | buffer[1];
    10c0:	ec e3       	ldi	r30, 0x3C	; 60
    10c2:	f5 e0       	ldi	r31, 0x05	; 5
    10c4:	20 81       	ld	r18, Z
    10c6:	81 81       	ldd	r24, Z+1	; 0x01
    10c8:	90 e0       	ldi	r25, 0x00	; 0
    10ca:	92 2b       	or	r25, r18
    10cc:	d7 01       	movw	r26, r14
    10ce:	8d 93       	st	X+, r24
    10d0:	9c 93       	st	X, r25
    *ay = (((int16_t)buffer[2]) << 8) | buffer[3];
    10d2:	22 81       	ldd	r18, Z+2	; 0x02
    10d4:	83 81       	ldd	r24, Z+3	; 0x03
    10d6:	90 e0       	ldi	r25, 0x00	; 0
    10d8:	92 2b       	or	r25, r18
    10da:	d8 01       	movw	r26, r16
    10dc:	8d 93       	st	X+, r24
    10de:	9c 93       	st	X, r25
    *az = (((int16_t)buffer[4]) << 8) | buffer[5];
    10e0:	24 81       	ldd	r18, Z+4	; 0x04
    10e2:	85 81       	ldd	r24, Z+5	; 0x05
    10e4:	90 e0       	ldi	r25, 0x00	; 0
    10e6:	92 2b       	or	r25, r18
    10e8:	99 83       	std	Y+1, r25	; 0x01
    10ea:	88 83       	st	Y, r24
}
    10ec:	df 91       	pop	r29
    10ee:	cf 91       	pop	r28
    10f0:	1f 91       	pop	r17
    10f2:	0f 91       	pop	r16
    10f4:	ff 90       	pop	r15
    10f6:	ef 90       	pop	r14
    10f8:	08 95       	ret

000010fa <mpu6050_getConvAccelData>:

/*
 * get raw accel data  converted to g and deg/sec values
 */
void mpu6050_getConvAccelData(double* axg, double* ayg, double* azg) {
    10fa:	cf 92       	push	r12
    10fc:	df 92       	push	r13
    10fe:	ef 92       	push	r14
    1100:	ff 92       	push	r15
    1102:	0f 93       	push	r16
    1104:	1f 93       	push	r17
    1106:	cf 93       	push	r28
    1108:	df 93       	push	r29
    110a:	00 d0       	rcall	.+0      	; 0x110c <mpu6050_getConvAccelData+0x12>
    110c:	00 d0       	rcall	.+0      	; 0x110e <mpu6050_getConvAccelData+0x14>
    110e:	00 d0       	rcall	.+0      	; 0x1110 <mpu6050_getConvAccelData+0x16>
    1110:	cd b7       	in	r28, 0x3d	; 61
    1112:	de b7       	in	r29, 0x3e	; 62
    1114:	6c 01       	movw	r12, r24
    1116:	7b 01       	movw	r14, r22
    1118:	8a 01       	movw	r16, r20
	int16_t ax = 0;
    111a:	1a 82       	std	Y+2, r1	; 0x02
    111c:	19 82       	std	Y+1, r1	; 0x01
	int16_t ay = 0;
    111e:	1c 82       	std	Y+4, r1	; 0x04
    1120:	1b 82       	std	Y+3, r1	; 0x03
	int16_t az = 0;
    1122:	1e 82       	std	Y+6, r1	; 0x06
    1124:	1d 82       	std	Y+5, r1	; 0x05
	
	mpu6050_getRawAccelData(&ax, &ay, &az);
    1126:	ae 01       	movw	r20, r28
    1128:	4b 5f       	subi	r20, 0xFB	; 251
    112a:	5f 4f       	sbci	r21, 0xFF	; 255
    112c:	be 01       	movw	r22, r28
    112e:	6d 5f       	subi	r22, 0xFD	; 253
    1130:	7f 4f       	sbci	r23, 0xFF	; 255
    1132:	ce 01       	movw	r24, r28
    1134:	01 96       	adiw	r24, 0x01	; 1
    1136:	0e 94 51 08 	call	0x10a2	; 0x10a2 <mpu6050_getRawAccelData>

	#if MPU6050_CALIBRATEDACCGYRO == 1
    *axg = (double)(ax-MPU6050_AXOFFSET)/MPU6050_AXGAIN;
    113a:	69 81       	ldd	r22, Y+1	; 0x01
    113c:	7a 81       	ldd	r23, Y+2	; 0x02
    113e:	07 2e       	mov	r0, r23
    1140:	00 0c       	add	r0, r0
    1142:	88 0b       	sbc	r24, r24
    1144:	99 0b       	sbc	r25, r25
    1146:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__floatsisf>
    114a:	2a e0       	ldi	r18, 0x0A	; 10
    114c:	37 ed       	ldi	r19, 0xD7	; 215
    114e:	43 ea       	ldi	r20, 0xA3	; 163
    1150:	5c e3       	ldi	r21, 0x3C	; 60
    1152:	0e 94 f7 08 	call	0x11ee	; 0x11ee <__subsf3>
    1156:	20 e0       	ldi	r18, 0x00	; 0
    1158:	30 e0       	ldi	r19, 0x00	; 0
    115a:	40 e8       	ldi	r20, 0x80	; 128
    115c:	58 e3       	ldi	r21, 0x38	; 56
    115e:	0e 94 20 0a 	call	0x1440	; 0x1440 <__mulsf3>
    1162:	f6 01       	movw	r30, r12
    1164:	60 83       	st	Z, r22
    1166:	71 83       	std	Z+1, r23	; 0x01
    1168:	82 83       	std	Z+2, r24	; 0x02
    116a:	93 83       	std	Z+3, r25	; 0x03
    *ayg = (double)(ay-MPU6050_AYOFFSET)/MPU6050_AYGAIN;
    116c:	6b 81       	ldd	r22, Y+3	; 0x03
    116e:	7c 81       	ldd	r23, Y+4	; 0x04
    1170:	07 2e       	mov	r0, r23
    1172:	00 0c       	add	r0, r0
    1174:	88 0b       	sbc	r24, r24
    1176:	99 0b       	sbc	r25, r25
    1178:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__floatsisf>
    117c:	2d ec       	ldi	r18, 0xCD	; 205
    117e:	3c ec       	ldi	r19, 0xCC	; 204
    1180:	4c e4       	ldi	r20, 0x4C	; 76
    1182:	5d e3       	ldi	r21, 0x3D	; 61
    1184:	0e 94 f7 08 	call	0x11ee	; 0x11ee <__subsf3>
    1188:	20 e0       	ldi	r18, 0x00	; 0
    118a:	30 e0       	ldi	r19, 0x00	; 0
    118c:	40 e8       	ldi	r20, 0x80	; 128
    118e:	58 e3       	ldi	r21, 0x38	; 56
    1190:	0e 94 20 0a 	call	0x1440	; 0x1440 <__mulsf3>
    1194:	f7 01       	movw	r30, r14
    1196:	60 83       	st	Z, r22
    1198:	71 83       	std	Z+1, r23	; 0x01
    119a:	82 83       	std	Z+2, r24	; 0x02
    119c:	93 83       	std	Z+3, r25	; 0x03
    *azg = (double)(az-MPU6050_AZOFFSET)/MPU6050_AZGAIN;
    119e:	6d 81       	ldd	r22, Y+5	; 0x05
    11a0:	7e 81       	ldd	r23, Y+6	; 0x06
    11a2:	07 2e       	mov	r0, r23
    11a4:	00 0c       	add	r0, r0
    11a6:	88 0b       	sbc	r24, r24
    11a8:	99 0b       	sbc	r25, r25
    11aa:	0e 94 6b 09 	call	0x12d6	; 0x12d6 <__floatsisf>
    11ae:	2d ec       	ldi	r18, 0xCD	; 205
    11b0:	3c ec       	ldi	r19, 0xCC	; 204
    11b2:	4c e4       	ldi	r20, 0x4C	; 76
    11b4:	5e e3       	ldi	r21, 0x3E	; 62
    11b6:	0e 94 f8 08 	call	0x11f0	; 0x11f0 <__addsf3>
    11ba:	20 e0       	ldi	r18, 0x00	; 0
    11bc:	30 e0       	ldi	r19, 0x00	; 0
    11be:	40 e8       	ldi	r20, 0x80	; 128
    11c0:	58 e3       	ldi	r21, 0x38	; 56
    11c2:	0e 94 20 0a 	call	0x1440	; 0x1440 <__mulsf3>
    11c6:	f8 01       	movw	r30, r16
    11c8:	60 83       	st	Z, r22
    11ca:	71 83       	std	Z+1, r23	; 0x01
    11cc:	82 83       	std	Z+2, r24	; 0x02
    11ce:	93 83       	std	Z+3, r25	; 0x03
	#else
    *axg = (double)(ax)/MPU6050_AGAIN;
    *ayg = (double)(ay)/MPU6050_AGAIN;
    *azg = (double)(az)/MPU6050_AGAIN;
 	#endif
}
    11d0:	26 96       	adiw	r28, 0x06	; 6
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	f8 94       	cli
    11d6:	de bf       	out	0x3e, r29	; 62
    11d8:	0f be       	out	0x3f, r0	; 63
    11da:	cd bf       	out	0x3d, r28	; 61
    11dc:	df 91       	pop	r29
    11de:	cf 91       	pop	r28
    11e0:	1f 91       	pop	r17
    11e2:	0f 91       	pop	r16
    11e4:	ff 90       	pop	r15
    11e6:	ef 90       	pop	r14
    11e8:	df 90       	pop	r13
    11ea:	cf 90       	pop	r12
    11ec:	08 95       	ret

000011ee <__subsf3>:
    11ee:	50 58       	subi	r21, 0x80	; 128

000011f0 <__addsf3>:
    11f0:	bb 27       	eor	r27, r27
    11f2:	aa 27       	eor	r26, r26
    11f4:	0e 94 0f 09 	call	0x121e	; 0x121e <__addsf3x>
    11f8:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__fp_round>
    11fc:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fp_pscA>
    1200:	38 f0       	brcs	.+14     	; 0x1210 <__addsf3+0x20>
    1202:	0e 94 da 09 	call	0x13b4	; 0x13b4 <__fp_pscB>
    1206:	20 f0       	brcs	.+8      	; 0x1210 <__addsf3+0x20>
    1208:	39 f4       	brne	.+14     	; 0x1218 <__addsf3+0x28>
    120a:	9f 3f       	cpi	r25, 0xFF	; 255
    120c:	19 f4       	brne	.+6      	; 0x1214 <__addsf3+0x24>
    120e:	26 f4       	brtc	.+8      	; 0x1218 <__addsf3+0x28>
    1210:	0c 94 d0 09 	jmp	0x13a0	; 0x13a0 <__fp_nan>
    1214:	0e f4       	brtc	.+2      	; 0x1218 <__addsf3+0x28>
    1216:	e0 95       	com	r30
    1218:	e7 fb       	bst	r30, 7
    121a:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__fp_inf>

0000121e <__addsf3x>:
    121e:	e9 2f       	mov	r30, r25
    1220:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__fp_split3>
    1224:	58 f3       	brcs	.-42     	; 0x11fc <__addsf3+0xc>
    1226:	ba 17       	cp	r27, r26
    1228:	62 07       	cpc	r22, r18
    122a:	73 07       	cpc	r23, r19
    122c:	84 07       	cpc	r24, r20
    122e:	95 07       	cpc	r25, r21
    1230:	20 f0       	brcs	.+8      	; 0x123a <__addsf3x+0x1c>
    1232:	79 f4       	brne	.+30     	; 0x1252 <__addsf3x+0x34>
    1234:	a6 f5       	brtc	.+104    	; 0x129e <__addsf3x+0x80>
    1236:	0c 94 14 0a 	jmp	0x1428	; 0x1428 <__fp_zero>
    123a:	0e f4       	brtc	.+2      	; 0x123e <__addsf3x+0x20>
    123c:	e0 95       	com	r30
    123e:	0b 2e       	mov	r0, r27
    1240:	ba 2f       	mov	r27, r26
    1242:	a0 2d       	mov	r26, r0
    1244:	0b 01       	movw	r0, r22
    1246:	b9 01       	movw	r22, r18
    1248:	90 01       	movw	r18, r0
    124a:	0c 01       	movw	r0, r24
    124c:	ca 01       	movw	r24, r20
    124e:	a0 01       	movw	r20, r0
    1250:	11 24       	eor	r1, r1
    1252:	ff 27       	eor	r31, r31
    1254:	59 1b       	sub	r21, r25
    1256:	99 f0       	breq	.+38     	; 0x127e <__addsf3x+0x60>
    1258:	59 3f       	cpi	r21, 0xF9	; 249
    125a:	50 f4       	brcc	.+20     	; 0x1270 <__addsf3x+0x52>
    125c:	50 3e       	cpi	r21, 0xE0	; 224
    125e:	68 f1       	brcs	.+90     	; 0x12ba <__addsf3x+0x9c>
    1260:	1a 16       	cp	r1, r26
    1262:	f0 40       	sbci	r31, 0x00	; 0
    1264:	a2 2f       	mov	r26, r18
    1266:	23 2f       	mov	r18, r19
    1268:	34 2f       	mov	r19, r20
    126a:	44 27       	eor	r20, r20
    126c:	58 5f       	subi	r21, 0xF8	; 248
    126e:	f3 cf       	rjmp	.-26     	; 0x1256 <__addsf3x+0x38>
    1270:	46 95       	lsr	r20
    1272:	37 95       	ror	r19
    1274:	27 95       	ror	r18
    1276:	a7 95       	ror	r26
    1278:	f0 40       	sbci	r31, 0x00	; 0
    127a:	53 95       	inc	r21
    127c:	c9 f7       	brne	.-14     	; 0x1270 <__addsf3x+0x52>
    127e:	7e f4       	brtc	.+30     	; 0x129e <__addsf3x+0x80>
    1280:	1f 16       	cp	r1, r31
    1282:	ba 0b       	sbc	r27, r26
    1284:	62 0b       	sbc	r22, r18
    1286:	73 0b       	sbc	r23, r19
    1288:	84 0b       	sbc	r24, r20
    128a:	ba f0       	brmi	.+46     	; 0x12ba <__addsf3x+0x9c>
    128c:	91 50       	subi	r25, 0x01	; 1
    128e:	a1 f0       	breq	.+40     	; 0x12b8 <__addsf3x+0x9a>
    1290:	ff 0f       	add	r31, r31
    1292:	bb 1f       	adc	r27, r27
    1294:	66 1f       	adc	r22, r22
    1296:	77 1f       	adc	r23, r23
    1298:	88 1f       	adc	r24, r24
    129a:	c2 f7       	brpl	.-16     	; 0x128c <__addsf3x+0x6e>
    129c:	0e c0       	rjmp	.+28     	; 0x12ba <__addsf3x+0x9c>
    129e:	ba 0f       	add	r27, r26
    12a0:	62 1f       	adc	r22, r18
    12a2:	73 1f       	adc	r23, r19
    12a4:	84 1f       	adc	r24, r20
    12a6:	48 f4       	brcc	.+18     	; 0x12ba <__addsf3x+0x9c>
    12a8:	87 95       	ror	r24
    12aa:	77 95       	ror	r23
    12ac:	67 95       	ror	r22
    12ae:	b7 95       	ror	r27
    12b0:	f7 95       	ror	r31
    12b2:	9e 3f       	cpi	r25, 0xFE	; 254
    12b4:	08 f0       	brcs	.+2      	; 0x12b8 <__addsf3x+0x9a>
    12b6:	b0 cf       	rjmp	.-160    	; 0x1218 <__addsf3+0x28>
    12b8:	93 95       	inc	r25
    12ba:	88 0f       	add	r24, r24
    12bc:	08 f0       	brcs	.+2      	; 0x12c0 <__addsf3x+0xa2>
    12be:	99 27       	eor	r25, r25
    12c0:	ee 0f       	add	r30, r30
    12c2:	97 95       	ror	r25
    12c4:	87 95       	ror	r24
    12c6:	08 95       	ret

000012c8 <__cmpsf2>:
    12c8:	0e 94 a6 09 	call	0x134c	; 0x134c <__fp_cmp>
    12cc:	08 f4       	brcc	.+2      	; 0x12d0 <__cmpsf2+0x8>
    12ce:	81 e0       	ldi	r24, 0x01	; 1
    12d0:	08 95       	ret

000012d2 <__floatunsisf>:
    12d2:	e8 94       	clt
    12d4:	09 c0       	rjmp	.+18     	; 0x12e8 <__floatsisf+0x12>

000012d6 <__floatsisf>:
    12d6:	97 fb       	bst	r25, 7
    12d8:	3e f4       	brtc	.+14     	; 0x12e8 <__floatsisf+0x12>
    12da:	90 95       	com	r25
    12dc:	80 95       	com	r24
    12de:	70 95       	com	r23
    12e0:	61 95       	neg	r22
    12e2:	7f 4f       	sbci	r23, 0xFF	; 255
    12e4:	8f 4f       	sbci	r24, 0xFF	; 255
    12e6:	9f 4f       	sbci	r25, 0xFF	; 255
    12e8:	99 23       	and	r25, r25
    12ea:	a9 f0       	breq	.+42     	; 0x1316 <__floatsisf+0x40>
    12ec:	f9 2f       	mov	r31, r25
    12ee:	96 e9       	ldi	r25, 0x96	; 150
    12f0:	bb 27       	eor	r27, r27
    12f2:	93 95       	inc	r25
    12f4:	f6 95       	lsr	r31
    12f6:	87 95       	ror	r24
    12f8:	77 95       	ror	r23
    12fa:	67 95       	ror	r22
    12fc:	b7 95       	ror	r27
    12fe:	f1 11       	cpse	r31, r1
    1300:	f8 cf       	rjmp	.-16     	; 0x12f2 <__floatsisf+0x1c>
    1302:	fa f4       	brpl	.+62     	; 0x1342 <__floatsisf+0x6c>
    1304:	bb 0f       	add	r27, r27
    1306:	11 f4       	brne	.+4      	; 0x130c <__floatsisf+0x36>
    1308:	60 ff       	sbrs	r22, 0
    130a:	1b c0       	rjmp	.+54     	; 0x1342 <__floatsisf+0x6c>
    130c:	6f 5f       	subi	r22, 0xFF	; 255
    130e:	7f 4f       	sbci	r23, 0xFF	; 255
    1310:	8f 4f       	sbci	r24, 0xFF	; 255
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	16 c0       	rjmp	.+44     	; 0x1342 <__floatsisf+0x6c>
    1316:	88 23       	and	r24, r24
    1318:	11 f0       	breq	.+4      	; 0x131e <__floatsisf+0x48>
    131a:	96 e9       	ldi	r25, 0x96	; 150
    131c:	11 c0       	rjmp	.+34     	; 0x1340 <__floatsisf+0x6a>
    131e:	77 23       	and	r23, r23
    1320:	21 f0       	breq	.+8      	; 0x132a <__floatsisf+0x54>
    1322:	9e e8       	ldi	r25, 0x8E	; 142
    1324:	87 2f       	mov	r24, r23
    1326:	76 2f       	mov	r23, r22
    1328:	05 c0       	rjmp	.+10     	; 0x1334 <__floatsisf+0x5e>
    132a:	66 23       	and	r22, r22
    132c:	71 f0       	breq	.+28     	; 0x134a <__floatsisf+0x74>
    132e:	96 e8       	ldi	r25, 0x86	; 134
    1330:	86 2f       	mov	r24, r22
    1332:	70 e0       	ldi	r23, 0x00	; 0
    1334:	60 e0       	ldi	r22, 0x00	; 0
    1336:	2a f0       	brmi	.+10     	; 0x1342 <__floatsisf+0x6c>
    1338:	9a 95       	dec	r25
    133a:	66 0f       	add	r22, r22
    133c:	77 1f       	adc	r23, r23
    133e:	88 1f       	adc	r24, r24
    1340:	da f7       	brpl	.-10     	; 0x1338 <__floatsisf+0x62>
    1342:	88 0f       	add	r24, r24
    1344:	96 95       	lsr	r25
    1346:	87 95       	ror	r24
    1348:	97 f9       	bld	r25, 7
    134a:	08 95       	ret

0000134c <__fp_cmp>:
    134c:	99 0f       	add	r25, r25
    134e:	00 08       	sbc	r0, r0
    1350:	55 0f       	add	r21, r21
    1352:	aa 0b       	sbc	r26, r26
    1354:	e0 e8       	ldi	r30, 0x80	; 128
    1356:	fe ef       	ldi	r31, 0xFE	; 254
    1358:	16 16       	cp	r1, r22
    135a:	17 06       	cpc	r1, r23
    135c:	e8 07       	cpc	r30, r24
    135e:	f9 07       	cpc	r31, r25
    1360:	c0 f0       	brcs	.+48     	; 0x1392 <__fp_cmp+0x46>
    1362:	12 16       	cp	r1, r18
    1364:	13 06       	cpc	r1, r19
    1366:	e4 07       	cpc	r30, r20
    1368:	f5 07       	cpc	r31, r21
    136a:	98 f0       	brcs	.+38     	; 0x1392 <__fp_cmp+0x46>
    136c:	62 1b       	sub	r22, r18
    136e:	73 0b       	sbc	r23, r19
    1370:	84 0b       	sbc	r24, r20
    1372:	95 0b       	sbc	r25, r21
    1374:	39 f4       	brne	.+14     	; 0x1384 <__fp_cmp+0x38>
    1376:	0a 26       	eor	r0, r26
    1378:	61 f0       	breq	.+24     	; 0x1392 <__fp_cmp+0x46>
    137a:	23 2b       	or	r18, r19
    137c:	24 2b       	or	r18, r20
    137e:	25 2b       	or	r18, r21
    1380:	21 f4       	brne	.+8      	; 0x138a <__fp_cmp+0x3e>
    1382:	08 95       	ret
    1384:	0a 26       	eor	r0, r26
    1386:	09 f4       	brne	.+2      	; 0x138a <__fp_cmp+0x3e>
    1388:	a1 40       	sbci	r26, 0x01	; 1
    138a:	a6 95       	lsr	r26
    138c:	8f ef       	ldi	r24, 0xFF	; 255
    138e:	81 1d       	adc	r24, r1
    1390:	81 1d       	adc	r24, r1
    1392:	08 95       	ret

00001394 <__fp_inf>:
    1394:	97 f9       	bld	r25, 7
    1396:	9f 67       	ori	r25, 0x7F	; 127
    1398:	80 e8       	ldi	r24, 0x80	; 128
    139a:	70 e0       	ldi	r23, 0x00	; 0
    139c:	60 e0       	ldi	r22, 0x00	; 0
    139e:	08 95       	ret

000013a0 <__fp_nan>:
    13a0:	9f ef       	ldi	r25, 0xFF	; 255
    13a2:	80 ec       	ldi	r24, 0xC0	; 192
    13a4:	08 95       	ret

000013a6 <__fp_pscA>:
    13a6:	00 24       	eor	r0, r0
    13a8:	0a 94       	dec	r0
    13aa:	16 16       	cp	r1, r22
    13ac:	17 06       	cpc	r1, r23
    13ae:	18 06       	cpc	r1, r24
    13b0:	09 06       	cpc	r0, r25
    13b2:	08 95       	ret

000013b4 <__fp_pscB>:
    13b4:	00 24       	eor	r0, r0
    13b6:	0a 94       	dec	r0
    13b8:	12 16       	cp	r1, r18
    13ba:	13 06       	cpc	r1, r19
    13bc:	14 06       	cpc	r1, r20
    13be:	05 06       	cpc	r0, r21
    13c0:	08 95       	ret

000013c2 <__fp_round>:
    13c2:	09 2e       	mov	r0, r25
    13c4:	03 94       	inc	r0
    13c6:	00 0c       	add	r0, r0
    13c8:	11 f4       	brne	.+4      	; 0x13ce <__fp_round+0xc>
    13ca:	88 23       	and	r24, r24
    13cc:	52 f0       	brmi	.+20     	; 0x13e2 <__fp_round+0x20>
    13ce:	bb 0f       	add	r27, r27
    13d0:	40 f4       	brcc	.+16     	; 0x13e2 <__fp_round+0x20>
    13d2:	bf 2b       	or	r27, r31
    13d4:	11 f4       	brne	.+4      	; 0x13da <__fp_round+0x18>
    13d6:	60 ff       	sbrs	r22, 0
    13d8:	04 c0       	rjmp	.+8      	; 0x13e2 <__fp_round+0x20>
    13da:	6f 5f       	subi	r22, 0xFF	; 255
    13dc:	7f 4f       	sbci	r23, 0xFF	; 255
    13de:	8f 4f       	sbci	r24, 0xFF	; 255
    13e0:	9f 4f       	sbci	r25, 0xFF	; 255
    13e2:	08 95       	ret

000013e4 <__fp_split3>:
    13e4:	57 fd       	sbrc	r21, 7
    13e6:	90 58       	subi	r25, 0x80	; 128
    13e8:	44 0f       	add	r20, r20
    13ea:	55 1f       	adc	r21, r21
    13ec:	59 f0       	breq	.+22     	; 0x1404 <__fp_splitA+0x10>
    13ee:	5f 3f       	cpi	r21, 0xFF	; 255
    13f0:	71 f0       	breq	.+28     	; 0x140e <__fp_splitA+0x1a>
    13f2:	47 95       	ror	r20

000013f4 <__fp_splitA>:
    13f4:	88 0f       	add	r24, r24
    13f6:	97 fb       	bst	r25, 7
    13f8:	99 1f       	adc	r25, r25
    13fa:	61 f0       	breq	.+24     	; 0x1414 <__fp_splitA+0x20>
    13fc:	9f 3f       	cpi	r25, 0xFF	; 255
    13fe:	79 f0       	breq	.+30     	; 0x141e <__fp_splitA+0x2a>
    1400:	87 95       	ror	r24
    1402:	08 95       	ret
    1404:	12 16       	cp	r1, r18
    1406:	13 06       	cpc	r1, r19
    1408:	14 06       	cpc	r1, r20
    140a:	55 1f       	adc	r21, r21
    140c:	f2 cf       	rjmp	.-28     	; 0x13f2 <__fp_split3+0xe>
    140e:	46 95       	lsr	r20
    1410:	f1 df       	rcall	.-30     	; 0x13f4 <__fp_splitA>
    1412:	08 c0       	rjmp	.+16     	; 0x1424 <__fp_splitA+0x30>
    1414:	16 16       	cp	r1, r22
    1416:	17 06       	cpc	r1, r23
    1418:	18 06       	cpc	r1, r24
    141a:	99 1f       	adc	r25, r25
    141c:	f1 cf       	rjmp	.-30     	; 0x1400 <__fp_splitA+0xc>
    141e:	86 95       	lsr	r24
    1420:	71 05       	cpc	r23, r1
    1422:	61 05       	cpc	r22, r1
    1424:	08 94       	sec
    1426:	08 95       	ret

00001428 <__fp_zero>:
    1428:	e8 94       	clt

0000142a <__fp_szero>:
    142a:	bb 27       	eor	r27, r27
    142c:	66 27       	eor	r22, r22
    142e:	77 27       	eor	r23, r23
    1430:	cb 01       	movw	r24, r22
    1432:	97 f9       	bld	r25, 7
    1434:	08 95       	ret

00001436 <__gesf2>:
    1436:	0e 94 a6 09 	call	0x134c	; 0x134c <__fp_cmp>
    143a:	08 f4       	brcc	.+2      	; 0x143e <__gesf2+0x8>
    143c:	8f ef       	ldi	r24, 0xFF	; 255
    143e:	08 95       	ret

00001440 <__mulsf3>:
    1440:	0e 94 33 0a 	call	0x1466	; 0x1466 <__mulsf3x>
    1444:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__fp_round>
    1448:	0e 94 d3 09 	call	0x13a6	; 0x13a6 <__fp_pscA>
    144c:	38 f0       	brcs	.+14     	; 0x145c <__mulsf3+0x1c>
    144e:	0e 94 da 09 	call	0x13b4	; 0x13b4 <__fp_pscB>
    1452:	20 f0       	brcs	.+8      	; 0x145c <__mulsf3+0x1c>
    1454:	95 23       	and	r25, r21
    1456:	11 f0       	breq	.+4      	; 0x145c <__mulsf3+0x1c>
    1458:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__fp_inf>
    145c:	0c 94 d0 09 	jmp	0x13a0	; 0x13a0 <__fp_nan>
    1460:	11 24       	eor	r1, r1
    1462:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__fp_szero>

00001466 <__mulsf3x>:
    1466:	0e 94 f2 09 	call	0x13e4	; 0x13e4 <__fp_split3>
    146a:	70 f3       	brcs	.-36     	; 0x1448 <__mulsf3+0x8>

0000146c <__mulsf3_pse>:
    146c:	95 9f       	mul	r25, r21
    146e:	c1 f3       	breq	.-16     	; 0x1460 <__mulsf3+0x20>
    1470:	95 0f       	add	r25, r21
    1472:	50 e0       	ldi	r21, 0x00	; 0
    1474:	55 1f       	adc	r21, r21
    1476:	62 9f       	mul	r22, r18
    1478:	f0 01       	movw	r30, r0
    147a:	72 9f       	mul	r23, r18
    147c:	bb 27       	eor	r27, r27
    147e:	f0 0d       	add	r31, r0
    1480:	b1 1d       	adc	r27, r1
    1482:	63 9f       	mul	r22, r19
    1484:	aa 27       	eor	r26, r26
    1486:	f0 0d       	add	r31, r0
    1488:	b1 1d       	adc	r27, r1
    148a:	aa 1f       	adc	r26, r26
    148c:	64 9f       	mul	r22, r20
    148e:	66 27       	eor	r22, r22
    1490:	b0 0d       	add	r27, r0
    1492:	a1 1d       	adc	r26, r1
    1494:	66 1f       	adc	r22, r22
    1496:	82 9f       	mul	r24, r18
    1498:	22 27       	eor	r18, r18
    149a:	b0 0d       	add	r27, r0
    149c:	a1 1d       	adc	r26, r1
    149e:	62 1f       	adc	r22, r18
    14a0:	73 9f       	mul	r23, r19
    14a2:	b0 0d       	add	r27, r0
    14a4:	a1 1d       	adc	r26, r1
    14a6:	62 1f       	adc	r22, r18
    14a8:	83 9f       	mul	r24, r19
    14aa:	a0 0d       	add	r26, r0
    14ac:	61 1d       	adc	r22, r1
    14ae:	22 1f       	adc	r18, r18
    14b0:	74 9f       	mul	r23, r20
    14b2:	33 27       	eor	r19, r19
    14b4:	a0 0d       	add	r26, r0
    14b6:	61 1d       	adc	r22, r1
    14b8:	23 1f       	adc	r18, r19
    14ba:	84 9f       	mul	r24, r20
    14bc:	60 0d       	add	r22, r0
    14be:	21 1d       	adc	r18, r1
    14c0:	82 2f       	mov	r24, r18
    14c2:	76 2f       	mov	r23, r22
    14c4:	6a 2f       	mov	r22, r26
    14c6:	11 24       	eor	r1, r1
    14c8:	9f 57       	subi	r25, 0x7F	; 127
    14ca:	50 40       	sbci	r21, 0x00	; 0
    14cc:	9a f0       	brmi	.+38     	; 0x14f4 <__mulsf3_pse+0x88>
    14ce:	f1 f0       	breq	.+60     	; 0x150c <__mulsf3_pse+0xa0>
    14d0:	88 23       	and	r24, r24
    14d2:	4a f0       	brmi	.+18     	; 0x14e6 <__mulsf3_pse+0x7a>
    14d4:	ee 0f       	add	r30, r30
    14d6:	ff 1f       	adc	r31, r31
    14d8:	bb 1f       	adc	r27, r27
    14da:	66 1f       	adc	r22, r22
    14dc:	77 1f       	adc	r23, r23
    14de:	88 1f       	adc	r24, r24
    14e0:	91 50       	subi	r25, 0x01	; 1
    14e2:	50 40       	sbci	r21, 0x00	; 0
    14e4:	a9 f7       	brne	.-22     	; 0x14d0 <__mulsf3_pse+0x64>
    14e6:	9e 3f       	cpi	r25, 0xFE	; 254
    14e8:	51 05       	cpc	r21, r1
    14ea:	80 f0       	brcs	.+32     	; 0x150c <__mulsf3_pse+0xa0>
    14ec:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__fp_inf>
    14f0:	0c 94 15 0a 	jmp	0x142a	; 0x142a <__fp_szero>
    14f4:	5f 3f       	cpi	r21, 0xFF	; 255
    14f6:	e4 f3       	brlt	.-8      	; 0x14f0 <__mulsf3_pse+0x84>
    14f8:	98 3e       	cpi	r25, 0xE8	; 232
    14fa:	d4 f3       	brlt	.-12     	; 0x14f0 <__mulsf3_pse+0x84>
    14fc:	86 95       	lsr	r24
    14fe:	77 95       	ror	r23
    1500:	67 95       	ror	r22
    1502:	b7 95       	ror	r27
    1504:	f7 95       	ror	r31
    1506:	e7 95       	ror	r30
    1508:	9f 5f       	subi	r25, 0xFF	; 255
    150a:	c1 f7       	brne	.-16     	; 0x14fc <__mulsf3_pse+0x90>
    150c:	fe 2b       	or	r31, r30
    150e:	88 0f       	add	r24, r24
    1510:	91 1d       	adc	r25, r1
    1512:	96 95       	lsr	r25
    1514:	87 95       	ror	r24
    1516:	97 f9       	bld	r25, 7
    1518:	08 95       	ret

0000151a <dtostrf>:
    151a:	ef 92       	push	r14
    151c:	0f 93       	push	r16
    151e:	1f 93       	push	r17
    1520:	cf 93       	push	r28
    1522:	df 93       	push	r29
    1524:	e8 01       	movw	r28, r16
    1526:	47 fd       	sbrc	r20, 7
    1528:	02 c0       	rjmp	.+4      	; 0x152e <dtostrf+0x14>
    152a:	34 e0       	ldi	r19, 0x04	; 4
    152c:	01 c0       	rjmp	.+2      	; 0x1530 <dtostrf+0x16>
    152e:	34 e1       	ldi	r19, 0x14	; 20
    1530:	04 2e       	mov	r0, r20
    1532:	00 0c       	add	r0, r0
    1534:	55 0b       	sbc	r21, r21
    1536:	57 ff       	sbrs	r21, 7
    1538:	03 c0       	rjmp	.+6      	; 0x1540 <dtostrf+0x26>
    153a:	51 95       	neg	r21
    153c:	41 95       	neg	r20
    153e:	51 09       	sbc	r21, r1
    1540:	e3 2e       	mov	r14, r19
    1542:	02 2f       	mov	r16, r18
    1544:	24 2f       	mov	r18, r20
    1546:	ae 01       	movw	r20, r28
    1548:	0e 94 ad 0a 	call	0x155a	; 0x155a <dtoa_prf>
    154c:	ce 01       	movw	r24, r28
    154e:	df 91       	pop	r29
    1550:	cf 91       	pop	r28
    1552:	1f 91       	pop	r17
    1554:	0f 91       	pop	r16
    1556:	ef 90       	pop	r14
    1558:	08 95       	ret

0000155a <dtoa_prf>:
    155a:	a9 e0       	ldi	r26, 0x09	; 9
    155c:	b0 e0       	ldi	r27, 0x00	; 0
    155e:	e3 eb       	ldi	r30, 0xB3	; 179
    1560:	fa e0       	ldi	r31, 0x0A	; 10
    1562:	0c 94 e5 0c 	jmp	0x19ca	; 0x19ca <__prologue_saves__+0xc>
    1566:	6a 01       	movw	r12, r20
    1568:	12 2f       	mov	r17, r18
    156a:	b0 2e       	mov	r11, r16
    156c:	2b e3       	ldi	r18, 0x3B	; 59
    156e:	20 17       	cp	r18, r16
    1570:	20 f0       	brcs	.+8      	; 0x157a <dtoa_prf+0x20>
    1572:	ff 24       	eor	r15, r15
    1574:	f3 94       	inc	r15
    1576:	f0 0e       	add	r15, r16
    1578:	02 c0       	rjmp	.+4      	; 0x157e <dtoa_prf+0x24>
    157a:	2c e3       	ldi	r18, 0x3C	; 60
    157c:	f2 2e       	mov	r15, r18
    157e:	0f 2d       	mov	r16, r15
    1580:	27 e0       	ldi	r18, 0x07	; 7
    1582:	ae 01       	movw	r20, r28
    1584:	4f 5f       	subi	r20, 0xFF	; 255
    1586:	5f 4f       	sbci	r21, 0xFF	; 255
    1588:	0e 94 07 0c 	call	0x180e	; 0x180e <__ftoa_engine>
    158c:	bc 01       	movw	r22, r24
    158e:	49 81       	ldd	r20, Y+1	; 0x01
    1590:	84 2f       	mov	r24, r20
    1592:	89 70       	andi	r24, 0x09	; 9
    1594:	81 30       	cpi	r24, 0x01	; 1
    1596:	31 f0       	breq	.+12     	; 0x15a4 <dtoa_prf+0x4a>
    1598:	e1 fc       	sbrc	r14, 1
    159a:	06 c0       	rjmp	.+12     	; 0x15a8 <dtoa_prf+0x4e>
    159c:	e0 fe       	sbrs	r14, 0
    159e:	06 c0       	rjmp	.+12     	; 0x15ac <dtoa_prf+0x52>
    15a0:	90 e2       	ldi	r25, 0x20	; 32
    15a2:	05 c0       	rjmp	.+10     	; 0x15ae <dtoa_prf+0x54>
    15a4:	9d e2       	ldi	r25, 0x2D	; 45
    15a6:	03 c0       	rjmp	.+6      	; 0x15ae <dtoa_prf+0x54>
    15a8:	9b e2       	ldi	r25, 0x2B	; 43
    15aa:	01 c0       	rjmp	.+2      	; 0x15ae <dtoa_prf+0x54>
    15ac:	90 e0       	ldi	r25, 0x00	; 0
    15ae:	5e 2d       	mov	r21, r14
    15b0:	50 71       	andi	r21, 0x10	; 16
    15b2:	43 ff       	sbrs	r20, 3
    15b4:	3c c0       	rjmp	.+120    	; 0x162e <dtoa_prf+0xd4>
    15b6:	91 11       	cpse	r25, r1
    15b8:	02 c0       	rjmp	.+4      	; 0x15be <dtoa_prf+0x64>
    15ba:	83 e0       	ldi	r24, 0x03	; 3
    15bc:	01 c0       	rjmp	.+2      	; 0x15c0 <dtoa_prf+0x66>
    15be:	84 e0       	ldi	r24, 0x04	; 4
    15c0:	81 17       	cp	r24, r17
    15c2:	18 f4       	brcc	.+6      	; 0x15ca <dtoa_prf+0x70>
    15c4:	21 2f       	mov	r18, r17
    15c6:	28 1b       	sub	r18, r24
    15c8:	01 c0       	rjmp	.+2      	; 0x15cc <dtoa_prf+0x72>
    15ca:	20 e0       	ldi	r18, 0x00	; 0
    15cc:	51 11       	cpse	r21, r1
    15ce:	0b c0       	rjmp	.+22     	; 0x15e6 <dtoa_prf+0x8c>
    15d0:	f6 01       	movw	r30, r12
    15d2:	82 2f       	mov	r24, r18
    15d4:	30 e2       	ldi	r19, 0x20	; 32
    15d6:	88 23       	and	r24, r24
    15d8:	19 f0       	breq	.+6      	; 0x15e0 <dtoa_prf+0x86>
    15da:	31 93       	st	Z+, r19
    15dc:	81 50       	subi	r24, 0x01	; 1
    15de:	fb cf       	rjmp	.-10     	; 0x15d6 <dtoa_prf+0x7c>
    15e0:	c2 0e       	add	r12, r18
    15e2:	d1 1c       	adc	r13, r1
    15e4:	20 e0       	ldi	r18, 0x00	; 0
    15e6:	99 23       	and	r25, r25
    15e8:	29 f0       	breq	.+10     	; 0x15f4 <dtoa_prf+0x9a>
    15ea:	d6 01       	movw	r26, r12
    15ec:	9c 93       	st	X, r25
    15ee:	f6 01       	movw	r30, r12
    15f0:	31 96       	adiw	r30, 0x01	; 1
    15f2:	6f 01       	movw	r12, r30
    15f4:	c6 01       	movw	r24, r12
    15f6:	03 96       	adiw	r24, 0x03	; 3
    15f8:	e2 fe       	sbrs	r14, 2
    15fa:	0a c0       	rjmp	.+20     	; 0x1610 <dtoa_prf+0xb6>
    15fc:	3e e4       	ldi	r19, 0x4E	; 78
    15fe:	d6 01       	movw	r26, r12
    1600:	3c 93       	st	X, r19
    1602:	41 e4       	ldi	r20, 0x41	; 65
    1604:	11 96       	adiw	r26, 0x01	; 1
    1606:	4c 93       	st	X, r20
    1608:	11 97       	sbiw	r26, 0x01	; 1
    160a:	12 96       	adiw	r26, 0x02	; 2
    160c:	3c 93       	st	X, r19
    160e:	06 c0       	rjmp	.+12     	; 0x161c <dtoa_prf+0xc2>
    1610:	3e e6       	ldi	r19, 0x6E	; 110
    1612:	f6 01       	movw	r30, r12
    1614:	30 83       	st	Z, r19
    1616:	41 e6       	ldi	r20, 0x61	; 97
    1618:	41 83       	std	Z+1, r20	; 0x01
    161a:	32 83       	std	Z+2, r19	; 0x02
    161c:	fc 01       	movw	r30, r24
    161e:	32 2f       	mov	r19, r18
    1620:	40 e2       	ldi	r20, 0x20	; 32
    1622:	33 23       	and	r19, r19
    1624:	09 f4       	brne	.+2      	; 0x1628 <dtoa_prf+0xce>
    1626:	42 c0       	rjmp	.+132    	; 0x16ac <dtoa_prf+0x152>
    1628:	41 93       	st	Z+, r20
    162a:	31 50       	subi	r19, 0x01	; 1
    162c:	fa cf       	rjmp	.-12     	; 0x1622 <dtoa_prf+0xc8>
    162e:	42 ff       	sbrs	r20, 2
    1630:	44 c0       	rjmp	.+136    	; 0x16ba <dtoa_prf+0x160>
    1632:	91 11       	cpse	r25, r1
    1634:	02 c0       	rjmp	.+4      	; 0x163a <dtoa_prf+0xe0>
    1636:	83 e0       	ldi	r24, 0x03	; 3
    1638:	01 c0       	rjmp	.+2      	; 0x163c <dtoa_prf+0xe2>
    163a:	84 e0       	ldi	r24, 0x04	; 4
    163c:	81 17       	cp	r24, r17
    163e:	18 f4       	brcc	.+6      	; 0x1646 <dtoa_prf+0xec>
    1640:	21 2f       	mov	r18, r17
    1642:	28 1b       	sub	r18, r24
    1644:	01 c0       	rjmp	.+2      	; 0x1648 <dtoa_prf+0xee>
    1646:	20 e0       	ldi	r18, 0x00	; 0
    1648:	51 11       	cpse	r21, r1
    164a:	0b c0       	rjmp	.+22     	; 0x1662 <dtoa_prf+0x108>
    164c:	f6 01       	movw	r30, r12
    164e:	82 2f       	mov	r24, r18
    1650:	30 e2       	ldi	r19, 0x20	; 32
    1652:	88 23       	and	r24, r24
    1654:	19 f0       	breq	.+6      	; 0x165c <dtoa_prf+0x102>
    1656:	31 93       	st	Z+, r19
    1658:	81 50       	subi	r24, 0x01	; 1
    165a:	fb cf       	rjmp	.-10     	; 0x1652 <dtoa_prf+0xf8>
    165c:	c2 0e       	add	r12, r18
    165e:	d1 1c       	adc	r13, r1
    1660:	20 e0       	ldi	r18, 0x00	; 0
    1662:	99 23       	and	r25, r25
    1664:	29 f0       	breq	.+10     	; 0x1670 <dtoa_prf+0x116>
    1666:	d6 01       	movw	r26, r12
    1668:	9c 93       	st	X, r25
    166a:	f6 01       	movw	r30, r12
    166c:	31 96       	adiw	r30, 0x01	; 1
    166e:	6f 01       	movw	r12, r30
    1670:	c6 01       	movw	r24, r12
    1672:	03 96       	adiw	r24, 0x03	; 3
    1674:	e2 fe       	sbrs	r14, 2
    1676:	0b c0       	rjmp	.+22     	; 0x168e <dtoa_prf+0x134>
    1678:	39 e4       	ldi	r19, 0x49	; 73
    167a:	d6 01       	movw	r26, r12
    167c:	3c 93       	st	X, r19
    167e:	3e e4       	ldi	r19, 0x4E	; 78
    1680:	11 96       	adiw	r26, 0x01	; 1
    1682:	3c 93       	st	X, r19
    1684:	11 97       	sbiw	r26, 0x01	; 1
    1686:	36 e4       	ldi	r19, 0x46	; 70
    1688:	12 96       	adiw	r26, 0x02	; 2
    168a:	3c 93       	st	X, r19
    168c:	07 c0       	rjmp	.+14     	; 0x169c <dtoa_prf+0x142>
    168e:	39 e6       	ldi	r19, 0x69	; 105
    1690:	f6 01       	movw	r30, r12
    1692:	30 83       	st	Z, r19
    1694:	3e e6       	ldi	r19, 0x6E	; 110
    1696:	31 83       	std	Z+1, r19	; 0x01
    1698:	36 e6       	ldi	r19, 0x66	; 102
    169a:	32 83       	std	Z+2, r19	; 0x02
    169c:	fc 01       	movw	r30, r24
    169e:	32 2f       	mov	r19, r18
    16a0:	40 e2       	ldi	r20, 0x20	; 32
    16a2:	33 23       	and	r19, r19
    16a4:	19 f0       	breq	.+6      	; 0x16ac <dtoa_prf+0x152>
    16a6:	41 93       	st	Z+, r20
    16a8:	31 50       	subi	r19, 0x01	; 1
    16aa:	fb cf       	rjmp	.-10     	; 0x16a2 <dtoa_prf+0x148>
    16ac:	fc 01       	movw	r30, r24
    16ae:	e2 0f       	add	r30, r18
    16b0:	f1 1d       	adc	r31, r1
    16b2:	10 82       	st	Z, r1
    16b4:	8e ef       	ldi	r24, 0xFE	; 254
    16b6:	9f ef       	ldi	r25, 0xFF	; 255
    16b8:	a6 c0       	rjmp	.+332    	; 0x1806 <dtoa_prf+0x2ac>
    16ba:	21 e0       	ldi	r18, 0x01	; 1
    16bc:	30 e0       	ldi	r19, 0x00	; 0
    16be:	91 11       	cpse	r25, r1
    16c0:	02 c0       	rjmp	.+4      	; 0x16c6 <dtoa_prf+0x16c>
    16c2:	20 e0       	ldi	r18, 0x00	; 0
    16c4:	30 e0       	ldi	r19, 0x00	; 0
    16c6:	16 16       	cp	r1, r22
    16c8:	17 06       	cpc	r1, r23
    16ca:	1c f4       	brge	.+6      	; 0x16d2 <dtoa_prf+0x178>
    16cc:	fb 01       	movw	r30, r22
    16ce:	31 96       	adiw	r30, 0x01	; 1
    16d0:	02 c0       	rjmp	.+4      	; 0x16d6 <dtoa_prf+0x17c>
    16d2:	e1 e0       	ldi	r30, 0x01	; 1
    16d4:	f0 e0       	ldi	r31, 0x00	; 0
    16d6:	2e 0f       	add	r18, r30
    16d8:	3f 1f       	adc	r19, r31
    16da:	bb 20       	and	r11, r11
    16dc:	21 f0       	breq	.+8      	; 0x16e6 <dtoa_prf+0x18c>
    16de:	eb 2d       	mov	r30, r11
    16e0:	f0 e0       	ldi	r31, 0x00	; 0
    16e2:	31 96       	adiw	r30, 0x01	; 1
    16e4:	02 c0       	rjmp	.+4      	; 0x16ea <dtoa_prf+0x190>
    16e6:	e0 e0       	ldi	r30, 0x00	; 0
    16e8:	f0 e0       	ldi	r31, 0x00	; 0
    16ea:	2e 0f       	add	r18, r30
    16ec:	3f 1f       	adc	r19, r31
    16ee:	e1 2f       	mov	r30, r17
    16f0:	f0 e0       	ldi	r31, 0x00	; 0
    16f2:	2e 17       	cp	r18, r30
    16f4:	3f 07       	cpc	r19, r31
    16f6:	1c f4       	brge	.+6      	; 0x16fe <dtoa_prf+0x1a4>
    16f8:	12 1b       	sub	r17, r18
    16fa:	21 2f       	mov	r18, r17
    16fc:	01 c0       	rjmp	.+2      	; 0x1700 <dtoa_prf+0x1a6>
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	8e 2d       	mov	r24, r14
    1702:	88 71       	andi	r24, 0x18	; 24
    1704:	59 f4       	brne	.+22     	; 0x171c <dtoa_prf+0x1c2>
    1706:	f6 01       	movw	r30, r12
    1708:	82 2f       	mov	r24, r18
    170a:	30 e2       	ldi	r19, 0x20	; 32
    170c:	88 23       	and	r24, r24
    170e:	19 f0       	breq	.+6      	; 0x1716 <dtoa_prf+0x1bc>
    1710:	31 93       	st	Z+, r19
    1712:	81 50       	subi	r24, 0x01	; 1
    1714:	fb cf       	rjmp	.-10     	; 0x170c <dtoa_prf+0x1b2>
    1716:	c2 0e       	add	r12, r18
    1718:	d1 1c       	adc	r13, r1
    171a:	20 e0       	ldi	r18, 0x00	; 0
    171c:	99 23       	and	r25, r25
    171e:	29 f0       	breq	.+10     	; 0x172a <dtoa_prf+0x1d0>
    1720:	d6 01       	movw	r26, r12
    1722:	9c 93       	st	X, r25
    1724:	f6 01       	movw	r30, r12
    1726:	31 96       	adiw	r30, 0x01	; 1
    1728:	6f 01       	movw	r12, r30
    172a:	51 11       	cpse	r21, r1
    172c:	0b c0       	rjmp	.+22     	; 0x1744 <dtoa_prf+0x1ea>
    172e:	f6 01       	movw	r30, r12
    1730:	82 2f       	mov	r24, r18
    1732:	90 e3       	ldi	r25, 0x30	; 48
    1734:	88 23       	and	r24, r24
    1736:	19 f0       	breq	.+6      	; 0x173e <dtoa_prf+0x1e4>
    1738:	91 93       	st	Z+, r25
    173a:	81 50       	subi	r24, 0x01	; 1
    173c:	fb cf       	rjmp	.-10     	; 0x1734 <dtoa_prf+0x1da>
    173e:	c2 0e       	add	r12, r18
    1740:	d1 1c       	adc	r13, r1
    1742:	20 e0       	ldi	r18, 0x00	; 0
    1744:	0f 2d       	mov	r16, r15
    1746:	06 0f       	add	r16, r22
    1748:	9a 81       	ldd	r25, Y+2	; 0x02
    174a:	34 2f       	mov	r19, r20
    174c:	30 71       	andi	r19, 0x10	; 16
    174e:	44 ff       	sbrs	r20, 4
    1750:	03 c0       	rjmp	.+6      	; 0x1758 <dtoa_prf+0x1fe>
    1752:	91 33       	cpi	r25, 0x31	; 49
    1754:	09 f4       	brne	.+2      	; 0x1758 <dtoa_prf+0x1fe>
    1756:	01 50       	subi	r16, 0x01	; 1
    1758:	10 16       	cp	r1, r16
    175a:	24 f4       	brge	.+8      	; 0x1764 <dtoa_prf+0x20a>
    175c:	09 30       	cpi	r16, 0x09	; 9
    175e:	18 f0       	brcs	.+6      	; 0x1766 <dtoa_prf+0x20c>
    1760:	08 e0       	ldi	r16, 0x08	; 8
    1762:	01 c0       	rjmp	.+2      	; 0x1766 <dtoa_prf+0x20c>
    1764:	01 e0       	ldi	r16, 0x01	; 1
    1766:	ab 01       	movw	r20, r22
    1768:	77 ff       	sbrs	r23, 7
    176a:	02 c0       	rjmp	.+4      	; 0x1770 <dtoa_prf+0x216>
    176c:	40 e0       	ldi	r20, 0x00	; 0
    176e:	50 e0       	ldi	r21, 0x00	; 0
    1770:	fb 01       	movw	r30, r22
    1772:	e4 1b       	sub	r30, r20
    1774:	f5 0b       	sbc	r31, r21
    1776:	a1 e0       	ldi	r26, 0x01	; 1
    1778:	b0 e0       	ldi	r27, 0x00	; 0
    177a:	ac 0f       	add	r26, r28
    177c:	bd 1f       	adc	r27, r29
    177e:	ea 0f       	add	r30, r26
    1780:	fb 1f       	adc	r31, r27
    1782:	8e e2       	ldi	r24, 0x2E	; 46
    1784:	a8 2e       	mov	r10, r24
    1786:	4b 01       	movw	r8, r22
    1788:	80 1a       	sub	r8, r16
    178a:	91 08       	sbc	r9, r1
    178c:	0b 2d       	mov	r16, r11
    178e:	10 e0       	ldi	r17, 0x00	; 0
    1790:	11 95       	neg	r17
    1792:	01 95       	neg	r16
    1794:	11 09       	sbc	r17, r1
    1796:	4f 3f       	cpi	r20, 0xFF	; 255
    1798:	bf ef       	ldi	r27, 0xFF	; 255
    179a:	5b 07       	cpc	r21, r27
    179c:	21 f4       	brne	.+8      	; 0x17a6 <dtoa_prf+0x24c>
    179e:	d6 01       	movw	r26, r12
    17a0:	ac 92       	st	X, r10
    17a2:	11 96       	adiw	r26, 0x01	; 1
    17a4:	6d 01       	movw	r12, r26
    17a6:	64 17       	cp	r22, r20
    17a8:	75 07       	cpc	r23, r21
    17aa:	2c f0       	brlt	.+10     	; 0x17b6 <dtoa_prf+0x25c>
    17ac:	84 16       	cp	r8, r20
    17ae:	95 06       	cpc	r9, r21
    17b0:	14 f4       	brge	.+4      	; 0x17b6 <dtoa_prf+0x25c>
    17b2:	81 81       	ldd	r24, Z+1	; 0x01
    17b4:	01 c0       	rjmp	.+2      	; 0x17b8 <dtoa_prf+0x25e>
    17b6:	80 e3       	ldi	r24, 0x30	; 48
    17b8:	41 50       	subi	r20, 0x01	; 1
    17ba:	51 09       	sbc	r21, r1
    17bc:	31 96       	adiw	r30, 0x01	; 1
    17be:	d6 01       	movw	r26, r12
    17c0:	11 96       	adiw	r26, 0x01	; 1
    17c2:	7d 01       	movw	r14, r26
    17c4:	40 17       	cp	r20, r16
    17c6:	51 07       	cpc	r21, r17
    17c8:	24 f0       	brlt	.+8      	; 0x17d2 <dtoa_prf+0x278>
    17ca:	d6 01       	movw	r26, r12
    17cc:	8c 93       	st	X, r24
    17ce:	67 01       	movw	r12, r14
    17d0:	e2 cf       	rjmp	.-60     	; 0x1796 <dtoa_prf+0x23c>
    17d2:	64 17       	cp	r22, r20
    17d4:	75 07       	cpc	r23, r21
    17d6:	39 f4       	brne	.+14     	; 0x17e6 <dtoa_prf+0x28c>
    17d8:	96 33       	cpi	r25, 0x36	; 54
    17da:	20 f4       	brcc	.+8      	; 0x17e4 <dtoa_prf+0x28a>
    17dc:	95 33       	cpi	r25, 0x35	; 53
    17de:	19 f4       	brne	.+6      	; 0x17e6 <dtoa_prf+0x28c>
    17e0:	31 11       	cpse	r19, r1
    17e2:	01 c0       	rjmp	.+2      	; 0x17e6 <dtoa_prf+0x28c>
    17e4:	81 e3       	ldi	r24, 0x31	; 49
    17e6:	f6 01       	movw	r30, r12
    17e8:	80 83       	st	Z, r24
    17ea:	f7 01       	movw	r30, r14
    17ec:	82 2f       	mov	r24, r18
    17ee:	90 e2       	ldi	r25, 0x20	; 32
    17f0:	88 23       	and	r24, r24
    17f2:	19 f0       	breq	.+6      	; 0x17fa <dtoa_prf+0x2a0>
    17f4:	91 93       	st	Z+, r25
    17f6:	81 50       	subi	r24, 0x01	; 1
    17f8:	fb cf       	rjmp	.-10     	; 0x17f0 <dtoa_prf+0x296>
    17fa:	f7 01       	movw	r30, r14
    17fc:	e2 0f       	add	r30, r18
    17fe:	f1 1d       	adc	r31, r1
    1800:	10 82       	st	Z, r1
    1802:	80 e0       	ldi	r24, 0x00	; 0
    1804:	90 e0       	ldi	r25, 0x00	; 0
    1806:	29 96       	adiw	r28, 0x09	; 9
    1808:	ec e0       	ldi	r30, 0x0C	; 12
    180a:	0c 94 01 0d 	jmp	0x1a02	; 0x1a02 <__epilogue_restores__+0xc>

0000180e <__ftoa_engine>:
    180e:	28 30       	cpi	r18, 0x08	; 8
    1810:	08 f0       	brcs	.+2      	; 0x1814 <__ftoa_engine+0x6>
    1812:	27 e0       	ldi	r18, 0x07	; 7
    1814:	33 27       	eor	r19, r19
    1816:	da 01       	movw	r26, r20
    1818:	99 0f       	add	r25, r25
    181a:	31 1d       	adc	r19, r1
    181c:	87 fd       	sbrc	r24, 7
    181e:	91 60       	ori	r25, 0x01	; 1
    1820:	00 96       	adiw	r24, 0x00	; 0
    1822:	61 05       	cpc	r22, r1
    1824:	71 05       	cpc	r23, r1
    1826:	39 f4       	brne	.+14     	; 0x1836 <__ftoa_engine+0x28>
    1828:	32 60       	ori	r19, 0x02	; 2
    182a:	2e 5f       	subi	r18, 0xFE	; 254
    182c:	3d 93       	st	X+, r19
    182e:	30 e3       	ldi	r19, 0x30	; 48
    1830:	2a 95       	dec	r18
    1832:	e1 f7       	brne	.-8      	; 0x182c <__ftoa_engine+0x1e>
    1834:	08 95       	ret
    1836:	9f 3f       	cpi	r25, 0xFF	; 255
    1838:	30 f0       	brcs	.+12     	; 0x1846 <__ftoa_engine+0x38>
    183a:	80 38       	cpi	r24, 0x80	; 128
    183c:	71 05       	cpc	r23, r1
    183e:	61 05       	cpc	r22, r1
    1840:	09 f0       	breq	.+2      	; 0x1844 <__ftoa_engine+0x36>
    1842:	3c 5f       	subi	r19, 0xFC	; 252
    1844:	3c 5f       	subi	r19, 0xFC	; 252
    1846:	3d 93       	st	X+, r19
    1848:	91 30       	cpi	r25, 0x01	; 1
    184a:	08 f0       	brcs	.+2      	; 0x184e <__ftoa_engine+0x40>
    184c:	80 68       	ori	r24, 0x80	; 128
    184e:	91 1d       	adc	r25, r1
    1850:	df 93       	push	r29
    1852:	cf 93       	push	r28
    1854:	1f 93       	push	r17
    1856:	0f 93       	push	r16
    1858:	ff 92       	push	r15
    185a:	ef 92       	push	r14
    185c:	19 2f       	mov	r17, r25
    185e:	98 7f       	andi	r25, 0xF8	; 248
    1860:	96 95       	lsr	r25
    1862:	e9 2f       	mov	r30, r25
    1864:	96 95       	lsr	r25
    1866:	96 95       	lsr	r25
    1868:	e9 0f       	add	r30, r25
    186a:	ff 27       	eor	r31, r31
    186c:	ee 53       	subi	r30, 0x3E	; 62
    186e:	ff 4f       	sbci	r31, 0xFF	; 255
    1870:	99 27       	eor	r25, r25
    1872:	33 27       	eor	r19, r19
    1874:	ee 24       	eor	r14, r14
    1876:	ff 24       	eor	r15, r15
    1878:	a7 01       	movw	r20, r14
    187a:	e7 01       	movw	r28, r14
    187c:	05 90       	lpm	r0, Z+
    187e:	08 94       	sec
    1880:	07 94       	ror	r0
    1882:	28 f4       	brcc	.+10     	; 0x188e <__ftoa_engine+0x80>
    1884:	36 0f       	add	r19, r22
    1886:	e7 1e       	adc	r14, r23
    1888:	f8 1e       	adc	r15, r24
    188a:	49 1f       	adc	r20, r25
    188c:	51 1d       	adc	r21, r1
    188e:	66 0f       	add	r22, r22
    1890:	77 1f       	adc	r23, r23
    1892:	88 1f       	adc	r24, r24
    1894:	99 1f       	adc	r25, r25
    1896:	06 94       	lsr	r0
    1898:	a1 f7       	brne	.-24     	; 0x1882 <__ftoa_engine+0x74>
    189a:	05 90       	lpm	r0, Z+
    189c:	07 94       	ror	r0
    189e:	28 f4       	brcc	.+10     	; 0x18aa <__ftoa_engine+0x9c>
    18a0:	e7 0e       	add	r14, r23
    18a2:	f8 1e       	adc	r15, r24
    18a4:	49 1f       	adc	r20, r25
    18a6:	56 1f       	adc	r21, r22
    18a8:	c1 1d       	adc	r28, r1
    18aa:	77 0f       	add	r23, r23
    18ac:	88 1f       	adc	r24, r24
    18ae:	99 1f       	adc	r25, r25
    18b0:	66 1f       	adc	r22, r22
    18b2:	06 94       	lsr	r0
    18b4:	a1 f7       	brne	.-24     	; 0x189e <__ftoa_engine+0x90>
    18b6:	05 90       	lpm	r0, Z+
    18b8:	07 94       	ror	r0
    18ba:	28 f4       	brcc	.+10     	; 0x18c6 <__ftoa_engine+0xb8>
    18bc:	f8 0e       	add	r15, r24
    18be:	49 1f       	adc	r20, r25
    18c0:	56 1f       	adc	r21, r22
    18c2:	c7 1f       	adc	r28, r23
    18c4:	d1 1d       	adc	r29, r1
    18c6:	88 0f       	add	r24, r24
    18c8:	99 1f       	adc	r25, r25
    18ca:	66 1f       	adc	r22, r22
    18cc:	77 1f       	adc	r23, r23
    18ce:	06 94       	lsr	r0
    18d0:	a1 f7       	brne	.-24     	; 0x18ba <__ftoa_engine+0xac>
    18d2:	05 90       	lpm	r0, Z+
    18d4:	07 94       	ror	r0
    18d6:	20 f4       	brcc	.+8      	; 0x18e0 <__ftoa_engine+0xd2>
    18d8:	49 0f       	add	r20, r25
    18da:	56 1f       	adc	r21, r22
    18dc:	c7 1f       	adc	r28, r23
    18de:	d8 1f       	adc	r29, r24
    18e0:	99 0f       	add	r25, r25
    18e2:	66 1f       	adc	r22, r22
    18e4:	77 1f       	adc	r23, r23
    18e6:	88 1f       	adc	r24, r24
    18e8:	06 94       	lsr	r0
    18ea:	a9 f7       	brne	.-22     	; 0x18d6 <__ftoa_engine+0xc8>
    18ec:	84 91       	lpm	r24, Z
    18ee:	10 95       	com	r17
    18f0:	17 70       	andi	r17, 0x07	; 7
    18f2:	41 f0       	breq	.+16     	; 0x1904 <__ftoa_engine+0xf6>
    18f4:	d6 95       	lsr	r29
    18f6:	c7 95       	ror	r28
    18f8:	57 95       	ror	r21
    18fa:	47 95       	ror	r20
    18fc:	f7 94       	ror	r15
    18fe:	e7 94       	ror	r14
    1900:	1a 95       	dec	r17
    1902:	c1 f7       	brne	.-16     	; 0x18f4 <__ftoa_engine+0xe6>
    1904:	e8 e6       	ldi	r30, 0x68	; 104
    1906:	f0 e0       	ldi	r31, 0x00	; 0
    1908:	68 94       	set
    190a:	15 90       	lpm	r1, Z+
    190c:	15 91       	lpm	r17, Z+
    190e:	35 91       	lpm	r19, Z+
    1910:	65 91       	lpm	r22, Z+
    1912:	95 91       	lpm	r25, Z+
    1914:	05 90       	lpm	r0, Z+
    1916:	7f e2       	ldi	r23, 0x2F	; 47
    1918:	73 95       	inc	r23
    191a:	e1 18       	sub	r14, r1
    191c:	f1 0a       	sbc	r15, r17
    191e:	43 0b       	sbc	r20, r19
    1920:	56 0b       	sbc	r21, r22
    1922:	c9 0b       	sbc	r28, r25
    1924:	d0 09       	sbc	r29, r0
    1926:	c0 f7       	brcc	.-16     	; 0x1918 <__ftoa_engine+0x10a>
    1928:	e1 0c       	add	r14, r1
    192a:	f1 1e       	adc	r15, r17
    192c:	43 1f       	adc	r20, r19
    192e:	56 1f       	adc	r21, r22
    1930:	c9 1f       	adc	r28, r25
    1932:	d0 1d       	adc	r29, r0
    1934:	7e f4       	brtc	.+30     	; 0x1954 <__ftoa_engine+0x146>
    1936:	70 33       	cpi	r23, 0x30	; 48
    1938:	11 f4       	brne	.+4      	; 0x193e <__ftoa_engine+0x130>
    193a:	8a 95       	dec	r24
    193c:	e6 cf       	rjmp	.-52     	; 0x190a <__ftoa_engine+0xfc>
    193e:	e8 94       	clt
    1940:	01 50       	subi	r16, 0x01	; 1
    1942:	30 f0       	brcs	.+12     	; 0x1950 <__ftoa_engine+0x142>
    1944:	08 0f       	add	r16, r24
    1946:	0a f4       	brpl	.+2      	; 0x194a <__ftoa_engine+0x13c>
    1948:	00 27       	eor	r16, r16
    194a:	02 17       	cp	r16, r18
    194c:	08 f4       	brcc	.+2      	; 0x1950 <__ftoa_engine+0x142>
    194e:	20 2f       	mov	r18, r16
    1950:	23 95       	inc	r18
    1952:	02 2f       	mov	r16, r18
    1954:	7a 33       	cpi	r23, 0x3A	; 58
    1956:	28 f0       	brcs	.+10     	; 0x1962 <__ftoa_engine+0x154>
    1958:	79 e3       	ldi	r23, 0x39	; 57
    195a:	7d 93       	st	X+, r23
    195c:	2a 95       	dec	r18
    195e:	e9 f7       	brne	.-6      	; 0x195a <__ftoa_engine+0x14c>
    1960:	10 c0       	rjmp	.+32     	; 0x1982 <__ftoa_engine+0x174>
    1962:	7d 93       	st	X+, r23
    1964:	2a 95       	dec	r18
    1966:	89 f6       	brne	.-94     	; 0x190a <__ftoa_engine+0xfc>
    1968:	06 94       	lsr	r0
    196a:	97 95       	ror	r25
    196c:	67 95       	ror	r22
    196e:	37 95       	ror	r19
    1970:	17 95       	ror	r17
    1972:	17 94       	ror	r1
    1974:	e1 18       	sub	r14, r1
    1976:	f1 0a       	sbc	r15, r17
    1978:	43 0b       	sbc	r20, r19
    197a:	56 0b       	sbc	r21, r22
    197c:	c9 0b       	sbc	r28, r25
    197e:	d0 09       	sbc	r29, r0
    1980:	98 f0       	brcs	.+38     	; 0x19a8 <__ftoa_engine+0x19a>
    1982:	23 95       	inc	r18
    1984:	7e 91       	ld	r23, -X
    1986:	73 95       	inc	r23
    1988:	7a 33       	cpi	r23, 0x3A	; 58
    198a:	08 f0       	brcs	.+2      	; 0x198e <__ftoa_engine+0x180>
    198c:	70 e3       	ldi	r23, 0x30	; 48
    198e:	7c 93       	st	X, r23
    1990:	20 13       	cpse	r18, r16
    1992:	b8 f7       	brcc	.-18     	; 0x1982 <__ftoa_engine+0x174>
    1994:	7e 91       	ld	r23, -X
    1996:	70 61       	ori	r23, 0x10	; 16
    1998:	7d 93       	st	X+, r23
    199a:	30 f0       	brcs	.+12     	; 0x19a8 <__ftoa_engine+0x19a>
    199c:	83 95       	inc	r24
    199e:	71 e3       	ldi	r23, 0x31	; 49
    19a0:	7d 93       	st	X+, r23
    19a2:	70 e3       	ldi	r23, 0x30	; 48
    19a4:	2a 95       	dec	r18
    19a6:	e1 f7       	brne	.-8      	; 0x19a0 <__ftoa_engine+0x192>
    19a8:	11 24       	eor	r1, r1
    19aa:	ef 90       	pop	r14
    19ac:	ff 90       	pop	r15
    19ae:	0f 91       	pop	r16
    19b0:	1f 91       	pop	r17
    19b2:	cf 91       	pop	r28
    19b4:	df 91       	pop	r29
    19b6:	99 27       	eor	r25, r25
    19b8:	87 fd       	sbrc	r24, 7
    19ba:	90 95       	com	r25
    19bc:	08 95       	ret

000019be <__prologue_saves__>:
    19be:	2f 92       	push	r2
    19c0:	3f 92       	push	r3
    19c2:	4f 92       	push	r4
    19c4:	5f 92       	push	r5
    19c6:	6f 92       	push	r6
    19c8:	7f 92       	push	r7
    19ca:	8f 92       	push	r8
    19cc:	9f 92       	push	r9
    19ce:	af 92       	push	r10
    19d0:	bf 92       	push	r11
    19d2:	cf 92       	push	r12
    19d4:	df 92       	push	r13
    19d6:	ef 92       	push	r14
    19d8:	ff 92       	push	r15
    19da:	0f 93       	push	r16
    19dc:	1f 93       	push	r17
    19de:	cf 93       	push	r28
    19e0:	df 93       	push	r29
    19e2:	cd b7       	in	r28, 0x3d	; 61
    19e4:	de b7       	in	r29, 0x3e	; 62
    19e6:	ca 1b       	sub	r28, r26
    19e8:	db 0b       	sbc	r29, r27
    19ea:	0f b6       	in	r0, 0x3f	; 63
    19ec:	f8 94       	cli
    19ee:	de bf       	out	0x3e, r29	; 62
    19f0:	0f be       	out	0x3f, r0	; 63
    19f2:	cd bf       	out	0x3d, r28	; 61
    19f4:	09 94       	ijmp

000019f6 <__epilogue_restores__>:
    19f6:	2a 88       	ldd	r2, Y+18	; 0x12
    19f8:	39 88       	ldd	r3, Y+17	; 0x11
    19fa:	48 88       	ldd	r4, Y+16	; 0x10
    19fc:	5f 84       	ldd	r5, Y+15	; 0x0f
    19fe:	6e 84       	ldd	r6, Y+14	; 0x0e
    1a00:	7d 84       	ldd	r7, Y+13	; 0x0d
    1a02:	8c 84       	ldd	r8, Y+12	; 0x0c
    1a04:	9b 84       	ldd	r9, Y+11	; 0x0b
    1a06:	aa 84       	ldd	r10, Y+10	; 0x0a
    1a08:	b9 84       	ldd	r11, Y+9	; 0x09
    1a0a:	c8 84       	ldd	r12, Y+8	; 0x08
    1a0c:	df 80       	ldd	r13, Y+7	; 0x07
    1a0e:	ee 80       	ldd	r14, Y+6	; 0x06
    1a10:	fd 80       	ldd	r15, Y+5	; 0x05
    1a12:	0c 81       	ldd	r16, Y+4	; 0x04
    1a14:	1b 81       	ldd	r17, Y+3	; 0x03
    1a16:	aa 81       	ldd	r26, Y+2	; 0x02
    1a18:	b9 81       	ldd	r27, Y+1	; 0x01
    1a1a:	ce 0f       	add	r28, r30
    1a1c:	d1 1d       	adc	r29, r1
    1a1e:	0f b6       	in	r0, 0x3f	; 63
    1a20:	f8 94       	cli
    1a22:	de bf       	out	0x3e, r29	; 62
    1a24:	0f be       	out	0x3f, r0	; 63
    1a26:	cd bf       	out	0x3d, r28	; 61
    1a28:	ed 01       	movw	r28, r26
    1a2a:	08 95       	ret

00001a2c <_exit>:
    1a2c:	f8 94       	cli

00001a2e <__stop_program>:
    1a2e:	ff cf       	rjmp	.-2      	; 0x1a2e <__stop_program>
